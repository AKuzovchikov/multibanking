2018/05/06 09:17:40,857 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.web.BankAccessControllerIT], using SpringBootContextLoader 
2018/05/06 09:17:40,868 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.BankAccessControllerIT]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 09:17:40,869 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.web.BankAccessControllerIT]: BankAccessControllerIT does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 09:17:41,012 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.web.BankAccessControllerIT 
2018/05/06 09:17:41,177 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 09:17:41,197 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@407a7f2a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ea5b703, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2a7ed1f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3fa247d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2cb2fc20, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@4f4c4b1a, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@723e88f9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f0fd5a0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@64e7619d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@495ee280, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fa1c212, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ea2bc93] 
2018/05/06 09:17:41,441 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 09:17:41,943 [main] [INFO ] [BankAccessControllerIT        ] Starting BankAccessControllerIT on Franciss-MacBook-Pro.local with PID 23097 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 09:17:41,944 [main] [DEBUG] [BankAccessControllerIT        ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 09:17:41,947 [main] [INFO ] [BankAccessControllerIT        ] The following profiles are active: InMemory,IntegrationTest                                          
2018/05/06 09:17:42,015 [main] [INFO ] [AnnotationConfigServletWebServerApplicationContext] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35390ee3: startup date [Sun May 06 09:17:42 CEST 2018]; root of context hierarchy 
2018/05/06 09:17:42,687 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'resourceServerProcessor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=resourceServerProcessingConfiguration; factoryMethodName=resourceServerProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/sts/resourceserver/ResourceServerProcessingConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=de.adorsys.sts.token.TokenCoreConfiguration; factoryMethodName=resourceServerProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/sts/token/TokenCoreConfiguration.class]] 
2018/05/06 09:17:42,692 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'analyticsService' with a different definition: replacing [Generic bean: class [de.adorsys.multibanking.service.analytics.AnalyticsService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/fpo/dev/multibanking-develop/multibanking-rest/target/classes/de/adorsys/multibanking/service/analytics/AnalyticsService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=analyticsServiceConfig; factoryMethodName=analyticsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/core/AnalyticsServiceConfig.class]] 
2018/05/06 09:17:42,702 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'systemIDAuth' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=systemAuthConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/service/SystemAuthConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=controllerUnitTestConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/web/ControllerUnitTestConfig.class]] 
2018/05/06 09:17:43,501 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5105defc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:17:43,511 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:17:43,513 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@26fb4d06' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:17:43,517 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$75da81ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:17:43,525 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:17:43,815 [main] [INFO ] [TomcatWebServer               ] Tomcat initialized with port(s): 8080 (http)                                                         
2018/05/06 09:17:43,831 [main] [INFO ] [Http11NioProtocol             ] Initializing ProtocolHandler ["http-nio-8080"]                                                       
2018/05/06 09:17:43,841 [main] [INFO ] [StandardService               ] Starting service [Tomcat]                                                                            
2018/05/06 09:17:43,841 [main] [INFO ] [StandardEngine                ] Starting Servlet Engine: Apache Tomcat/8.5.29                                                        
2018/05/06 09:17:43,850 [localhost-startStop-1] [INFO ] [AprLifecycleListener          ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/fpo/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] 
2018/05/06 09:17:43,959 [localhost-startStop-1] [INFO ] [[/]                           ] Initializing Spring embedded WebApplicationContext                                                   
2018/05/06 09:17:43,959 [localhost-startStop-1] [INFO ] [ContextLoader                 ] Root WebApplicationContext: initialization completed in 1947 ms                                      
2018/05/06 09:17:44,596 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'characterEncodingFilter' to: [/*]                                                   
2018/05/06 09:17:44,596 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]                                                    
2018/05/06 09:17:44,597 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'httpPutFormContentFilter' to: [/*]                                                  
2018/05/06 09:17:44,597 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'requestContextFilter' to: [/*]                                                      
2018/05/06 09:17:44,597 [localhost-startStop-1] [INFO ] [DelegatingFilterProxyRegistrationBean] Mapping filter: 'springSecurityFilterChain' to: [/*]                                                 
2018/05/06 09:17:44,597 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'httpTraceFilter' to: [/*]                                                           
2018/05/06 09:17:44,597 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'webMvcMetricsFilter' to: [/*]                                                       
2018/05/06 09:17:44,597 [localhost-startStop-1] [INFO ] [ServletRegistrationBean       ] Servlet dispatcherServlet mapped to [/]                                                              
2018/05/06 09:17:45,097 [main] [INFO ] [FileSystemParamParser         ] parse:                                                                                               
2018/05/06 09:17:45,098 [main] [INFO ] [FileSystemParamParser         ] parse:                                                                                               
2018/05/06 09:17:45,098 [main] [INFO ] [ExtendedStoreConnectionFactory] 
***************************************
*                                     *
*  USE FILE SYSTEM                    *
*  basedir: target/filesystemstorage  *
*                                     *
***************************************
 
2018/05/06 09:17:45,689 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}}                         
2018/05/06 09:17:45,690 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:17:45,690 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}} -> true              
2018/05/06 09:17:45,738 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 09:17:45,739 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 09:17:45,740 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 09:17:45,740 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 09:17:45,742 [main] [WARN ] [FinapiBanking                 ] missing env properties FINAPI_CLIENT_ID and/or FINAPI_SECRET                                         
2018/05/06 09:17:46,119 [main] [INFO ] [UserDetailsServiceAutoConfiguration] 

Using generated security password: d449a6cd-b3c5-4cf6-8d3f-798430130aea
                           
2018/05/06 09:17:46,291 [main] [INFO ] [DefaultSecurityFilterChain    ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a2773a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@27c53c32, org.springframework.security.web.header.HeaderWriterFilter@19002b34, org.springframework.web.filter.CorsFilter@78b0ec3a, org.springframework.security.web.authentication.logout.LogoutFilter@1e92c3b6, de.adorsys.sts.filter.JWTAuthenticationFilter@46612bfc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6aff97d6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5463f035, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f213a2, org.springframework.security.web.session.SessionManagementFilter@783b3aa0, org.springframework.security.web.access.ExceptionTranslationFilter@7c9beb51, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3915e7c3] 
2018/05/06 09:17:46,380 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 09:17:46,503 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35390ee3: startup date [Sun May 06 09:17:42 CEST 2018]; root of context hierarchy 
2018/05/06 09:17:46,601 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 09:17:46,602 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 09:17:46,602 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:17:46,605 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:17:46,606 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/analytics],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.AccountAnalyticsController.getAccountAnalytics(java.lang.String,java.lang.String) 
2018/05/06 09:17:46,609 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createCategory(de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 09:17:46,610 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getCustomCategories() 
2018/05/06 09:17:46,610 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getStaticCategories() 
2018/05/06 09:17:46,610 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCustomCategory(java.lang.String,de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 09:17:46,610 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCategory(java.lang.String,de.adorsys.multibanking.domain.CategoryEntity) 
2018/05/06 09:17:46,611 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateCustomCategories(java.util.List<de.adorsys.multibanking.domain.CustomCategoryEntity>) 
2018/05/06 09:17:46,611 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateStaticCategories(java.util.List<de.adorsys.multibanking.domain.CategoryEntity>) 
2018/05/06 09:17:46,611 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceCustomCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:17:46,611 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceStaticCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:17:46,612 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategory(java.lang.String) 
2018/05/06 09:17:46,612 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategory(java.lang.String) 
2018/05/06 09:17:46,612 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategories(java.util.List<java.lang.String>) 
2018/05/06 09:17:46,612 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategories(java.util.List<java.lang.String>) 
2018/05/06 09:17:46,614 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createRule(de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 09:17:46,615 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getCustomRules() 
2018/05/06 09:17:46,615 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getStaticRules() 
2018/05/06 09:17:46,615 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateCustomRule(java.lang.String,de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 09:17:46,615 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateRule(java.lang.String,de.adorsys.multibanking.domain.RuleEntity) 
2018/05/06 09:17:46,616 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateCustomRules(java.util.List<de.adorsys.multibanking.domain.CustomRuleEntity>) 
2018/05/06 09:17:46,616 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateStaticRules(java.util.List<de.adorsys.multibanking.domain.RuleEntity>) 
2018/05/06 09:17:46,616 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceCustomRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:17:46,616 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceStaticRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:17:46,617 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRule(java.lang.String) 
2018/05/06 09:17:46,617 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRule(java.lang.String) 
2018/05/06 09:17:46,617 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRules(java.util.List<java.lang.String>) 
2018/05/06 09:17:46,617 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRules(java.util.List<java.lang.String>) 
2018/05/06 09:17:46,620 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[GET],produces=[image/png]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.ImageController.getImage(java.lang.String) throws java.io.IOException 
2018/05/06 09:17:46,620 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[PUT],consumes=[image/png]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.putImage(java.lang.String,org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:17:46,620 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}/release],methods=[POST]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.patchImage(java.lang.String) 
2018/05/06 09:17:46,621 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bank],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.banks.BankController.loadBanks() 
2018/05/06 09:17:46,621 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.createPayment(java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$CreatePaymentRequest) 
2018/05/06 09:17:46,621 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}/submit],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.submitPayment(java.lang.String,java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$SubmitPaymentRequest) 
2018/05/06 09:17:46,622 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}],methods=[GET]}" onto public org.springframework.hateoas.Resource<de.adorsys.multibanking.domain.PaymentEntity> de.adorsys.multibanking.web.payment.PaymentController.getPayment(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:17:46,622 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<de.adorsys.multibanking.domain.UserAgentCredentials> de.adorsys.multibanking.web.user.UserAgentCredentialsController.getUserAgentCredentials(java.lang.String) 
2018/05/06 09:17:46,622 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[PUT],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.user.UserAgentCredentialsController.postUserAgentCredentials(java.lang.String,de.adorsys.multibanking.domain.UserAgentCredentials) 
2018/05/06 09:17:46,623 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.user.UserDataController.loadUserData() 
2018/05/06 09:17:46,623 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/token/password-grant],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> de.adorsys.sts.token.passwordgrant.PasswordGrantController.passwordGrant(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:17:46,624 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/pop],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> de.adorsys.sts.pop.PopController.getPublicKeys() 
2018/05/06 09:17:46,626 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 09:17:46,626 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 09:17:46,713 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 09:17:46,714 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 09:17:46,736 [main] [INFO ] [ExceptionHandlerExceptionResolver] Detected @ExceptionHandler methods in exceptionHandlerAdvice                                         
2018/05/06 09:17:47,131 [main] [INFO ] [EndpointLinksResolver         ] Exposing 2 endpoint(s) beneath base path '/actuator'                                                 
2018/05/06 09:17:47,140 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 09:17:47,141 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 09:17:47,142 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 09:17:47,453 [main] [INFO ] [ScheduledAnnotationBeanPostProcessor] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing                        
2018/05/06 09:17:47,461 [main] [INFO ] [Http11NioProtocol             ] Starting ProtocolHandler ["http-nio-8080"]                                                           
2018/05/06 09:17:47,478 [main] [INFO ] [NioSelectorPool               ] Using a shared selector for servlet write/read                                                       
2018/05/06 09:17:47,489 [main] [INFO ] [TomcatWebServer               ] Tomcat started on port(s): 8080 (http) with context path ''                                          
2018/05/06 09:17:47,493 [main] [INFO ] [BankAccessControllerIT        ] Started BankAccessControllerIT in 5.892 seconds (JVM running for 7.97)                               
2018/05/06 09:17:47,497 [main] [INFO ] [KeyStoreInitializationRunner  ] Check if keys for keystore are needed to be initialized...                                           
2018/05/06 09:17:48,972 [main] [INFO ] [KeyStoreInitializationRunner  ] Key initialization completed.                                                                        
2018/05/06 09:17:49,365 [http-nio-8080-exec-1] [INFO ] [[/]                           ] Initializing Spring FrameworkServlet 'dispatcherServlet'                                             
2018/05/06 09:17:49,365 [http-nio-8080-exec-1] [INFO ] [DispatcherServlet             ] FrameworkServlet 'dispatcherServlet': initialization started                                         
2018/05/06 09:17:49,384 [http-nio-8080-exec-1] [INFO ] [DispatcherServlet             ] FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms                              
2018/05/06 09:17:49,441 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:49,442 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 09:17:49,442 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:49,475 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:49,476 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:49,476 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> false 
2018/05/06 09:17:49,476 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'61***95'}} 
2018/05/06 09:17:49,476 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:49,476 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:49,476 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> false 
2018/05/06 09:17:49,478 [http-nio-8080-exec-1] [INFO ] [FileSystemExtendedStorageConnection] created folder target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:49,478 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:49,478 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.zip 
2018/05/06 09:17:49,480 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532 
2018/05/06 09:17:49,480 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2                            
2018/05/06 09:17:52,141 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,143 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.zip.0724a613-7224-47b3-ba81-8116d10aa707 
2018/05/06 09:17:52,151 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 09:17:52,157 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,158 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,158 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:52,160 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,163 [http-nio-8080-exec-1] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,163 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,168 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,261 [http-nio-8080-exec-1] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W'} 
2018/05/06 09:17:52,262 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,262 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,262 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e.zip 
2018/05/06 09:17:52,262 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,338 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W'} 
2018/05/06 09:17:52,338 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,339 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,339 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e.zip.c3eb35df-0a1e-4e3f-b4cf-341a752e3196 
2018/05/06 09:17:52,340 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,340 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,341 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,341 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,342 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey.zip.cbe961f1-964f-46e2-9831-ad2b0b80c0de 
2018/05/06 09:17:52,342 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 09:17:52,342 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,342 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:52,343 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'61***95'}} DocumentFQN{'README.txt'} 
2018/05/06 09:17:52,343 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}}      
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey.zip 
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:17:52,344 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,345 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,345 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,345 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,349 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,349 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e.zip 
2018/05/06 09:17:52,349 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,349 [http-nio-8080-exec-1] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,349 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,349 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,350 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W'} 
2018/05/06 09:17:52,362 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,362 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:52,362 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/README.txt}                  
2018/05/06 09:17:52,363 [http-nio-8080-exec-1] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}} 
2018/05/06 09:17:52,367 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}                                   
2018/05/06 09:17:52,367 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,367 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKd3324698-2aec-4df7-b896-eac6b8f63e4e"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 09:17:52,368 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/README.txt.zip.5c3965d6-b093-4a0d-b434-b7d7e1038676 
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/README.txt}               
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'61***95'}} DocumentFQN{'README.txt'} 
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'61***95'}} 
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/sts_user_data.aes}       
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/sts_user_data.aes.zip 
2018/05/06 09:17:52,369 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/sts_user_data.aes}    
2018/05/06 09:17:52,371 [http-nio-8080-exec-1] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:17:52,371 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/sts_user_data.aes}       
2018/05/06 09:17:52,371 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/sts_user_data.aes.zip 
2018/05/06 09:17:52,371 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/sts_user_data.aes}    
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'61***95'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}}      
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey.zip 
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,391 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:17:52,392 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:52,392 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,392 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,392 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,397 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,397 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e.zip 
2018/05/06 09:17:52,397 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,397 [http-nio-8080-exec-1] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e} 
2018/05/06 09:17:52,397 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,397 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DKd3324698-2aec-4df7-b896-eac6b8f63e4e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,398 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532NSP9W'} 
2018/05/06 09:17:52,403 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,403 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:52,403 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/sts_user_data.aes}           
2018/05/06 09:17:52,403 [http-nio-8080-exec-1] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}, DocumentKey{A555....4058}} 
2018/05/06 09:17:52,403 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKd3324698-2aec-4df7-b896-eac6b8f63e4e'}                                   
2018/05/06 09:17:52,404 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 
2018/05/06 09:17:52,404 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/sts_user_data.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKd3324698-2aec-4df7-b896-eac6b8f63e4e"
    }
  },
  "size": 86
}with UTF-8 
2018/05/06 09:17:52,404 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/33b0941d-ad08-4232-ae3f-58d1a81c0d19/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/sts_user_data.aes.zip.e4c2673e-da57-423a-90c8-f582845d5260 
2018/05/06 09:17:52,405 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/sts_user_data.aes}        
2018/05/06 09:17:52,405 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'61***95'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 09:17:52,427 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:52,427 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 09:17:52,428 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:52,467 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 0                                                 
2018/05/06 09:17:52,468 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:52,468 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 09:17:52,468 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 09:17:52,523 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 0                                                 
2018/05/06 09:17:52,523 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:52,523 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 09:17:52,523 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 09:17:52,588 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 09:17:52,589 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 09:17:52,589 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:17:52,590 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:17:52,626 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:52,626 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 09:17:52,626 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:52,649 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:17:52,649 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:17:52,649 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 09:17:52,649 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 09:17:52,650 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 09:17:52,658 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:52,661 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 09:17:52,662 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 09:17:52,662 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 09:17:52,662 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 09:17:52,662 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 09:17:52,662 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 09:17:52,662 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:17:52,664 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:17:52,665 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 09:17:52,666 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 09:17:52,666 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:17:52,666 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,671 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5} 
2018/05/06 09:17:52,671 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5.zip 
2018/05/06 09:17:52,672 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5} 
2018/05/06 09:17:52,672 [http-nio-8080-exec-4] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5} 
2018/05/06 09:17:52,672 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:17:52,672 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DBCJ3K"
    }
  }
}with UTF-8 
2018/05/06 09:17:52,672 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DBCJ3K'}                              
2018/05/06 09:17:52,680 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 09:17:52,680 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'}, DocumentKey{BB0A....33BC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 09:17:52,680 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 09:17:52,681 [http-nio-8080-exec-4] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'}, DocumentKey{BB0A....33BC}} 
2018/05/06 09:17:52,681 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'}                                   
2018/05/06 09:17:52,681 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:17:52,681 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKca235088-70df-40be-848e-89200ad8c7f5"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 09:17:52,681 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.d967fd63-1b70-4007-b9b0-5b5350cc04b4 
2018/05/06 09:17:52,684 [http-nio-8080-exec-4] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 09:17:52,684 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 09:17:52,684 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 09:17:52,684 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:52,684 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 09:17:52,685 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 09:17:52,693 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2            
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> false 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2            
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> false 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                      
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.zip 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D326637326237373364616532 
2018/05/06 09:17:52,694 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2                            
2018/05/06 09:17:55,068 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,068 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.zip.71796079-c649-4105-aa8f-b7769ebe27d9 
2018/05/06 09:17:55,069 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 09:17:55,070 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,070 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2            
2018/05/06 09:17:55,070 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:55,070 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,070 [http-nio-8080-exec-3] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,070 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,071 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,116 [http-nio-8080-exec-3] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,117 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,117 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,117 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip 
2018/05/06 09:17:55,117 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,123 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,124 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,124 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,124 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip.afb53604-7487-4559-93af-189510d908a8 
2018/05/06 09:17:55,125 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,125 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,125 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,125 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,125 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey.zip.aad9a6ef-cee5-4bce-8fcd-494a4842700d 
2018/05/06 09:17:55,126 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 09:17:55,126 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,126 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:55,126 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'README.txt'} 
2018/05/06 09:17:55,126 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}}      
2018/05/06 09:17:55,126 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey.zip 
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,127 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,128 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,128 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,133 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,133 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip 
2018/05/06 09:17:55,133 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,133 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,133 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,133 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,134 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,139 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,139 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:55,139 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/README.txt}                  
2018/05/06 09:17:55,139 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}} 
2018/05/06 09:17:55,140 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                                   
2018/05/06 09:17:55,140 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,140 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 09:17:55,140 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/README.txt.zip.e22096c9-73ac-48a2-9158-3776d3e6068b 
2018/05/06 09:17:55,141 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/README.txt}               
2018/05/06 09:17:55,141 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'README.txt'} 
2018/05/06 09:17:55,141 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} 
2018/05/06 09:17:55,141 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] userContext ist d6e0c939-4bcf-49cb-845e-2f72b773dae2                                                 
2018/05/06 09:17:55,141 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:55,160 [http-nio-8080-exec-3] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:17:55,160 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}         
2018/05/06 09:17:55,160 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes.zip 
2018/05/06 09:17:55,160 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}      
2018/05/06 09:17:55,161 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:17:55,161 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:17:55,162 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:17:55,162 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:17:55,162 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:17:55,162 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:17:55,163 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:17:55,163 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:17:55,163 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:17:55,163 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:17:55,170 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:17:55,170 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:17:55,171 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:17:55,172 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:17:55,174 [http-nio-8080-exec-3] [INFO ] [BankAccessService             ] [2] accounts for connection [18a00e3e-09e9-4cf4-9de7-5997e39f4382] created.                          
2018/05/06 09:17:55,174 [http-nio-8080-exec-3] [INFO ] [BankAccessController          ] Bank access created for d6e0c939-4bcf-49cb-845e-2f72b773dae2                                         
2018/05/06 09:17:55,195 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:17:55,195 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} Objects in cache: 1                   
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 09:17:55,196 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}}      
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey.zip 
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,210 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,211 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:17:55,211 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home.bucketGuardKey} 
2018/05/06 09:17:55,211 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,211 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,211 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip 
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,216 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,223 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,223 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home}} 
2018/05/06 09:17:55,223 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}             
2018/05/06 09:17:55,223 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}} 
2018/05/06 09:17:55,223 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                                   
2018/05/06 09:17:55,223 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,224 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:17:55,224 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes.zip.37cd8e14-cae6-4a47-a628-3ecede48a828 
2018/05/06 09:17:55,227 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}          
2018/05/06 09:17:55,227 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,227 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}                                        
2018/05/06 09:17:55,229 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses is:201                                      
2018/05/06 09:17:55,237 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:55,264 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:55,264 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,264 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> true 
2018/05/06 09:17:55,264 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] userContext ist d6e0c939-4bcf-49cb-845e-2f72b773dae2                                                 
2018/05/06 09:17:55,264 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:55,267 [http-nio-8080-exec-5] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 09:17:55,267 [http-nio-8080-exec-5] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,267 [http-nio-8080-exec-5] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***e2'}, ReadKeyPassword{'z.***9('}}} 
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                                   
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                      
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,269 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,272 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,273 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip 
2018/05/06 09:17:55,273 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,273 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,273 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,273 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,273 [http-nio-8080-exec-5] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,279 [http-nio-8080-exec-5] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,279 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} 
2018/05/06 09:17:55,280 [http-nio-8080-exec-5] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}             
2018/05/06 09:17:55,280 [http-nio-8080-exec-5] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,282 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:17:55,282 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:17:55,282 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:17:55,282 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:55,282 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1 is:200                                                   
2018/05/06 09:17:55,282 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} Objects in cache: 0                   
2018/05/06 09:17:55,282 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}                                        
2018/05/06 09:17:55,282 [main] [INFO ] [BankAccessControllerIT        ] user data
{"userEntity":{"id":"d6e0c939-4bcf-49cb-845e-2f72b773dae2","expireUser":null,"apiUser":[]},"bankAccesses":[{"bankAccess":{"bankName":null,"bankLogin":"m.becker","bankLogin2":null,"bankCode":"19999999","tanTransportTypes":{},"hbciPassportState":null,"externalIdMap":{},"id":"18a00e3e-09e9-4cf4-9de7-5997e39f4382","userId":"d6e0c939-4bcf-49cb-845e-2f72b773dae2","pin":null,"pin2":null,"temporary":false,"storePin":false,"storeBookings":false,"categorizeBookings":false,"storeAnalytics":false,"storeAnonymizedBookings":false},"bankAccounts":[{"bankAccount":{"externalIdMap":{"MOCK":"483"},"bankAccountBalance":{"readyHbciBalance":3296.2899999999999636202119290828704833984375,"unreadyHbciBalance":3296.2899999999999636202119290828704833984375,"creditHbciBalance":3296.2899999999999636202119290828704833984375,"availableHbciBalance":3296.2899999999999636202119290828704833984375,"usedHbciBalance":0},"owner":"Matthias Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"3528307800","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE81199999993528307800","syncStatus":null,"lastSync":null,"id":"DE81199999993528307800","bankAccessId":"18a00e3e-09e9-4cf4-9de7-5997e39f4382","userId":"d6e0c939-4bcf-49cb-845e-2f72b773dae2"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null},{"bankAccount":{"externalIdMap":{"MOCK":"977"},"bankAccountBalance":{"readyHbciBalance":10701.870000000000800355337560176849365234375,"unreadyHbciBalance":10701.870000000000800355337560176849365234375,"creditHbciBalance":10701.870000000000800355337560176849365234375,"availableHbciBalance":10701.870000000000800355337560176849365234375,"usedHbciBalance":0},"owner":"Familie Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"4076397393","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE12199999994076397393","syncStatus":null,"lastSync":null,"id":"DE12199999994076397393","bankAccessId":"18a00e3e-09e9-4cf4-9de7-5997e39f4382","userId":"d6e0c939-4bcf-49cb-845e-2f72b773dae2"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null}],"accountSynchPref":null}],"contracts":[],"accountSynchPref":null} 
2018/05/06 09:17:55,291 [main] [INFO ] [BankAccessControllerIT        ] user id:d6e0c939-4bcf-49cb-845e-2f72b773dae2                                                         
2018/05/06 09:17:55,291 [main] [INFO ] [BankAccessControllerIT        ] bankLogin:m.becker                                                                                   
2018/05/06 09:17:55,293 [main] [INFO ] [BankAccessControllerIT        ] deleteURI:http://localhost:8080/api/v1/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382             
2018/05/06 09:17:55,293 [main] [INFO ] [BankAccessControllerIT        ] ----------------------- first delete -------------------------                                       
2018/05/06 09:17:55,301 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:55,323 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:55,323 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,323 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> true 
2018/05/06 09:17:55,323 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] userContext ist d6e0c939-4bcf-49cb-845e-2f72b773dae2                                                 
2018/05/06 09:17:55,323 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}         
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes.zip 
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}      
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:17:55,325 [http-nio-8080-exec-6] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***e2'}, ReadKeyPassword{'z.***9('}}} 
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                                   
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                      
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,326 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,327 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip 
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,330 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,336 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,336 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} 
2018/05/06 09:17:55,337 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}             
2018/05/06 09:17:55,337 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,359 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:17:55,360 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:17:55,360 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:17:55,360 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:17:55,360 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}            
2018/05/06 09:17:55,360 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}         
2018/05/06 09:17:55,360 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'mbsUserData.aes'}                                             
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start delete plain directory BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382}} 
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] remove directory /Users/fpo/dev/multibanking-develop/multibanking-rest/target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382 
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished delete plain file BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382}} 
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}            
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}         
2018/05/06 09:17:55,361 [http-nio-8080-exec-6] [INFO ] [BankAccessController          ] Bank Access [18a00e3e-09e9-4cf4-9de7-5997e39f4382] deleted.                                          
2018/05/06 09:17:55,363 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:17:55,363 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:17:55,363 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:17:55,364 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:55,364 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} Objects in cache: 1                   
2018/05/06 09:17:55,364 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}                                        
2018/05/06 09:17:55,366 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382 is:204 
2018/05/06 09:17:55,366 [main] [INFO ] [BankAccessControllerIT        ] ----------------------- second delete -------------------------                                      
2018/05/06 09:17:55,372 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:17:55,395 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} 
2018/05/06 09:17:55,396 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,396 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - null}} -> true 
2018/05/06 09:17:55,396 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] userContext ist d6e0c939-4bcf-49cb-845e-2f72b773dae2                                                 
2018/05/06 09:17:55,396 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:17:55,396 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:17:55,396 [http-nio-8080-exec-7] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}         
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes.zip 
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}      
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***e2'}, ReadKeyPassword{'z.***9('}}} 
2018/05/06 09:17:55,397 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,398 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:17:55,398 [http-nio-8080-exec-7] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                                   
2018/05/06 09:17:55,398 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}                      
2018/05/06 09:17:55,398 [http-nio-8080-exec-7] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,398 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,398 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,403 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,403 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df.zip 
2018/05/06 09:17:55,403 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,403 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df} 
2018/05/06 09:17:55,403 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,404 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/.keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2.DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72"
    }
  }
}with UTF-8 
2018/05/06 09:17:55,404 [http-nio-8080-exec-7] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64366530633933392D346263662D343963622D383435652D3266373262373733646165323BJ72'} 
2018/05/06 09:17:55,411 [http-nio-8080-exec-7] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'} from document guard at BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - .keystore/KS-d6e0c939-4bcf-49cb-845e-2f72b773dae2} 
2018/05/06 09:17:55,411 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3bb5bd83-ccdc-4c71-9390-c962e9b9e4df'}, DocumentKey{9F44....B63E}}, accessType=WRITE} 
2018/05/06 09:17:55,412 [http-nio-8080-exec-7] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/mbsUserData.aes}             
2018/05/06 09:17:55,412 [http-nio-8080-exec-7] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}, ReadKeyPassword{'z.***9('}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:17:55,413 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:17:55,413 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:17:55,413 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}            
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}         
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'mbsUserData.aes'}                                             
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start delete plain directory BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382}} 
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2                    
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] remove directory /Users/fpo/dev/multibanking-develop/multibanking-rest/target/filesystemstorage/bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2/home/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382 
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished delete plain file BucketDirectory{path=BucketPath{bp-d6e0c939-4bcf-49cb-845e-2f72b773dae2 - home/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382}} 
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}            
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382'}         
2018/05/06 09:17:55,414 [http-nio-8080-exec-7] [INFO ] [BankAccessController          ] Bank Access [18a00e3e-09e9-4cf4-9de7-5997e39f4382] deleted.                                          
2018/05/06 09:17:55,415 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:17:55,415 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:17:55,415 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:17:55,415 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:17:55,415 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'} Objects in cache: 1                   
2018/05/06 09:17:55,415 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'d6e0c939-4bcf-49cb-845e-2f72b773dae2'}                                        
2018/05/06 09:17:55,416 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses/18a00e3e-09e9-4cf4-9de7-5997e39f4382 is:204 
2018/05/06 09:17:55,428 [Thread-6] [INFO ] [AnnotationConfigServletWebServerApplicationContext] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35390ee3: startup date [Sun May 06 09:17:42 CEST 2018]; root of context hierarchy 
2018/05/06 09:21:37,482 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.web.BankAccessControllerIT], using SpringBootContextLoader 
2018/05/06 09:21:37,489 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.BankAccessControllerIT]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 09:21:37,490 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.web.BankAccessControllerIT]: BankAccessControllerIT does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 09:21:37,604 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.web.BankAccessControllerIT 
2018/05/06 09:21:37,725 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 09:21:37,741 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@407a7f2a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4ea5b703, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2a7ed1f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3fa247d1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2cb2fc20, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@4f4c4b1a, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@723e88f9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5f0fd5a0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@64e7619d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@495ee280, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fa1c212, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6ea2bc93] 
2018/05/06 09:21:37,925 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 09:21:38,289 [main] [INFO ] [BankAccessControllerIT        ] Starting BankAccessControllerIT on Franciss-MacBook-Pro.local with PID 23103 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 09:21:38,290 [main] [DEBUG] [BankAccessControllerIT        ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 09:21:38,290 [main] [INFO ] [BankAccessControllerIT        ] The following profiles are active: InMemory,IntegrationTest                                          
2018/05/06 09:21:38,312 [main] [INFO ] [AnnotationConfigServletWebServerApplicationContext] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35390ee3: startup date [Sun May 06 09:21:38 CEST 2018]; root of context hierarchy 
2018/05/06 09:21:38,965 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'resourceServerProcessor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=resourceServerProcessingConfiguration; factoryMethodName=resourceServerProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/sts/resourceserver/ResourceServerProcessingConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=de.adorsys.sts.token.TokenCoreConfiguration; factoryMethodName=resourceServerProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/sts/token/TokenCoreConfiguration.class]] 
2018/05/06 09:21:38,968 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'analyticsService' with a different definition: replacing [Generic bean: class [de.adorsys.multibanking.service.analytics.AnalyticsService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/fpo/dev/multibanking-develop/multibanking-rest/target/classes/de/adorsys/multibanking/service/analytics/AnalyticsService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=analyticsServiceConfig; factoryMethodName=analyticsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/core/AnalyticsServiceConfig.class]] 
2018/05/06 09:21:38,977 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'systemIDAuth' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=systemAuthConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/service/SystemAuthConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=controllerUnitTestConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/web/ControllerUnitTestConfig.class]] 
2018/05/06 09:21:39,704 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ed1b5cf3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:21:39,715 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:21:39,716 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3bb87d36' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:21:39,721 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$11efffa5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:21:39,730 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 09:21:39,996 [main] [INFO ] [TomcatWebServer               ] Tomcat initialized with port(s): 8080 (http)                                                         
2018/05/06 09:21:40,011 [main] [INFO ] [Http11NioProtocol             ] Initializing ProtocolHandler ["http-nio-8080"]                                                       
2018/05/06 09:21:40,020 [main] [INFO ] [StandardService               ] Starting service [Tomcat]                                                                            
2018/05/06 09:21:40,020 [main] [INFO ] [StandardEngine                ] Starting Servlet Engine: Apache Tomcat/8.5.29                                                        
2018/05/06 09:21:40,028 [localhost-startStop-1] [INFO ] [AprLifecycleListener          ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/fpo/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] 
2018/05/06 09:21:40,125 [localhost-startStop-1] [INFO ] [[/]                           ] Initializing Spring embedded WebApplicationContext                                                   
2018/05/06 09:21:40,125 [localhost-startStop-1] [INFO ] [ContextLoader                 ] Root WebApplicationContext: initialization completed in 1816 ms                                      
2018/05/06 09:21:40,791 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'characterEncodingFilter' to: [/*]                                                   
2018/05/06 09:21:40,791 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]                                                    
2018/05/06 09:21:40,791 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'httpPutFormContentFilter' to: [/*]                                                  
2018/05/06 09:21:40,791 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'requestContextFilter' to: [/*]                                                      
2018/05/06 09:21:40,792 [localhost-startStop-1] [INFO ] [DelegatingFilterProxyRegistrationBean] Mapping filter: 'springSecurityFilterChain' to: [/*]                                                 
2018/05/06 09:21:40,792 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'httpTraceFilter' to: [/*]                                                           
2018/05/06 09:21:40,792 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'webMvcMetricsFilter' to: [/*]                                                       
2018/05/06 09:21:40,792 [localhost-startStop-1] [INFO ] [ServletRegistrationBean       ] Servlet dispatcherServlet mapped to [/]                                                              
2018/05/06 09:21:41,240 [main] [INFO ] [FileSystemParamParser         ] parse:                                                                                               
2018/05/06 09:21:41,240 [main] [INFO ] [FileSystemParamParser         ] parse:                                                                                               
2018/05/06 09:21:41,241 [main] [INFO ] [ExtendedStoreConnectionFactory] 
***************************************
*                                     *
*  USE FILE SYSTEM                    *
*  basedir: target/filesystemstorage  *
*                                     *
***************************************
 
2018/05/06 09:21:41,758 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}}                         
2018/05/06 09:21:41,760 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:21:41,760 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}} -> true              
2018/05/06 09:21:41,808 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 09:21:41,809 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 09:21:41,809 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 09:21:41,809 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 09:21:41,810 [main] [WARN ] [FinapiBanking                 ] missing env properties FINAPI_CLIENT_ID and/or FINAPI_SECRET                                         
2018/05/06 09:21:42,210 [main] [INFO ] [UserDetailsServiceAutoConfiguration] 

Using generated security password: 62fead71-8a35-476b-a6fd-c38d9897410c
                           
2018/05/06 09:21:42,337 [main] [INFO ] [DefaultSecurityFilterChain    ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d99ee1b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ed0b4e3, org.springframework.security.web.header.HeaderWriterFilter@414b2df5, org.springframework.web.filter.CorsFilter@3915e7c3, org.springframework.security.web.authentication.logout.LogoutFilter@2ec85a25, de.adorsys.sts.filter.JWTAuthenticationFilter@167a21b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a9b41a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@133aacbe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c0df4ab, org.springframework.security.web.session.SessionManagementFilter@4c7d7430, org.springframework.security.web.access.ExceptionTranslationFilter@407b8435, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@478967eb] 
2018/05/06 09:21:42,426 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 09:21:42,540 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35390ee3: startup date [Sun May 06 09:21:38 CEST 2018]; root of context hierarchy 
2018/05/06 09:21:42,624 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 09:21:42,625 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 09:21:42,626 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:21:42,628 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:21:42,628 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/analytics],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.AccountAnalyticsController.getAccountAnalytics(java.lang.String,java.lang.String) 
2018/05/06 09:21:42,631 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createCategory(de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 09:21:42,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getCustomCategories() 
2018/05/06 09:21:42,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getStaticCategories() 
2018/05/06 09:21:42,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCustomCategory(java.lang.String,de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 09:21:42,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCategory(java.lang.String,de.adorsys.multibanking.domain.CategoryEntity) 
2018/05/06 09:21:42,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateCustomCategories(java.util.List<de.adorsys.multibanking.domain.CustomCategoryEntity>) 
2018/05/06 09:21:42,633 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateStaticCategories(java.util.List<de.adorsys.multibanking.domain.CategoryEntity>) 
2018/05/06 09:21:42,633 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceCustomCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:21:42,633 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceStaticCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:21:42,633 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategory(java.lang.String) 
2018/05/06 09:21:42,634 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategory(java.lang.String) 
2018/05/06 09:21:42,634 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategories(java.util.List<java.lang.String>) 
2018/05/06 09:21:42,634 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategories(java.util.List<java.lang.String>) 
2018/05/06 09:21:42,636 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createRule(de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 09:21:42,637 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getCustomRules() 
2018/05/06 09:21:42,637 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getStaticRules() 
2018/05/06 09:21:42,637 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateCustomRule(java.lang.String,de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 09:21:42,637 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateRule(java.lang.String,de.adorsys.multibanking.domain.RuleEntity) 
2018/05/06 09:21:42,638 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateCustomRules(java.util.List<de.adorsys.multibanking.domain.CustomRuleEntity>) 
2018/05/06 09:21:42,638 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateStaticRules(java.util.List<de.adorsys.multibanking.domain.RuleEntity>) 
2018/05/06 09:21:42,638 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceCustomRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:21:42,638 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceStaticRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:21:42,638 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRule(java.lang.String) 
2018/05/06 09:21:42,639 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRule(java.lang.String) 
2018/05/06 09:21:42,639 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRules(java.util.List<java.lang.String>) 
2018/05/06 09:21:42,639 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRules(java.util.List<java.lang.String>) 
2018/05/06 09:21:42,641 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[GET],produces=[image/png]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.ImageController.getImage(java.lang.String) throws java.io.IOException 
2018/05/06 09:21:42,641 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[PUT],consumes=[image/png]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.putImage(java.lang.String,org.springframework.web.multipart.MultipartFile) 
2018/05/06 09:21:42,642 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}/release],methods=[POST]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.patchImage(java.lang.String) 
2018/05/06 09:21:42,642 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bank],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.banks.BankController.loadBanks() 
2018/05/06 09:21:42,643 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.createPayment(java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$CreatePaymentRequest) 
2018/05/06 09:21:42,643 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}/submit],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.submitPayment(java.lang.String,java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$SubmitPaymentRequest) 
2018/05/06 09:21:42,643 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}],methods=[GET]}" onto public org.springframework.hateoas.Resource<de.adorsys.multibanking.domain.PaymentEntity> de.adorsys.multibanking.web.payment.PaymentController.getPayment(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:21:42,644 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<de.adorsys.multibanking.domain.UserAgentCredentials> de.adorsys.multibanking.web.user.UserAgentCredentialsController.getUserAgentCredentials(java.lang.String) 
2018/05/06 09:21:42,644 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[PUT],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.user.UserAgentCredentialsController.postUserAgentCredentials(java.lang.String,de.adorsys.multibanking.domain.UserAgentCredentials) 
2018/05/06 09:21:42,645 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.user.UserDataController.loadUserData() 
2018/05/06 09:21:42,645 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/token/password-grant],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> de.adorsys.sts.token.passwordgrant.PasswordGrantController.passwordGrant(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 09:21:42,646 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/pop],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> de.adorsys.sts.pop.PopController.getPublicKeys() 
2018/05/06 09:21:42,648 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 09:21:42,648 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 09:21:42,726 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 09:21:42,726 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 09:21:42,743 [main] [INFO ] [ExceptionHandlerExceptionResolver] Detected @ExceptionHandler methods in exceptionHandlerAdvice                                         
2018/05/06 09:21:43,077 [main] [INFO ] [EndpointLinksResolver         ] Exposing 2 endpoint(s) beneath base path '/actuator'                                                 
2018/05/06 09:21:43,087 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 09:21:43,088 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 09:21:43,088 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 09:21:43,336 [main] [INFO ] [ScheduledAnnotationBeanPostProcessor] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing                        
2018/05/06 09:21:43,342 [main] [INFO ] [Http11NioProtocol             ] Starting ProtocolHandler ["http-nio-8080"]                                                           
2018/05/06 09:21:43,355 [main] [INFO ] [NioSelectorPool               ] Using a shared selector for servlet write/read                                                       
2018/05/06 09:21:43,366 [main] [INFO ] [TomcatWebServer               ] Tomcat started on port(s): 8080 (http) with context path ''                                          
2018/05/06 09:21:43,370 [main] [INFO ] [BankAccessControllerIT        ] Started BankAccessControllerIT in 5.322 seconds (JVM running for 6.946)                              
2018/05/06 09:21:43,374 [main] [INFO ] [KeyStoreInitializationRunner  ] Check if keys for keystore are needed to be initialized...                                           
2018/05/06 09:21:45,201 [main] [INFO ] [KeyStoreInitializationRunner  ] Key initialization completed.                                                                        
2018/05/06 09:21:45,672 [http-nio-8080-exec-1] [INFO ] [[/]                           ] Initializing Spring FrameworkServlet 'dispatcherServlet'                                             
2018/05/06 09:21:45,672 [http-nio-8080-exec-1] [INFO ] [DispatcherServlet             ] FrameworkServlet 'dispatcherServlet': initialization started                                         
2018/05/06 09:21:45,696 [http-nio-8080-exec-1] [INFO ] [DispatcherServlet             ] FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms                              
2018/05/06 09:21:45,773 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:45,774 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 09:21:45,774 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:45,818 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:45,819 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:45,819 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> false 
2018/05/06 09:21:45,819 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'c5***88'}} 
2018/05/06 09:21:45,819 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:45,820 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:45,820 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> false 
2018/05/06 09:21:45,821 [http-nio-8080-exec-1] [INFO ] [FileSystemExtendedStorageConnection] created folder target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:45,823 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:45,824 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.zip 
2018/05/06 09:21:45,825 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734 
2018/05/06 09:21:45,825 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574                            
2018/05/06 09:21:48,971 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:48,973 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.zip.122944aa-1dea-4382-9b56-b10b998d358f 
2018/05/06 09:21:48,983 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 09:21:48,988 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:48,988 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:48,988 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:48,990 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:48,993 [http-nio-8080-exec-1] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:48,993 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:48,997 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,085 [http-nio-8080-exec-1] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP'} 
2018/05/06 09:21:49,086 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,086 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,087 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7.zip 
2018/05/06 09:21:49,087 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,155 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP'} 
2018/05/06 09:21:49,155 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,156 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,156 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7.zip.8a457c01-d404-4c1f-a230-83b13c281d77 
2018/05/06 09:21:49,157 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,157 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,158 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,158 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,159 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip.feda4555-8fc8-425d-8917-551147bae6c3 
2018/05/06 09:21:49,159 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 09:21:49,159 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,159 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:49,160 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'c5***88'}} DocumentFQN{'README.txt'} 
2018/05/06 09:21:49,160 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}}      
2018/05/06 09:21:49,160 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,161 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,162 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,166 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,166 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7.zip 
2018/05/06 09:21:49,166 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,166 [http-nio-8080-exec-1] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,166 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,167 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,167 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP'} 
2018/05/06 09:21:49,179 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,179 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:49,179 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/README.txt}                  
2018/05/06 09:21:49,179 [http-nio-8080-exec-1] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}} 
2018/05/06 09:21:49,183 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}                                   
2018/05/06 09:21:49,183 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,183 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 09:21:49,184 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/README.txt.zip.b403763c-a257-41f2-9f3c-caa8cc43c6a0 
2018/05/06 09:21:49,184 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/README.txt}               
2018/05/06 09:21:49,184 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'c5***88'}} DocumentFQN{'README.txt'} 
2018/05/06 09:21:49,184 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'c5***88'}} 
2018/05/06 09:21:49,184 [http-nio-8080-exec-1] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:21:49,184 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/sts_user_data.aes}       
2018/05/06 09:21:49,185 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/sts_user_data.aes.zip 
2018/05/06 09:21:49,185 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/sts_user_data.aes}    
2018/05/06 09:21:49,185 [http-nio-8080-exec-1] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:21:49,186 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/sts_user_data.aes}       
2018/05/06 09:21:49,186 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/sts_user_data.aes.zip 
2018/05/06 09:21:49,186 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/sts_user_data.aes}    
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'c5***88'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}}      
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip 
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,202 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,203 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:21:49,203 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:49,203 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,203 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,203 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7.zip 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7} 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,208 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D3631353133396561333537344JXDP'} 
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/sts_user_data.aes}           
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}, DocumentKey{8D8F....3197}} 
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7'}                                   
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574 
2018/05/06 09:21:49,215 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/sts_user_data.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK6fc74c27-c7e1-477f-843a-ed2681a8f8d7"
    }
  },
  "size": 87
}with UTF-8 
2018/05/06 09:21:49,216 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/5c046f44-be9e-400d-9b38-809c01d82e72/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/sts_user_data.aes.zip.a11d791e-cde3-48f8-996c-f50cc4beaa0b 
2018/05/06 09:21:49,216 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/sts_user_data.aes}        
2018/05/06 09:21:49,216 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'c5***88'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 09:21:49,228 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:49,228 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 09:21:49,228 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:49,266 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 0                                                 
2018/05/06 09:21:49,266 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:49,266 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 09:21:49,266 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 09:21:49,318 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 0                                                 
2018/05/06 09:21:49,318 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:49,319 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 09:21:49,319 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 09:21:49,378 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 09:21:49,380 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 09:21:49,380 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:21:49,380 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:21:49,407 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:49,407 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 09:21:49,407 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:49,433 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:21:49,433 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:21:49,433 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 09:21:49,433 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 09:21:49,433 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 09:21:49,441 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:21:49,443 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:21:49,445 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 09:21:49,445 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 09:21:49,446 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:21:49,446 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,450 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5} 
2018/05/06 09:21:49,451 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5.zip 
2018/05/06 09:21:49,451 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5} 
2018/05/06 09:21:49,451 [http-nio-8080-exec-4] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5} 
2018/05/06 09:21:49,451 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:21:49,451 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DKca235088-70df-40be-848e-89200ad8c7f5",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DBCJ3K"
    }
  }
}with UTF-8 
2018/05/06 09:21:49,452 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DBCJ3K'}                              
2018/05/06 09:21:49,459 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 09:21:49,460 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'}, DocumentKey{BB0A....33BC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 09:21:49,460 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 09:21:49,460 [http-nio-8080-exec-4] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'}, DocumentKey{BB0A....33BC}} 
2018/05/06 09:21:49,460 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKca235088-70df-40be-848e-89200ad8c7f5'}                                   
2018/05/06 09:21:49,460 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 09:21:49,460 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKca235088-70df-40be-848e-89200ad8c7f5"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 09:21:49,461 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.8b1d2e8d-b62b-43ee-b7ce-0b113d30e57d 
2018/05/06 09:21:49,463 [http-nio-8080-exec-4] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 09:21:49,463 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 09:21:49,463 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 09:21:49,463 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:49,463 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 09:21:49,463 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 09:21:49,474 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:49,474 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574            
2018/05/06 09:21:49,474 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> false 
2018/05/06 09:21:49,474 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} 
2018/05/06 09:21:49,474 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574            
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> false 
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                      
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.zip 
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734 
2018/05/06 09:21:49,475 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574                            
2018/05/06 09:21:52,506 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,507 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.zip.ffb897b2-21fa-4c58-a2bd-aa8f9d47f262 
2018/05/06 09:21:52,507 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 09:21:52,508 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,508 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574            
2018/05/06 09:21:52,508 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:52,508 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,508 [http-nio-8080-exec-3] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,509 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,510 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,552 [http-nio-8080-exec-3] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,552 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,552 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,552 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,552 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,557 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,558 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,558 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,558 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip.445e84df-6d62-4783-9415-ac1b2ee39a3f 
2018/05/06 09:21:52,559 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,559 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,559 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,560 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,560 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip.84ce5306-09cb-485c-b33a-50397d403f50 
2018/05/06 09:21:52,560 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'README.txt'} 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}}      
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,561 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:21:52,562 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,562 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,562 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,562 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,565 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,566 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,566 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,566 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,566 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,566 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,566 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,572 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,572 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:52,572 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/README.txt}                  
2018/05/06 09:21:52,572 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}} 
2018/05/06 09:21:52,572 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                                   
2018/05/06 09:21:52,572 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,573 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9b28b994-193f-43fe-83cd-b7d36ac186af"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 09:21:52,573 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/README.txt.zip.62aa9c2b-34b0-4a8c-b932-9b3aed83da43 
2018/05/06 09:21:52,573 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/README.txt}               
2018/05/06 09:21:52,573 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'README.txt'} 
2018/05/06 09:21:52,573 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} 
2018/05/06 09:21:52,573 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] userContext ist 6ffc1a33-12fd-495e-a77e-615139ea3574                                                 
2018/05/06 09:21:52,574 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:52,592 [http-nio-8080-exec-3] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:21:52,592 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}         
2018/05/06 09:21:52,592 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes.zip 
2018/05/06 09:21:52,592 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}      
2018/05/06 09:21:52,593 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:21:52,593 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 09:21:52,594 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 09:21:52,600 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:21:52,600 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:21:52,601 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:21:52,602 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:21:52,604 [http-nio-8080-exec-3] [INFO ] [BankAccessService             ] [2] accounts for connection [c7936cc9-4a81-4e41-b32b-378e22823710] created.                          
2018/05/06 09:21:52,604 [http-nio-8080-exec-3] [INFO ] [BankAccessController          ] Bank access created for 6ffc1a33-12fd-495e-a77e-615139ea3574                                         
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} Objects in cache: 1                   
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 09:21:52,626 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 09:21:52,627 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 09:21:52,640 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,640 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}}      
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,641 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,642 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,646 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,652 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,652 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:52,652 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}             
2018/05/06 09:21:52,652 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}} 
2018/05/06 09:21:52,652 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                                   
2018/05/06 09:21:52,653 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,653 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9b28b994-193f-43fe-83cd-b7d36ac186af"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:21:52,653 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes.zip.a54166cb-6b11-4b8c-aa10-046e7b40f5ec 
2018/05/06 09:21:52,655 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}          
2018/05/06 09:21:52,656 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,656 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}                                        
2018/05/06 09:21:52,658 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses is:201                                      
2018/05/06 09:21:52,663 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:52,689 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:52,690 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,690 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> true 
2018/05/06 09:21:52,690 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] userContext ist 6ffc1a33-12fd-495e-a77e-615139ea3574                                                 
2018/05/06 09:21:52,690 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:52,692 [http-nio-8080-exec-5] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 09:21:52,692 [http-nio-8080-exec-5] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,692 [http-nio-8080-exec-5] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***74'}, ReadKeyPassword{'='***j:'}}} 
2018/05/06 09:21:52,694 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,694 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9b28b994-193f-43fe-83cd-b7d36ac186af"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:21:52,694 [http-nio-8080-exec-5] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                                   
2018/05/06 09:21:52,694 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                      
2018/05/06 09:21:52,694 [http-nio-8080-exec-5] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,694 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,695 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,698 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,699 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,699 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,699 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,699 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,699 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,699 [http-nio-8080-exec-5] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,705 [http-nio-8080-exec-5] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,705 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} 
2018/05/06 09:21:52,707 [http-nio-8080-exec-5] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}             
2018/05/06 09:21:52,707 [http-nio-8080-exec-5] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,709 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:21:52,709 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:21:52,709 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:21:52,709 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:52,709 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} Objects in cache: 0                   
2018/05/06 09:21:52,709 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}                                        
2018/05/06 09:21:52,709 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1 is:200                                                   
2018/05/06 09:21:52,710 [main] [INFO ] [BankAccessControllerIT        ] user data
{"userEntity":{"id":"6ffc1a33-12fd-495e-a77e-615139ea3574","expireUser":null,"apiUser":[]},"bankAccesses":[{"bankAccess":{"bankName":null,"bankLogin":"m.becker","bankLogin2":null,"bankCode":"19999999","tanTransportTypes":{},"hbciPassportState":null,"externalIdMap":{},"id":"c7936cc9-4a81-4e41-b32b-378e22823710","userId":"6ffc1a33-12fd-495e-a77e-615139ea3574","pin":null,"pin2":null,"temporary":false,"storePin":false,"storeBookings":false,"categorizeBookings":false,"storeAnalytics":false,"storeAnonymizedBookings":false},"bankAccounts":[{"bankAccount":{"externalIdMap":{"MOCK":"548"},"bankAccountBalance":{"readyHbciBalance":3296.2899999999999636202119290828704833984375,"unreadyHbciBalance":3296.2899999999999636202119290828704833984375,"creditHbciBalance":3296.2899999999999636202119290828704833984375,"availableHbciBalance":3296.2899999999999636202119290828704833984375,"usedHbciBalance":0},"owner":"Matthias Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"3528307800","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE81199999993528307800","syncStatus":null,"lastSync":null,"id":"DE81199999993528307800","bankAccessId":"c7936cc9-4a81-4e41-b32b-378e22823710","userId":"6ffc1a33-12fd-495e-a77e-615139ea3574"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null},{"bankAccount":{"externalIdMap":{"MOCK":"686"},"bankAccountBalance":{"readyHbciBalance":10701.870000000000800355337560176849365234375,"unreadyHbciBalance":10701.870000000000800355337560176849365234375,"creditHbciBalance":10701.870000000000800355337560176849365234375,"availableHbciBalance":10701.870000000000800355337560176849365234375,"usedHbciBalance":0},"owner":"Familie Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"4076397393","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE12199999994076397393","syncStatus":null,"lastSync":null,"id":"DE12199999994076397393","bankAccessId":"c7936cc9-4a81-4e41-b32b-378e22823710","userId":"6ffc1a33-12fd-495e-a77e-615139ea3574"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null}],"accountSynchPref":null}],"contracts":[],"accountSynchPref":null} 
2018/05/06 09:21:52,715 [main] [INFO ] [BankAccessControllerIT        ] user id:6ffc1a33-12fd-495e-a77e-615139ea3574                                                         
2018/05/06 09:21:52,715 [main] [INFO ] [BankAccessControllerIT        ] bankLogin:m.becker                                                                                   
2018/05/06 09:21:52,717 [main] [INFO ] [BankAccessControllerIT        ] deleteURI:http://localhost:8080/api/v1/bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710             
2018/05/06 09:21:52,717 [main] [INFO ] [BankAccessControllerIT        ] ----------------------- first delete -------------------------                                       
2018/05/06 09:21:52,723 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:52,748 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:52,748 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,748 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> true 
2018/05/06 09:21:52,748 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] userContext ist 6ffc1a33-12fd-495e-a77e-615139ea3574                                                 
2018/05/06 09:21:52,748 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}         
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes.zip 
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}      
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,751 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***74'}, ReadKeyPassword{'='***j:'}}} 
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9b28b994-193f-43fe-83cd-b7d36ac186af"
    }
  },
  "size": 2362
}with UTF-8 
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                                   
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                      
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,752 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,758 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,766 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,766 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} 
2018/05/06 09:21:52,767 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}             
2018/05/06 09:21:52,767 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,791 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 09:21:52,791 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 09:21:52,792 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:21:52,792 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:21:52,792 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710'}            
2018/05/06 09:21:52,792 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710'}         
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start delete plain directory BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710}} 
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] remove directory /Users/fpo/dev/multibanking-develop/multibanking-rest/target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710 
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished delete plain file BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710}} 
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710'}            
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710'}         
2018/05/06 09:21:52,793 [http-nio-8080-exec-6] [INFO ] [BankAccessController          ] Bank Access [c7936cc9-4a81-4e41-b32b-378e22823710] deleted.                                          
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} Objects in cache: 1                   
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 09:21:52,795 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}}      
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey.zip 
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 09:21:52,796 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home.bucketGuardKey} 
2018/05/06 09:21:52,797 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,797 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,797 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,801 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,801 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,801 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,801 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,802 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,802 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,802 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home}} 
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}             
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}} 
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                                   
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,808 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9b28b994-193f-43fe-83cd-b7d36ac186af"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 09:21:52,809 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes.zip.f98aa75c-3e10-4803-b311-95505f146176 
2018/05/06 09:21:52,809 [http-nio-8080-exec-6] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes} 
2018/05/06 09:21:52,809 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}          
2018/05/06 09:21:52,809 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,810 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}                                        
2018/05/06 09:21:52,811 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710 is:204 
2018/05/06 09:21:52,811 [main] [INFO ] [BankAccessControllerIT        ] ----------------------- second delete -------------------------                                      
2018/05/06 09:21:52,817 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 09:21:52,839 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} 
2018/05/06 09:21:52,839 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,839 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - null}} -> true 
2018/05/06 09:21:52,839 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] userContext ist 6ffc1a33-12fd-495e-a77e-615139ea3574                                                 
2018/05/06 09:21:52,840 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 09:21:52,840 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 09:21:52,840 [http-nio-8080-exec-7] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 09:21:52,840 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}         
2018/05/06 09:21:52,840 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes.zip 
2018/05/06 09:21:52,840 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}      
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***74'}, ReadKeyPassword{'='***j:'}}} 
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9b28b994-193f-43fe-83cd-b7d36ac186af"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                                   
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}                      
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,841 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,842 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af.zip 
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af} 
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6ffc1a33-12fd-495e-a77e-615139ea3574                    
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6ffc1a33-12fd-495e-a77e-615139ea3574/.keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574.DK9b28b994-193f-43fe-83cd-b7d36ac186af",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW"
    }
  }
}with UTF-8 
2018/05/06 09:21:52,845 [http-nio-8080-exec-7] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36666663316133332D313266642D343935652D613737652D363135313339656133353734LS9OW'} 
2018/05/06 09:21:52,851 [http-nio-8080-exec-7] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'} from document guard at BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - .keystore/KS-6ffc1a33-12fd-495e-a77e-615139ea3574} 
2018/05/06 09:21:52,851 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9b28b994-193f-43fe-83cd-b7d36ac186af'}, DocumentKey{1256....04F5}}, accessType=WRITE} 
2018/05/06 09:21:52,851 [http-nio-8080-exec-7] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6ffc1a33-12fd-495e-a77e-615139ea3574 - home/mbsUserData.aes}             
2018/05/06 09:21:52,851 [http-nio-8080-exec-7] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}, ReadKeyPassword{'='***j:'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'} Objects in cache: 1                   
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 09:21:52,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'6ffc1a33-12fd-495e-a77e-615139ea3574'}                                        
2018/05/06 09:21:52,853 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses/c7936cc9-4a81-4e41-b32b-378e22823710 is:410 
2018/05/06 09:21:52,859 [Thread-6] [INFO ] [AnnotationConfigServletWebServerApplicationContext] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35390ee3: startup date [Sun May 06 09:21:38 CEST 2018]; root of context hierarchy 
2018/05/06 10:26:11,547 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'/dir/subdir'}                                               
2018/05/06 10:26:11,555 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject2.aes'}                       
2018/05/06 10:26:11,555 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject.aes'}                        
2018/05/06 10:26:11,555 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject.aes'}                                
2018/05/06 10:26:11,555 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject2.aes'}                               
2018/05/06 10:32:24,723 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'/dir/subdir'}                                               
2018/05/06 10:32:24,731 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject2.aes'}                       
2018/05/06 10:32:24,731 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject.aes'}                        
2018/05/06 10:32:24,731 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject.aes'}                                
2018/05/06 10:32:24,731 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject2.aes'}                               
2018/05/06 10:35:05,087 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'/dir/subdir'}                                               
2018/05/06 10:35:05,095 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject2.aes'}                       
2018/05/06 10:35:05,095 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject.aes'}                        
2018/05/06 10:35:05,095 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject.aes'}                                
2018/05/06 10:35:05,096 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject2.aes'}                               
2018/05/06 10:35:28,574 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'/dir/subdir'}                                               
2018/05/06 10:35:28,582 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject2.aes'}                       
2018/05/06 10:35:28,582 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/subdir2/cachedObject.aes'}                        
2018/05/06 10:35:28,582 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject.aes'}                                
2018/05/06 10:35:28,583 [main] [DEBUG] [UserContextCache              ] Removing from cache Cache DocumentFQN{'/dir/subdir/cachedObject2.aes'}                               
2018/05/06 10:35:28,654 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.config.authserver.PasswordGrantControllerTest], using SpringBootContextLoader 
2018/05/06 10:35:28,657 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.config.authserver.PasswordGrantControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:35:28,657 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.config.authserver.PasswordGrantControllerTest]: PasswordGrantControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:35:28,770 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.config.authserver.PasswordGrantControllerTest 
2018/05/06 10:35:28,909 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:35:28,923 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5a9f4771, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@282cb7c7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7d898981, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@48d61b48, org.springframework.test.context.support.DirtiesContextTestExecutionListener@68d279ec, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@258d79be, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@14f9390f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6c0d7c83, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@176b75f7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5965be2d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@409c54f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3e74829] 
2018/05/06 10:35:28,960 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:35:29,330 [main] [INFO ] [PasswordGrantControllerTest   ] Starting PasswordGrantControllerTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:35:29,333 [main] [DEBUG] [PasswordGrantControllerTest   ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:35:29,333 [main] [INFO ] [PasswordGrantControllerTest   ] The following profiles are active: InMemory,IntegrationTest                                          
2018/05/06 10:35:29,358 [main] [INFO ] [AnnotationConfigServletWebServerApplicationContext] Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b2c0e88: startup date [Sun May 06 10:35:29 CEST 2018]; root of context hierarchy 
2018/05/06 10:35:29,995 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'resourceServerProcessor' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=resourceServerProcessingConfiguration; factoryMethodName=resourceServerProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/sts/resourceserver/ResourceServerProcessingConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=de.adorsys.sts.token.TokenCoreConfiguration; factoryMethodName=resourceServerProcessor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/sts/token/TokenCoreConfiguration.class]] 
2018/05/06 10:35:29,998 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'analyticsService' with a different definition: replacing [Generic bean: class [de.adorsys.multibanking.service.analytics.AnalyticsService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/fpo/dev/multibanking-develop/multibanking-rest/target/classes/de/adorsys/multibanking/service/analytics/AnalyticsService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=analyticsServiceConfig; factoryMethodName=analyticsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/core/AnalyticsServiceConfig.class]] 
2018/05/06 10:35:30,006 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'systemIDAuth' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=systemAuthConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/service/SystemAuthConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=controllerUnitTestConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/web/ControllerUnitTestConfig.class]] 
2018/05/06 10:35:30,746 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a1504156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:30,757 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:30,758 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@791c12e3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:30,762 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c624e408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:30,770 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:31,037 [main] [INFO ] [TomcatWebServer               ] Tomcat initialized with port(s): 8080 (http)                                                         
2018/05/06 10:35:31,052 [main] [INFO ] [Http11NioProtocol             ] Initializing ProtocolHandler ["http-nio-8080"]                                                       
2018/05/06 10:35:31,063 [main] [INFO ] [StandardService               ] Starting service [Tomcat]                                                                            
2018/05/06 10:35:31,065 [main] [INFO ] [StandardEngine                ] Starting Servlet Engine: Apache Tomcat/8.5.29                                                        
2018/05/06 10:35:31,084 [localhost-startStop-1] [INFO ] [AprLifecycleListener          ] The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [/Users/fpo/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:.] 
2018/05/06 10:35:31,207 [localhost-startStop-1] [INFO ] [[/]                           ] Initializing Spring embedded WebApplicationContext                                                   
2018/05/06 10:35:31,207 [localhost-startStop-1] [INFO ] [ContextLoader                 ] Root WebApplicationContext: initialization completed in 1851 ms                                      
2018/05/06 10:35:31,862 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'characterEncodingFilter' to: [/*]                                                   
2018/05/06 10:35:31,863 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'hiddenHttpMethodFilter' to: [/*]                                                    
2018/05/06 10:35:31,863 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'httpPutFormContentFilter' to: [/*]                                                  
2018/05/06 10:35:31,864 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'requestContextFilter' to: [/*]                                                      
2018/05/06 10:35:31,864 [localhost-startStop-1] [INFO ] [DelegatingFilterProxyRegistrationBean] Mapping filter: 'springSecurityFilterChain' to: [/*]                                                 
2018/05/06 10:35:31,864 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'httpTraceFilter' to: [/*]                                                           
2018/05/06 10:35:31,865 [localhost-startStop-1] [INFO ] [FilterRegistrationBean        ] Mapping filter: 'webMvcMetricsFilter' to: [/*]                                                       
2018/05/06 10:35:31,865 [localhost-startStop-1] [INFO ] [ServletRegistrationBean       ] Servlet dispatcherServlet mapped to [/]                                                              
2018/05/06 10:35:32,296 [main] [INFO ] [FileSystemParamParser         ] parse:                                                                                               
2018/05/06 10:35:32,296 [main] [INFO ] [FileSystemParamParser         ] parse:                                                                                               
2018/05/06 10:35:32,297 [main] [INFO ] [ExtendedStoreConnectionFactory] 
***************************************
*                                     *
*  USE FILE SYSTEM                    *
*  basedir: target/filesystemstorage  *
*                                     *
***************************************
 
2018/05/06 10:35:32,861 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}}                         
2018/05/06 10:35:32,864 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-system                                          
2018/05/06 10:35:32,865 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}} -> false             
2018/05/06 10:35:32,865 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}}                       
2018/05/06 10:35:32,865 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}}                         
2018/05/06 10:35:32,865 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-system                                          
2018/05/06 10:35:32,865 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}} -> false             
2018/05/06 10:35:32,866 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-system                                                    
2018/05/06 10:35:32,867 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-system - .keystore/KS-system}                                    
2018/05/06 10:35:32,867 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-system/.keystore/KS-system.zip                       
2018/05/06 10:35:32,869 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D73797374656D                                                  
2018/05/06 10:35:32,869 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-system                                                          
2018/05/06 10:35:35,796 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:35,797 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/.keystore/KS-system.zip.0c4f074c-9087-439f-9ec9-df968f348127 
2018/05/06 10:35:35,805 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:35:35,811 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-system - .keystore/KS-system}                                 
2018/05/06 10:35:35,811 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-system                                          
2018/05/06 10:35:35,811 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-system - home}}                        
2018/05/06 10:35:35,813 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:35,816 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-system - .keystore/KS-system}                          
2018/05/06 10:35:35,816 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:35,819 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:35,901 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}        
2018/05/06 10:35:35,901 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:35,902 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:35,902 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:35:35,903 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:36,006 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:35:36,007 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:36,007 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:35:36,007 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip.59575c18-7f1b-4d5e-bab7-1288b86a6013 
2018/05/06 10:35:36,011 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:36,011 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:36,013 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}              
2018/05/06 10:35:36,013 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:36,014 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip.d8ef5c27-61ca-47d8-9546-32b98121b738 
2018/05/06 10:35:36,014 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:35:36,015 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}           
2018/05/06 10:35:36,015 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-system - home}}                     
2018/05/06 10:35:36,015 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:36,016 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:35:36,016 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:35:36,016 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:35:36,016 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:35:36,016 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:35:36,017 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:36,017 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:36,017 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:35:36,017 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:36,017 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:36,018 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:36,022 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:36,022 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:35:36,022 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:36,022 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:36,022 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:36,022 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:35:36,023 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:35:36,034 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:36,034 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:35:36,034 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/README.txt}                                                
2018/05/06 10:35:36,035 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:35:36,038 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:35:36,039 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:36,039 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:35:36,039 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/README.txt.zip.124945d2-c5af-446b-a0bc-2ece4fb6b9cb 
2018/05/06 10:35:36,040 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/README.txt}                                             
2018/05/06 10:35:36,040 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:36,040 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}}                    
2018/05/06 10:35:36,111 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 10:35:36,111 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 10:35:36,112 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 10:35:36,112 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 10:35:36,115 [main] [WARN ] [FinapiBanking                 ] missing env properties FINAPI_CLIENT_ID and/or FINAPI_SECRET                                         
2018/05/06 10:35:36,476 [main] [INFO ] [UserDetailsServiceAutoConfiguration] 

Using generated security password: 9a19b07d-e8eb-4f5c-b67d-de70578a5021
                           
2018/05/06 10:35:36,619 [main] [INFO ] [DefaultSecurityFilterChain    ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e9dcdd3, org.springframework.security.web.context.SecurityContextPersistenceFilter@6549ce71, org.springframework.security.web.header.HeaderWriterFilter@180d918a, org.springframework.web.filter.CorsFilter@6e617c0e, org.springframework.security.web.authentication.logout.LogoutFilter@2e7517aa, de.adorsys.sts.filter.JWTAuthenticationFilter@9a07409, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e030cc1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64887fbc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7455204c, org.springframework.security.web.session.SessionManagementFilter@27a6384b, org.springframework.security.web.access.ExceptionTranslationFilter@12f3fcd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4cb58e8b] 
2018/05/06 10:35:36,717 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:35:36,848 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b2c0e88: startup date [Sun May 06 10:35:29 CEST 2018]; root of context hierarchy 
2018/05/06 10:35:36,954 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:35:36,955 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:35:36,956 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:36,960 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:36,961 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/analytics],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.AccountAnalyticsController.getAccountAnalytics(java.lang.String,java.lang.String) 
2018/05/06 10:35:36,964 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createCategory(de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 10:35:36,964 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getCustomCategories() 
2018/05/06 10:35:36,964 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getStaticCategories() 
2018/05/06 10:35:36,965 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCustomCategory(java.lang.String,de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 10:35:36,965 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCategory(java.lang.String,de.adorsys.multibanking.domain.CategoryEntity) 
2018/05/06 10:35:36,965 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateCustomCategories(java.util.List<de.adorsys.multibanking.domain.CustomCategoryEntity>) 
2018/05/06 10:35:36,966 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateStaticCategories(java.util.List<de.adorsys.multibanking.domain.CategoryEntity>) 
2018/05/06 10:35:36,966 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceCustomCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:36,966 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceStaticCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:36,967 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategory(java.lang.String) 
2018/05/06 10:35:36,967 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategory(java.lang.String) 
2018/05/06 10:35:36,967 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategories(java.util.List<java.lang.String>) 
2018/05/06 10:35:36,967 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategories(java.util.List<java.lang.String>) 
2018/05/06 10:35:36,970 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createRule(de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 10:35:36,970 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getCustomRules() 
2018/05/06 10:35:36,970 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getStaticRules() 
2018/05/06 10:35:36,970 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateCustomRule(java.lang.String,de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 10:35:36,971 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateRule(java.lang.String,de.adorsys.multibanking.domain.RuleEntity) 
2018/05/06 10:35:36,971 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateCustomRules(java.util.List<de.adorsys.multibanking.domain.CustomRuleEntity>) 
2018/05/06 10:35:36,971 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateStaticRules(java.util.List<de.adorsys.multibanking.domain.RuleEntity>) 
2018/05/06 10:35:36,971 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceCustomRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:36,972 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceStaticRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:36,972 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRule(java.lang.String) 
2018/05/06 10:35:36,972 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRule(java.lang.String) 
2018/05/06 10:35:36,973 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRules(java.util.List<java.lang.String>) 
2018/05/06 10:35:36,973 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRules(java.util.List<java.lang.String>) 
2018/05/06 10:35:36,977 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[GET],produces=[image/png]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.ImageController.getImage(java.lang.String) throws java.io.IOException 
2018/05/06 10:35:36,977 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[PUT],consumes=[image/png]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.putImage(java.lang.String,org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:36,977 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}/release],methods=[POST]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.patchImage(java.lang.String) 
2018/05/06 10:35:36,978 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bank],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.banks.BankController.loadBanks() 
2018/05/06 10:35:36,979 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.createPayment(java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$CreatePaymentRequest) 
2018/05/06 10:35:36,979 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}/submit],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.submitPayment(java.lang.String,java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$SubmitPaymentRequest) 
2018/05/06 10:35:36,979 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}],methods=[GET]}" onto public org.springframework.hateoas.Resource<de.adorsys.multibanking.domain.PaymentEntity> de.adorsys.multibanking.web.payment.PaymentController.getPayment(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:36,980 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<de.adorsys.multibanking.domain.UserAgentCredentials> de.adorsys.multibanking.web.user.UserAgentCredentialsController.getUserAgentCredentials(java.lang.String) 
2018/05/06 10:35:36,980 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[PUT],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.user.UserAgentCredentialsController.postUserAgentCredentials(java.lang.String,de.adorsys.multibanking.domain.UserAgentCredentials) 
2018/05/06 10:35:36,981 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.user.UserDataController.loadUserData() 
2018/05/06 10:35:36,981 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/token/password-grant],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.Object> de.adorsys.sts.token.passwordgrant.PasswordGrantController.passwordGrant(java.lang.String,java.lang.String[],java.lang.String[],java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:36,982 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/pop],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> de.adorsys.sts.pop.PopController.getPublicKeys() 
2018/05/06 10:35:36,984 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:35:36,984 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:35:37,072 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:35:37,072 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:35:37,093 [main] [INFO ] [ExceptionHandlerExceptionResolver] Detected @ExceptionHandler methods in exceptionHandlerAdvice                                         
2018/05/06 10:35:37,709 [main] [INFO ] [EndpointLinksResolver         ] Exposing 2 endpoint(s) beneath base path '/actuator'                                                 
2018/05/06 10:35:37,721 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 10:35:37,722 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 10:35:37,723 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:35:37,975 [main] [INFO ] [ScheduledAnnotationBeanPostProcessor] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing                        
2018/05/06 10:35:37,985 [main] [INFO ] [Http11NioProtocol             ] Starting ProtocolHandler ["http-nio-8080"]                                                           
2018/05/06 10:35:38,000 [main] [INFO ] [NioSelectorPool               ] Using a shared selector for servlet write/read                                                       
2018/05/06 10:35:38,019 [main] [INFO ] [TomcatWebServer               ] Tomcat started on port(s): 8080 (http) with context path ''                                          
2018/05/06 10:35:38,025 [main] [INFO ] [PasswordGrantControllerTest   ] Started PasswordGrantControllerTest in 8.895 seconds (JVM running for 10.278)                        
2018/05/06 10:35:38,030 [main] [INFO ] [KeyStoreInitializationRunner  ] Check if keys for keystore are needed to be initialized...                                           
2018/05/06 10:35:38,888 [main] [INFO ] [KeyStoreInitializationRunner  ] Key initialization completed.                                                                        
2018/05/06 10:35:39,091 [http-nio-8080-exec-1] [INFO ] [[/]                           ] Initializing Spring FrameworkServlet 'dispatcherServlet'                                             
2018/05/06 10:35:39,091 [http-nio-8080-exec-1] [INFO ] [DispatcherServlet             ] FrameworkServlet 'dispatcherServlet': initialization started                                         
2018/05/06 10:35:39,107 [http-nio-8080-exec-1] [INFO ] [DispatcherServlet             ] FrameworkServlet 'dispatcherServlet': initialization completed in 16 ms                              
2018/05/06 10:35:39,185 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:35:39,186 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 10:35:39,186 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} 
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} -> false 
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'23***5c'}} 
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} 
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:39,217 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} -> false 
2018/05/06 10:35:39,218 [http-nio-8080-exec-1] [INFO ] [FileSystemExtendedStorageConnection] created folder target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:39,218 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:39,218 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.zip 
2018/05/06 10:35:39,218 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132 
2018/05/06 10:35:39,218 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2                            
2018/05/06 10:35:41,686 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,687 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.zip.074256d9-40eb-45f8-8ae3-87c4a718da87 
2018/05/06 10:35:41,690 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:35:41,692 [http-nio-8080-exec-1] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,692 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,692 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:35:41,692 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,692 [http-nio-8080-exec-1] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,692 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,693 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:41,756 [http-nio-8080-exec-1] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI'} 
2018/05/06 10:35:41,756 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,756 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,756 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93.zip 
2018/05/06 10:35:41,756 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,762 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI'} 
2018/05/06 10:35:41,763 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,763 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI"
    }
  }
}with UTF-8 
2018/05/06 10:35:41,763 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93.zip.afce4dd4-d102-4e3a-b3a3-28fa92e2dfff 
2018/05/06 10:35:41,764 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,764 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,764 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,765 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,765 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey.zip.47b87554-1122-42e5-a264-e6b52ef75bc9 
2018/05/06 10:35:41,765 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:35:41,766 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,766 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:35:41,766 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'23***5c'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:41,766 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}}      
2018/05/06 10:35:41,766 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,767 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey.zip 
2018/05/06 10:35:41,767 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,767 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,767 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,767 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:41,767 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,768 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'} from document guard at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,768 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,768 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:41,777 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,777 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93.zip 
2018/05/06 10:35:41,778 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,778 [http-nio-8080-exec-1] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,778 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,778 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI"
    }
  }
}with UTF-8 
2018/05/06 10:35:41,778 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI'} 
2018/05/06 10:35:41,786 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'} from document guard at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,786 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:35:41,786 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/README.txt}                  
2018/05/06 10:35:41,787 [http-nio-8080-exec-1] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}} 
2018/05/06 10:35:41,787 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}                                   
2018/05/06 10:35:41,787 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,787 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbc9b0d3d-5113-4e03-95fe-412cccaaba93"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:35:41,788 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/README.txt.zip.bcd0f146-1f16-47bd-b077-35bb210e4836 
2018/05/06 10:35:41,788 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/README.txt}               
2018/05/06 10:35:41,789 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'23***5c'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:41,789 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'23***5c'}} 
2018/05/06 10:35:41,789 [http-nio-8080-exec-1] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:41,789 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/sts_user_data.aes}       
2018/05/06 10:35:41,789 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/sts_user_data.aes.zip 
2018/05/06 10:35:41,789 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/sts_user_data.aes}    
2018/05/06 10:35:41,791 [http-nio-8080-exec-1] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:41,792 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/sts_user_data.aes}       
2018/05/06 10:35:41,792 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/sts_user_data.aes.zip 
2018/05/06 10:35:41,793 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/sts_user_data.aes}    
2018/05/06 10:35:41,819 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'23***5c'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 10:35:41,820 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}}      
2018/05/06 10:35:41,820 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,820 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey.zip 
2018/05/06 10:35:41,820 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,820 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,820 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,821 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:41,821 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:35:41,821 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'} from document guard at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,821 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,822 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:41,826 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,826 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93.zip 
2018/05/06 10:35:41,826 [http-nio-8080-exec-1] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,826 [http-nio-8080-exec-1] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93} 
2018/05/06 10:35:41,827 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,827 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DKbc9b0d3d-5113-4e03-95fe-412cccaaba93",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI"
    }
  }
}with UTF-8 
2018/05/06 10:35:41,827 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132CEQZI'} 
2018/05/06 10:35:41,833 [http-nio-8080-exec-1] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'} from document guard at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:35:41,833 [http-nio-8080-exec-1] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:35:41,834 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/sts_user_data.aes}           
2018/05/06 10:35:41,834 [http-nio-8080-exec-1] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}, DocumentKey{99BF....2612}} 
2018/05/06 10:35:41,834 [http-nio-8080-exec-1] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKbc9b0d3d-5113-4e03-95fe-412cccaaba93'}                                   
2018/05/06 10:35:41,834 [http-nio-8080-exec-1] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2 
2018/05/06 10:35:41,834 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/sts_user_data.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbc9b0d3d-5113-4e03-95fe-412cccaaba93"
    }
  },
  "size": 88
}with UTF-8 
2018/05/06 10:35:41,835 [http-nio-8080-exec-1] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/sts_user_data.aes.zip.d844c88c-0d81-4f3a-bba8-a7c2090051ce 
2018/05/06 10:35:41,835 [http-nio-8080-exec-1] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/sts_user_data.aes}        
2018/05/06 10:35:41,836 [http-nio-8080-exec-1] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'23***5c'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 10:35:41,851 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:35:41,851 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 10:35:41,851 [http-nio-8080-exec-2] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:35:41,885 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 0                                                 
2018/05/06 10:35:41,885 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:35:41,885 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 10:35:41,886 [http-nio-8080-exec-2] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 10:35:41,966 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 0                                                 
2018/05/06 10:35:41,966 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:35:41,966 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 10:35:41,966 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 10:35:41,993 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.service.BankAccessServiceBlankTest], using SpringBootContextLoader 
2018/05/06 10:35:41,993 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.service.BankAccessServiceBlankTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:35:41,993 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.service.BankAccessServiceBlankTest]: BankAccessServiceBlankTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:35:42,015 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.service.BankAccessServiceBlankTest 
2018/05/06 10:35:42,017 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:35:42,019 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@62264d4f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2bc0603f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ed19540, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@533e8807, org.springframework.test.context.support.DirtiesContextTestExecutionListener@322eb1a, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@2b4ba2d9, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@69f24965, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4eab9aec, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5a45c218, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2c6efee3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@57ac236a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4542af89] 
2018/05/06 10:35:42,020 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:35:42,056 [main] [INFO ] [BankAccessServiceBlankTest    ] Starting BankAccessServiceBlankTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:35:42,056 [main] [DEBUG] [BankAccessServiceBlankTest    ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:35:42,057 [main] [INFO ] [BankAccessServiceBlankTest    ] The following profiles are active: InMemory                                                          
2018/05/06 10:35:42,059 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4853f592: startup date [Sun May 06 10:35:42 CEST 2018]; root of context hierarchy 
2018/05/06 10:35:42,322 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'analyticsService' with a different definition: replacing [Generic bean: class [de.adorsys.multibanking.service.analytics.AnalyticsService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/fpo/dev/multibanking-develop/multibanking-rest/target/classes/de/adorsys/multibanking/service/analytics/AnalyticsService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=analyticsServiceConfig; factoryMethodName=analyticsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/core/AnalyticsServiceConfig.class]] 
2018/05/06 10:35:42,324 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'systemIDAuth' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=systemAuthConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/service/SystemAuthConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=controllerUnitTestConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/web/ControllerUnitTestConfig.class]] 
2018/05/06 10:35:42,925 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a1504156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:42,929 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:42,930 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6c3627c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:42,933 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c624e408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:42,936 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:35:43,161 [main] [INFO ] [ExtendedStoreConnectionFactory] 
***************************************
*                                     *
*  USE FILE SYSTEM                    *
*  basedir: target/filesystemstorage  *
*                                     *
***************************************
 
2018/05/06 10:35:43,300 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}}                         
2018/05/06 10:35:43,301 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:43,301 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}} -> true              
2018/05/06 10:35:43,476 [main] [INFO ] [UserDetailsServiceAutoConfiguration] 

Using generated security password: 09c1886a-1478-4791-9f27-8332ad09799b
                           
2018/05/06 10:35:43,576 [main] [INFO ] [DefaultSecurityFilterChain    ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3338d706, org.springframework.security.web.context.SecurityContextPersistenceFilter@d970881, org.springframework.security.web.header.HeaderWriterFilter@1f7853af, org.springframework.web.filter.CorsFilter@f776b4a, org.springframework.security.web.authentication.logout.LogoutFilter@53cba89f, de.adorsys.sts.filter.JWTAuthenticationFilter@2fb555e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@153cf928, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4884350b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@19a544cd, org.springframework.security.web.session.SessionManagementFilter@2c56e044, org.springframework.security.web.access.ExceptionTranslationFilter@54a98358, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@76cad511] 
2018/05/06 10:35:43,743 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:35:43,824 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4853f592: startup date [Sun May 06 10:35:42 CEST 2018]; root of context hierarchy 
2018/05/06 10:35:43,868 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:35:43,868 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:35:43,869 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:43,870 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:43,871 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/analytics],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.AccountAnalyticsController.getAccountAnalytics(java.lang.String,java.lang.String) 
2018/05/06 10:35:43,873 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createCategory(de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 10:35:43,873 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getCustomCategories() 
2018/05/06 10:35:43,873 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getStaticCategories() 
2018/05/06 10:35:43,873 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCustomCategory(java.lang.String,de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 10:35:43,874 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCategory(java.lang.String,de.adorsys.multibanking.domain.CategoryEntity) 
2018/05/06 10:35:43,874 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateCustomCategories(java.util.List<de.adorsys.multibanking.domain.CustomCategoryEntity>) 
2018/05/06 10:35:43,874 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateStaticCategories(java.util.List<de.adorsys.multibanking.domain.CategoryEntity>) 
2018/05/06 10:35:43,874 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceCustomCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:43,875 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceStaticCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:43,875 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategory(java.lang.String) 
2018/05/06 10:35:43,875 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategory(java.lang.String) 
2018/05/06 10:35:43,875 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategories(java.util.List<java.lang.String>) 
2018/05/06 10:35:43,876 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategories(java.util.List<java.lang.String>) 
2018/05/06 10:35:43,879 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createRule(de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 10:35:43,880 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getCustomRules() 
2018/05/06 10:35:43,880 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getStaticRules() 
2018/05/06 10:35:43,880 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateCustomRule(java.lang.String,de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 10:35:43,880 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateRule(java.lang.String,de.adorsys.multibanking.domain.RuleEntity) 
2018/05/06 10:35:43,880 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateCustomRules(java.util.List<de.adorsys.multibanking.domain.CustomRuleEntity>) 
2018/05/06 10:35:43,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateStaticRules(java.util.List<de.adorsys.multibanking.domain.RuleEntity>) 
2018/05/06 10:35:43,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceCustomRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:43,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceStaticRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:43,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRule(java.lang.String) 
2018/05/06 10:35:43,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRule(java.lang.String) 
2018/05/06 10:35:43,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRules(java.util.List<java.lang.String>) 
2018/05/06 10:35:43,882 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRules(java.util.List<java.lang.String>) 
2018/05/06 10:35:43,883 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[GET],produces=[image/png]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.ImageController.getImage(java.lang.String) throws java.io.IOException 
2018/05/06 10:35:43,883 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[PUT],consumes=[image/png]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.putImage(java.lang.String,org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:35:43,883 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}/release],methods=[POST]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.patchImage(java.lang.String) 
2018/05/06 10:35:43,884 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bank],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.banks.BankController.loadBanks() 
2018/05/06 10:35:43,884 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.createPayment(java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$CreatePaymentRequest) 
2018/05/06 10:35:43,885 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}/submit],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.submitPayment(java.lang.String,java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$SubmitPaymentRequest) 
2018/05/06 10:35:43,885 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}],methods=[GET]}" onto public org.springframework.hateoas.Resource<de.adorsys.multibanking.domain.PaymentEntity> de.adorsys.multibanking.web.payment.PaymentController.getPayment(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:35:43,886 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<de.adorsys.multibanking.domain.UserAgentCredentials> de.adorsys.multibanking.web.user.UserAgentCredentialsController.getUserAgentCredentials(java.lang.String) 
2018/05/06 10:35:43,886 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[PUT],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.user.UserAgentCredentialsController.postUserAgentCredentials(java.lang.String,de.adorsys.multibanking.domain.UserAgentCredentials) 
2018/05/06 10:35:43,887 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.user.UserDataController.loadUserData() 
2018/05/06 10:35:43,888 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/pop],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> de.adorsys.sts.pop.PopController.getPublicKeys() 
2018/05/06 10:35:43,889 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:35:43,889 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:35:43,952 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:35:43,952 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:35:43,962 [main] [INFO ] [ExceptionHandlerExceptionResolver] Detected @ExceptionHandler methods in exceptionHandlerAdvice                                         
2018/05/06 10:35:44,375 [main] [INFO ] [EndpointLinksResolver         ] Exposing 2 endpoint(s) beneath base path '/actuator'                                                 
2018/05/06 10:35:44,381 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 10:35:44,382 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 10:35:44,382 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:35:44,472 [main] [INFO ] [ScheduledAnnotationBeanPostProcessor] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing                        
2018/05/06 10:35:44,473 [main] [INFO ] [BankAccessServiceBlankTest    ] Started BankAccessServiceBlankTest in 2.44 seconds (JVM running for 16.727)                          
2018/05/06 10:35:44,475 [main] [INFO ] [KeyStoreInitializationRunner  ] Check if keys for keystore are needed to be initialized...                                           
2018/05/06 10:35:45,688 [main] [INFO ] [KeyStoreInitializationRunner  ] Key initialization completed.                                                                        
2018/05/06 10:35:45,752 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - null}} 
2018/05/06 10:35:45,752 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e            
2018/05/06 10:35:45,752 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - null}} -> false 
2018/05/06 10:35:45,753 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} 
2018/05/06 10:35:45,753 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - null}} 
2018/05/06 10:35:45,753 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e            
2018/05/06 10:35:45,753 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - null}} -> false 
2018/05/06 10:35:45,753 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                      
2018/05/06 10:35:45,753 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:45,753 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.zip 
2018/05/06 10:35:45,753 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465 
2018/05/06 10:35:45,753 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e                            
2018/05/06 10:35:47,957 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:47,957 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.zip.5afa1e65-6e34-43ff-8bbf-390f7cf0f221 
2018/05/06 10:35:47,960 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:35:47,961 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:47,961 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e            
2018/05/06 10:35:47,961 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:47,961 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:47,961 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:47,961 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:47,962 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,013 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,013 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,014 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,014 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,014 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,019 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,019 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,019 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,019 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip.9aa9c48c-5177-4b18-a456-13bf54167808 
2018/05/06 10:35:48,020 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,020 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,021 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,021 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,021 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey.zip.85d128f7-1111-48f5-b8a5-8aeac427bb90 
2018/05/06 10:35:48,021 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:35:48,022 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,022 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:48,022 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:48,022 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}}      
2018/05/06 10:35:48,022 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,022 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey.zip 
2018/05/06 10:35:48,022 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,022 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,022 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,022 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:48,022 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,023 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,023 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,023 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,028 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,028 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,028 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,028 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,028 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,028 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,029 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,036 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,036 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:48,036 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/README.txt}                  
2018/05/06 10:35:48,036 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}} 
2018/05/06 10:35:48,036 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,036 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,036 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:35:48,037 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/README.txt.zip.7f99dc67-7f6a-40c2-9706-d2ac8af60a4b 
2018/05/06 10:35:48,037 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/README.txt}               
2018/05/06 10:35:48,037 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:48,037 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} 
2018/05/06 10:35:48,043 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:48,043 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:48,043 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:48,046 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,046 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}}      
2018/05/06 10:35:48,046 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,046 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey.zip 
2018/05/06 10:35:48,047 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,047 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,047 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,047 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:48,047 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,048 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,048 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,048 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,051 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,051 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,051 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,052 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,052 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,052 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,052 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,058 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,058 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:48,058 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,059 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}} 
2018/05/06 10:35:48,059 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,059 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,059 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:48,059 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip.51d07615-b513-4e96-acbe-00e63476292f 
2018/05/06 10:35:48,060 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}          
2018/05/06 10:35:48,060 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,101 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:35:48,101 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:35:48,104 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:48,105 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,105 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,105 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,105 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,105 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:48,105 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:48,105 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,105 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***4e'}, ReadKeyPassword{'27***23'}}} 
2018/05/06 10:35:48,106 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,106 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:48,106 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,106 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                      
2018/05/06 10:35:48,106 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,107 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,107 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,111 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,111 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,111 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,111 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,111 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,111 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,112 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,117 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,117 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} 
2018/05/06 10:35:48,118 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,118 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,143 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,144 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,144 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,144 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,144 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:48,144 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,144 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,144 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,144 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,144 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:48,144 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:48,144 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,144 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***4e'}, ReadKeyPassword{'27***23'}}} 
2018/05/06 10:35:48,144 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,144 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:48,145 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,145 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                      
2018/05/06 10:35:48,145 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,145 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,145 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,149 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,150 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,150 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,150 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,150 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,150 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,150 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,155 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,155 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} 
2018/05/06 10:35:48,156 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,156 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,156 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:48,156 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:48,156 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:48,160 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,160 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}}      
2018/05/06 10:35:48,160 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,161 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey.zip 
2018/05/06 10:35:48,161 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,161 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,161 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,161 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:48,161 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,161 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,162 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,162 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,167 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,168 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,168 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,168 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,168 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,168 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,169 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,174 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,174 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:48,174 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,174 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}} 
2018/05/06 10:35:48,174 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,174 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,174 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:35:48,174 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip.4d6a133e-1d7b-478d-b64e-6172717ed488 
2018/05/06 10:35:48,176 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} 
2018/05/06 10:35:48,176 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}          
2018/05/06 10:35:48,176 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,178 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:35:48,178 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:35:48,182 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:48,182 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,182 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,182 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,182 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,182 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:48,182 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:48,182 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,182 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***4e'}, ReadKeyPassword{'27***23'}}} 
2018/05/06 10:35:48,182 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,183 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:35:48,183 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,183 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                      
2018/05/06 10:35:48,183 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,183 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,183 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,187 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,187 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,187 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,187 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,187 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,187 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,187 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,194 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,194 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} 
2018/05/06 10:35:48,194 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,195 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,196 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:48,196 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:48,196 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:48,201 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,201 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}}      
2018/05/06 10:35:48,201 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,201 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey.zip 
2018/05/06 10:35:48,201 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,201 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,201 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,201 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:48,201 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,202 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,202 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,202 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,205 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,205 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,205 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,205 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,205 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,205 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,206 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,211 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,211 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:48,211 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,211 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}} 
2018/05/06 10:35:48,211 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,211 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,211 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 1130
}with UTF-8 
2018/05/06 10:35:48,212 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip.a5e5da6d-4b73-495f-a2d9-51a1d9f92532 
2018/05/06 10:35:48,213 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} 
2018/05/06 10:35:48,214 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}          
2018/05/06 10:35:48,214 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,216 [main] [INFO ] [BankAccessService             ] [1] accounts for connection [ac9e1d72-ef53-48f9-af00-b4e63ae08bb6] created.                          
2018/05/06 10:35:48,217 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:48,217 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,217 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,217 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,217 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,218 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:48,218 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:48,218 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,218 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***4e'}, ReadKeyPassword{'27***23'}}} 
2018/05/06 10:35:48,218 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,218 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 1130
}with UTF-8 
2018/05/06 10:35:48,218 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,218 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                      
2018/05/06 10:35:48,218 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,218 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,218 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,222 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,222 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,222 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,222 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,222 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,222 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,222 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,227 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,227 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} 
2018/05/06 10:35:48,228 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,228 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,229 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:48,229 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:48,229 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:48,229 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,229 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}}      
2018/05/06 10:35:48,229 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,229 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey.zip 
2018/05/06 10:35:48,229 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,229 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,229 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,229 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:48,229 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home.bucketGuardKey} 
2018/05/06 10:35:48,230 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,230 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,230 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,236 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,236 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,236 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,236 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,236 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,237 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,237 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,245 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,245 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home}} 
2018/05/06 10:35:48,245 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,245 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}} 
2018/05/06 10:35:48,246 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,246 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,246 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:48,246 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip.15debeec-2a40-41f5-ad75-43e0ba75264c 
2018/05/06 10:35:48,247 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} 
2018/05/06 10:35:48,248 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}          
2018/05/06 10:35:48,248 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,248 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:48,248 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,248 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,248 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,248 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,248 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:48,248 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:48,249 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,249 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***4e'}, ReadKeyPassword{'27***23'}}} 
2018/05/06 10:35:48,249 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,249 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:48,249 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,249 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                      
2018/05/06 10:35:48,249 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,250 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,250 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,253 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,253 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,253 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,253 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,253 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,254 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,254 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,259 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,259 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} 
2018/05/06 10:35:48,259 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,259 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,260 [main] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6'}            
2018/05/06 10:35:48,260 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6'}         
2018/05/06 10:35:48,260 [main] [INFO ] [BucketServiceImpl             ] start delete plain directory BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6}} 
2018/05/06 10:35:48,260 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,260 [main] [DEBUG] [FileSystemExtendedStorageConnection] remove directory /Users/fpo/dev/multibanking-develop/multibanking-rest/target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6 
2018/05/06 10:35:48,260 [main] [INFO ] [BucketServiceImpl             ] finished delete plain file BucketDirectory{path=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6}} 
2018/05/06 10:35:48,260 [main] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6'}            
2018/05/06 10:35:48,260 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/ac9e1d72-ef53-48f9-af00-b4e63ae08bb6'}         
2018/05/06 10:35:48,305 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:48,305 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:48,306 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}         
2018/05/06 10:35:48,306 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes.zip 
2018/05/06 10:35:48,306 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}      
2018/05/06 10:35:48,306 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:48,306 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:48,306 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,306 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***4e'}, ReadKeyPassword{'27***23'}}} 
2018/05/06 10:35:48,306 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,306 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK0811ed46-e050-4eee-be87-404dfa4e95c1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:48,306 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                                   
2018/05/06 10:35:48,306 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}                      
2018/05/06 10:35:48,306 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,306 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,306 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,310 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,310 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1.zip 
2018/05/06 10:35:48,310 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,310 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1} 
2018/05/06 10:35:48,310 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-1b2e1dfc-8655-4373-b588-23d63468ba4e                    
2018/05/06 10:35:48,310 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-1b2e1dfc-8655-4373-b588-23d63468ba4e/.keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e.DK0811ed46-e050-4eee-be87-404dfa4e95c1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,310 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31623265316466632D383635352D343337332D623538382D323364363334363862613465WU7NB'} 
2018/05/06 10:35:48,315 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'} from document guard at BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - .keystore/KS-1b2e1dfc-8655-4373-b588-23d63468ba4e} 
2018/05/06 10:35:48,315 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK0811ed46-e050-4eee-be87-404dfa4e95c1'}, DocumentKey{B833....F479}}, accessType=WRITE} 
2018/05/06 10:35:48,315 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-1b2e1dfc-8655-4373-b588-23d63468ba4e - home/mbsUserData.aes}             
2018/05/06 10:35:48,315 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'1b2e1dfc-8655-4373-b588-23d63468ba4e'}, ReadKeyPassword{'27***23'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:48,316 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:35:48,316 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:35:48,316 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:35:48,316 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:35:48,316 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:35:48,319 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:48,320 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:35:48,320 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:35:48,320 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:35:48,320 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:35:48,320 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:35:48,320 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:48,320 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:48,320 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:35:48,320 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:48,320 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:48,320 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,323 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:48,323 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:35:48,323 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:48,323 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:48,323 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:48,323 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:35:48,323 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:35:48,328 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:48,329 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:35:48,329 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:35:48,329 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:35:48,329 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:35:48,329 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:48,329 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:35:48,329 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.e3ca4816-2b19-46be-b64a-fea115f405e9 
2018/05/06 10:35:48,331 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:35:48,332 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:48,332 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:35:48,339 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - null}} 
2018/05/06 10:35:48,339 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914            
2018/05/06 10:35:48,339 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - null}} -> false 
2018/05/06 10:35:48,340 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} 
2018/05/06 10:35:48,340 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - null}} 
2018/05/06 10:35:48,340 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914            
2018/05/06 10:35:48,340 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - null}} -> false 
2018/05/06 10:35:48,340 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                      
2018/05/06 10:35:48,340 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:48,340 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.zip 
2018/05/06 10:35:48,340 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134 
2018/05/06 10:35:48,340 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914                            
2018/05/06 10:35:51,169 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,170 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.zip.d35e8b06-2d96-4f2f-b848-f74421e6d874 
2018/05/06 10:35:51,170 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:35:51,171 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,171 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914            
2018/05/06 10:35:51,171 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home}} 
2018/05/06 10:35:51,171 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,171 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,171 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,171 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,219 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX'} 
2018/05/06 10:35:51,219 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,219 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,219 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173.zip 
2018/05/06 10:35:51,219 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,225 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX'} 
2018/05/06 10:35:51,225 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,226 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,226 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173.zip.b4c93610-aa10-4a1d-a8ce-d3c9dd924482 
2018/05/06 10:35:51,227 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,227 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,228 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,228 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,228 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey.zip.3e56e296-2cc4-4245-adab-d2b85fa6d4cf 
2018/05/06 10:35:51,229 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:35:51,230 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,230 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home}} 
2018/05/06 10:35:51,230 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:51,230 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home}}      
2018/05/06 10:35:51,230 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,230 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey.zip 
2018/05/06 10:35:51,230 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,230 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,230 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,231 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:51,231 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,231 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'} from document guard at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,232 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,232 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,236 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,236 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173.zip 
2018/05/06 10:35:51,236 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,236 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,236 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,236 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,236 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX'} 
2018/05/06 10:35:51,242 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'} from document guard at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,242 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home}} 
2018/05/06 10:35:51,242 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/README.txt}                  
2018/05/06 10:35:51,242 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}} 
2018/05/06 10:35:51,242 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}                                   
2018/05/06 10:35:51,242 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,243 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKba38ef29-b539-4d62-9a83-2f80442db173"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:35:51,243 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home/README.txt.zip.4561e56e-3a40-46b6-a0f4-9cb9ffb6c1a1 
2018/05/06 10:35:51,243 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/README.txt}               
2018/05/06 10:35:51,243 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:51,243 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} 
2018/05/06 10:35:51,244 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:51,244 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:51,244 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:51,244 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:51,244 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home}}      
2018/05/06 10:35:51,244 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,244 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey.zip 
2018/05/06 10:35:51,244 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,244 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,245 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,245 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:51,245 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home.bucketGuardKey} 
2018/05/06 10:35:51,245 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'} from document guard at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,245 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,245 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,249 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,249 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173.zip 
2018/05/06 10:35:51,249 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,249 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,249 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,249 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,250 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX'} 
2018/05/06 10:35:51,255 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'} from document guard at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,255 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home}} 
2018/05/06 10:35:51,255 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/mbsUserData.aes}             
2018/05/06 10:35:51,255 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}} 
2018/05/06 10:35:51,255 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}                                   
2018/05/06 10:35:51,255 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,255 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKba38ef29-b539-4d62-9a83-2f80442db173"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:51,255 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home/mbsUserData.aes.zip.c7172cc6-d89a-43e2-bf73-cdf20045ec32 
2018/05/06 10:35:51,256 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/mbsUserData.aes}          
2018/05/06 10:35:51,256 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:51,267 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:35:51,267 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:35:51,267 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:51,267 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:51,267 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/mbsUserData.aes}         
2018/05/06 10:35:51,267 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home/mbsUserData.aes.zip 
2018/05/06 10:35:51,267 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/mbsUserData.aes}      
2018/05/06 10:35:51,267 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:51,267 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:51,267 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:51,267 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***14'}, ReadKeyPassword{'7e***e5'}}} 
2018/05/06 10:35:51,267 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,268 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKba38ef29-b539-4d62-9a83-2f80442db173"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:51,268 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}                                   
2018/05/06 10:35:51,268 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}                      
2018/05/06 10:35:51,268 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'} from document guard at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,268 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,268 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,274 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,274 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173.zip 
2018/05/06 10:35:51,274 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,274 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173} 
2018/05/06 10:35:51,274 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914                    
2018/05/06 10:35:51,274 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914/.keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914.DKba38ef29-b539-4d62-9a83-2f80442db173",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,274 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66316363643036312D656534652D343035372D613065372D363336306565623734393134IX8CX'} 
2018/05/06 10:35:51,280 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'} from document guard at BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - .keystore/KS-f1ccd061-ee4e-4057-a0e7-6360eeb74914} 
2018/05/06 10:35:51,281 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKba38ef29-b539-4d62-9a83-2f80442db173'}, DocumentKey{279C....8966}}, accessType=WRITE} 
2018/05/06 10:35:51,281 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-f1ccd061-ee4e-4057-a0e7-6360eeb74914 - home/mbsUserData.aes}             
2018/05/06 10:35:51,281 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'f1ccd061-ee4e-4057-a0e7-6360eeb74914'}, ReadKeyPassword{'7e***e5'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:51,281 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:35:51,281 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:35:51,281 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:35:51,282 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:35:51,282 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:35:51,286 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:51,286 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:35:51,286 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:35:51,286 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:35:51,286 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:35:51,286 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:35:51,286 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:51,286 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:51,286 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:35:51,286 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:51,287 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:51,287 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,289 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:51,289 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:35:51,289 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:51,289 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:51,289 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:51,290 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:35:51,290 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:35:51,295 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:51,295 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:35:51,295 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:35:51,295 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:35:51,295 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:35:51,295 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:51,296 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:35:51,296 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.a5a7b30f-78fb-456a-bec3-753e1983e7c3 
2018/05/06 10:35:51,296 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:35:51,297 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:35:51,297 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:51,297 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:35:51,302 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - null}} 
2018/05/06 10:35:51,302 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d            
2018/05/06 10:35:51,302 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - null}} -> false 
2018/05/06 10:35:51,302 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} 
2018/05/06 10:35:51,302 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - null}} 
2018/05/06 10:35:51,302 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d            
2018/05/06 10:35:51,303 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - null}} -> false 
2018/05/06 10:35:51,303 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                      
2018/05/06 10:35:51,303 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:51,303 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.zip 
2018/05/06 10:35:51,303 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764 
2018/05/06 10:35:51,303 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                            
2018/05/06 10:35:55,066 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,066 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.zip.adff096e-6c9c-47fe-9d40-f19bd344ef6e 
2018/05/06 10:35:55,067 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:35:55,068 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,068 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d            
2018/05/06 10:35:55,068 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}} 
2018/05/06 10:35:55,068 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,068 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,068 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,069 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,120 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,120 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,120 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,120 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip 
2018/05/06 10:35:55,120 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,125 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,125 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,125 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,125 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip.8bdeef4a-6f7c-48b1-b1dd-fe5ec0eb81b6 
2018/05/06 10:35:55,126 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,126 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,126 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,126 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,127 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey.zip.b883809c-db05-46fb-b176-294115c3ee00 
2018/05/06 10:35:55,127 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:35:55,128 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,128 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}} 
2018/05/06 10:35:55,128 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:55,128 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}}      
2018/05/06 10:35:55,128 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,128 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey.zip 
2018/05/06 10:35:55,128 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,128 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,128 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,128 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:55,129 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,129 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,129 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,129 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,133 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,134 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip 
2018/05/06 10:35:55,134 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,134 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,134 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,134 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,135 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,141 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,141 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}} 
2018/05/06 10:35:55,141 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/README.txt}                  
2018/05/06 10:35:55,141 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}} 
2018/05/06 10:35:55,141 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                                   
2018/05/06 10:35:55,141 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,141 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:35:55,141 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/README.txt.zip.ced2193e-b8d0-41c1-8075-dcf3932a5c2b 
2018/05/06 10:35:55,142 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/README.txt}               
2018/05/06 10:35:55,142 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:55,142 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} 
2018/05/06 10:35:55,142 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:55,142 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:55,142 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:55,142 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,143 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}}      
2018/05/06 10:35:55,143 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,143 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey.zip 
2018/05/06 10:35:55,143 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,143 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,143 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,143 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:55,143 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,143 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,143 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,143 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,146 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,146 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip 
2018/05/06 10:35:55,146 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,146 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,146 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,146 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,146 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,151 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,151 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}} 
2018/05/06 10:35:55,151 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}             
2018/05/06 10:35:55,151 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}} 
2018/05/06 10:35:55,152 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                                   
2018/05/06 10:35:55,152 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,152 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:55,152 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes.zip.f6e94b1d-9a1b-49f2-8fca-0c675f64318f 
2018/05/06 10:35:55,152 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}          
2018/05/06 10:35:55,152 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,158 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:35:55,158 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:35:55,158 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:55,158 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:55,158 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}         
2018/05/06 10:35:55,158 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes.zip 
2018/05/06 10:35:55,158 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}      
2018/05/06 10:35:55,158 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:55,158 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:55,158 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,158 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***7d'}, ReadKeyPassword{'61***26'}}} 
2018/05/06 10:35:55,159 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,159 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:55,159 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                                   
2018/05/06 10:35:55,159 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                      
2018/05/06 10:35:55,159 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,159 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,159 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,163 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,163 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip 
2018/05/06 10:35:55,163 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,163 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,164 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,164 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,164 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,171 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,171 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} 
2018/05/06 10:35:55,171 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}             
2018/05/06 10:35:55,171 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,171 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:55,171 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}         
2018/05/06 10:35:55,171 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes.zip 
2018/05/06 10:35:55,171 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}      
2018/05/06 10:35:55,171 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:55,172 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:55,172 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}         
2018/05/06 10:35:55,172 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes.zip 
2018/05/06 10:35:55,172 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}      
2018/05/06 10:35:55,172 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:55,172 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:55,172 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,172 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***7d'}, ReadKeyPassword{'61***26'}}} 
2018/05/06 10:35:55,172 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,172 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:55,173 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                                   
2018/05/06 10:35:55,173 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                      
2018/05/06 10:35:55,173 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,173 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,173 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,177 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,177 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip 
2018/05/06 10:35:55,177 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,177 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,178 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,178 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,178 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,184 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,184 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} 
2018/05/06 10:35:55,185 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}             
2018/05/06 10:35:55,185 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,185 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:55,185 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:55,185 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:55,186 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,186 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}}      
2018/05/06 10:35:55,186 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,186 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey.zip 
2018/05/06 10:35:55,186 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,186 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,186 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,186 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:55,186 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home.bucketGuardKey} 
2018/05/06 10:35:55,187 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,187 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,187 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,189 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,190 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4.zip 
2018/05/06 10:35:55,190 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,190 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4} 
2018/05/06 10:35:55,190 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,190 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/.keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d.DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,190 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62356135396137352D636535642D343131382D386165622D393236336366356139383764X7QA1'} 
2018/05/06 10:35:55,195 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'} from document guard at BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - .keystore/KS-b5a59a75-ce5d-4118-8aeb-9263cf5a987d} 
2018/05/06 10:35:55,195 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home}} 
2018/05/06 10:35:55,195 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}             
2018/05/06 10:35:55,195 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}, DocumentKey{192E....BDA4}} 
2018/05/06 10:35:55,195 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4'}                                   
2018/05/06 10:35:55,195 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d                    
2018/05/06 10:35:55,195 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4c6ae27f-525b-44af-b0e6-b3fcf20c3fa4"
    }
  },
  "size": 603
}with UTF-8 
2018/05/06 10:35:55,195 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d/home/mbsUserData.aes.zip.7fad616d-8844-4369-9f09-dfe652bf1ef9 
2018/05/06 10:35:55,196 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes} 
2018/05/06 10:35:55,196 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-b5a59a75-ce5d-4118-8aeb-9263cf5a987d - home/mbsUserData.aes}          
2018/05/06 10:35:55,196 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'b5a59a75-ce5d-4118-8aeb-9263cf5a987d'}, ReadKeyPassword{'61***26'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:55,196 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:35:55,196 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:35:55,196 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:35:55,196 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:35:55,196 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:35:55,197 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:55,197 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:35:55,197 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:35:55,197 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:35:55,197 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:35:55,197 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:35:55,197 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:55,197 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:55,197 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:35:55,198 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:55,198 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:55,198 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,200 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:55,200 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:35:55,200 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:55,200 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:55,200 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:55,200 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:35:55,200 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:35:55,207 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:55,207 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:35:55,207 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:35:55,207 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:35:55,207 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:35:55,207 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:55,207 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:35:55,207 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.829817a2-fda8-4544-97e1-5643e76ac70e 
2018/05/06 10:35:55,208 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:35:55,209 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:35:55,209 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:55,209 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:35:55,216 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - null}} 
2018/05/06 10:35:55,216 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640            
2018/05/06 10:35:55,216 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - null}} -> false 
2018/05/06 10:35:55,216 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} 
2018/05/06 10:35:55,216 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - null}} 
2018/05/06 10:35:55,216 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640            
2018/05/06 10:35:55,216 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - null}} -> false 
2018/05/06 10:35:55,216 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                      
2018/05/06 10:35:55,216 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:55,216 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.zip 
2018/05/06 10:35:55,216 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430 
2018/05/06 10:35:55,216 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640                            
2018/05/06 10:35:58,292 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,292 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.zip.2452fcb9-2049-42b1-8186-48964f187b7e 
2018/05/06 10:35:58,293 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:35:58,294 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,294 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640            
2018/05/06 10:35:58,294 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}} 
2018/05/06 10:35:58,294 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,294 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,294 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,295 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,341 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,341 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,341 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,341 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip 
2018/05/06 10:35:58,341 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,348 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,348 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,348 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,348 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip.5ebaaa55-9f99-4925-87d1-05a66c23db6e 
2018/05/06 10:35:58,349 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,349 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,350 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,350 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,350 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey.zip.b8dd860b-433b-4669-9ee2-a74026aaec4d 
2018/05/06 10:35:58,350 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:35:58,350 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,350 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}} 
2018/05/06 10:35:58,350 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:58,350 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}}      
2018/05/06 10:35:58,350 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,350 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey.zip 
2018/05/06 10:35:58,351 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,351 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,351 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,351 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:58,351 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,351 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,351 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,351 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,353 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,353 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip 
2018/05/06 10:35:58,353 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,353 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,354 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,354 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,354 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,358 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,358 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}} 
2018/05/06 10:35:58,358 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/README.txt}                  
2018/05/06 10:35:58,359 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}} 
2018/05/06 10:35:58,359 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                                   
2018/05/06 10:35:58,359 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,359 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbe384888-308d-432f-8bd3-575caff5bb87"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:35:58,359 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/home/README.txt.zip.3e16c079-4659-4a1d-8b77-e71d86965d88 
2018/05/06 10:35:58,359 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/README.txt}               
2018/05/06 10:35:58,360 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'README.txt'} 
2018/05/06 10:35:58,360 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} 
2018/05/06 10:35:58,360 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:58,360 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:58,360 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:58,360 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,360 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}}      
2018/05/06 10:35:58,361 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,361 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey.zip 
2018/05/06 10:35:58,361 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,361 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,361 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,361 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:58,361 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,361 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,361 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,361 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,364 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,364 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip 
2018/05/06 10:35:58,364 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,364 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,365 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,365 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,365 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,370 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,370 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}} 
2018/05/06 10:35:58,370 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}             
2018/05/06 10:35:58,370 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}} 
2018/05/06 10:35:58,370 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                                   
2018/05/06 10:35:58,370 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,370 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbe384888-308d-432f-8bd3-575caff5bb87"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:58,371 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes.zip.d92e86fd-cade-448d-ba63-54d64f82c7cf 
2018/05/06 10:35:58,371 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}          
2018/05/06 10:35:58,371 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,374 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:35:58,374 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:35:58,374 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:58,375 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'e682c3be-b613-4898-8699-380de5ffa640'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:58,375 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}         
2018/05/06 10:35:58,375 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes.zip 
2018/05/06 10:35:58,375 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}      
2018/05/06 10:35:58,375 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:58,375 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:58,375 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,375 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***40'}, ReadKeyPassword{'75***d7'}}} 
2018/05/06 10:35:58,375 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,375 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbe384888-308d-432f-8bd3-575caff5bb87"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:58,375 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                                   
2018/05/06 10:35:58,375 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                      
2018/05/06 10:35:58,375 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,375 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,375 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,378 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,379 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip 
2018/05/06 10:35:58,379 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,379 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,379 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,379 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,379 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,384 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,384 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} 
2018/05/06 10:35:58,384 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}             
2018/05/06 10:35:58,384 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,384 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'e682c3be-b613-4898-8699-380de5ffa640'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:58,384 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}         
2018/05/06 10:35:58,385 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes.zip 
2018/05/06 10:35:58,385 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}      
2018/05/06 10:35:58,385 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:35:58,385 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'e682c3be-b613-4898-8699-380de5ffa640'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:35:58,385 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}         
2018/05/06 10:35:58,385 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes.zip 
2018/05/06 10:35:58,385 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}      
2018/05/06 10:35:58,385 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:35:58,385 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:35:58,385 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,385 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***40'}, ReadKeyPassword{'75***d7'}}} 
2018/05/06 10:35:58,385 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,385 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbe384888-308d-432f-8bd3-575caff5bb87"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:35:58,385 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                                   
2018/05/06 10:35:58,385 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                      
2018/05/06 10:35:58,385 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,385 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,385 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,388 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,388 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip 
2018/05/06 10:35:58,388 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,388 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,388 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,388 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,388 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,394 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,394 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} 
2018/05/06 10:35:58,395 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}             
2018/05/06 10:35:58,395 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,395 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:35:58,395 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:35:58,395 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:35:58,395 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,396 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}}      
2018/05/06 10:35:58,396 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,396 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey.zip 
2018/05/06 10:35:58,396 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,396 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,396 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,396 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:58,397 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/bp-e682c3be-b613-4898-8699-380de5ffa640/home.bucketGuardKey} 
2018/05/06 10:35:58,397 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,397 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,397 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,400 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,400 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87.zip 
2018/05/06 10:35:58,400 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,400 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87} 
2018/05/06 10:35:58,400 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,401 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/.keystore/KS-e682c3be-b613-4898-8699-380de5ffa640.DKbe384888-308d-432f-8bd3-575caff5bb87",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,401 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D65363832633362652D623631332D343839382D383639392D333830646535666661363430EDBHB'} 
2018/05/06 10:35:58,406 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'} from document guard at BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - .keystore/KS-e682c3be-b613-4898-8699-380de5ffa640} 
2018/05/06 10:35:58,406 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home}} 
2018/05/06 10:35:58,406 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}             
2018/05/06 10:35:58,406 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}, DocumentKey{4E16....E446}} 
2018/05/06 10:35:58,407 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKbe384888-308d-432f-8bd3-575caff5bb87'}                                   
2018/05/06 10:35:58,407 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640                    
2018/05/06 10:35:58,407 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbe384888-308d-432f-8bd3-575caff5bb87"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:35:58,407 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-e682c3be-b613-4898-8699-380de5ffa640/home/mbsUserData.aes.zip.80e956dc-cf04-4d6d-958b-162aafe29705 
2018/05/06 10:35:58,407 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes} 
2018/05/06 10:35:58,408 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-e682c3be-b613-4898-8699-380de5ffa640 - home/mbsUserData.aes}          
2018/05/06 10:35:58,408 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'e682c3be-b613-4898-8699-380de5ffa640'}, ReadKeyPassword{'75***d7'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:35:58,408 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:35:58,408 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:58,409 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:35:58,409 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:35:58,409 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:35:58,409 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:35:58,409 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:35:58,409 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:58,409 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:35:58,409 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:35:58,409 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:58,409 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:58,410 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,411 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:58,412 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:35:58,412 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:58,412 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:35:58,412 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:58,412 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:35:58,412 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:35:58,417 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:35:58,417 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:35:58,417 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:35:58,417 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:35:58,417 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:35:58,417 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:35:58,418 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:35:58,418 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.536f98ab-dca7-4733-bd86-70d421cc620a 
2018/05/06 10:35:58,418 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:35:58,419 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:35:58,419 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:35:58,419 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:35:58,424 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - null}} 
2018/05/06 10:35:58,424 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131            
2018/05/06 10:35:58,424 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - null}} -> false 
2018/05/06 10:35:58,425 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} 
2018/05/06 10:35:58,425 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - null}} 
2018/05/06 10:35:58,425 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131            
2018/05/06 10:35:58,425 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - null}} -> false 
2018/05/06 10:35:58,425 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                      
2018/05/06 10:35:58,425 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:35:58,425 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.zip 
2018/05/06 10:35:58,425 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331 
2018/05/06 10:35:58,425 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131                            
2018/05/06 10:36:01,239 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,240 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.zip.fbef902d-d808-4883-97d0-ce38815db6eb 
2018/05/06 10:36:01,240 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:01,241 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,241 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131            
2018/05/06 10:36:01,241 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}} 
2018/05/06 10:36:01,241 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,241 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,241 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,243 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,290 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,290 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,290 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,290 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,290 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,297 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,297 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,297 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,297 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip.5a8088f4-b7df-4a5f-81f7-02dbcd455eeb 
2018/05/06 10:36:01,298 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,298 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,298 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,298 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,298 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey.zip.459ec13b-4fc8-4e19-b8b8-8c030db7e934 
2018/05/06 10:36:01,298 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:01,299 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,299 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}} 
2018/05/06 10:36:01,299 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:01,299 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}}      
2018/05/06 10:36:01,299 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,299 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey.zip 
2018/05/06 10:36:01,299 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,299 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,299 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,299 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:01,299 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,299 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,299 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,299 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,302 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,302 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,302 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,302 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,302 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,302 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,302 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,307 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,307 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}} 
2018/05/06 10:36:01,307 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/README.txt}                  
2018/05/06 10:36:01,307 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}} 
2018/05/06 10:36:01,307 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,307 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,308 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:01,308 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/README.txt.zip.ead87421-a86a-429e-ab4f-5be2de868637 
2018/05/06 10:36:01,308 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/README.txt}               
2018/05/06 10:36:01,308 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:01,308 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} 
2018/05/06 10:36:01,309 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:01,309 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:01,309 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:01,309 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,309 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}}      
2018/05/06 10:36:01,309 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,309 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey.zip 
2018/05/06 10:36:01,309 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,309 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,309 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,309 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:01,309 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,309 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,310 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,310 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,313 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,313 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,313 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,313 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,313 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,313 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,313 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,319 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,319 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}} 
2018/05/06 10:36:01,319 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,319 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}} 
2018/05/06 10:36:01,319 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,319 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,319 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:01,320 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip.300667d8-0f5b-4c4e-a17d-262070dacc1b 
2018/05/06 10:36:01,320 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}          
2018/05/06 10:36:01,320 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,323 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:01,323 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:01,323 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:01,323 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:01,323 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}         
2018/05/06 10:36:01,323 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip 
2018/05/06 10:36:01,323 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}      
2018/05/06 10:36:01,323 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:01,323 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:01,323 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,323 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***31'}, ReadKeyPassword{'40***85'}}} 
2018/05/06 10:36:01,323 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,324 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:01,324 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,324 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                      
2018/05/06 10:36:01,324 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,324 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,324 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,326 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,326 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,326 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,326 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,326 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,326 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,327 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,333 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,333 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} 
2018/05/06 10:36:01,333 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,333 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,333 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:01,333 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}         
2018/05/06 10:36:01,333 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip 
2018/05/06 10:36:01,333 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}      
2018/05/06 10:36:01,333 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:01,333 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:01,334 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}         
2018/05/06 10:36:01,334 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip 
2018/05/06 10:36:01,334 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}      
2018/05/06 10:36:01,334 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:01,334 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:01,334 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,334 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***31'}, ReadKeyPassword{'40***85'}}} 
2018/05/06 10:36:01,334 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,334 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:01,334 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,334 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                      
2018/05/06 10:36:01,334 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,334 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,334 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,339 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,339 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,339 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,339 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,339 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,339 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,339 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,345 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,345 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} 
2018/05/06 10:36:01,345 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,345 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,345 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:01,345 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:01,345 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:01,346 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,346 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}}      
2018/05/06 10:36:01,346 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,346 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey.zip 
2018/05/06 10:36:01,346 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,346 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,346 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,346 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:01,346 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,347 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,347 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,347 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,351 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,351 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,351 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,351 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,351 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,351 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,351 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,357 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,357 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}} 
2018/05/06 10:36:01,357 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,357 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}} 
2018/05/06 10:36:01,357 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,357 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,357 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:36:01,357 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip.4305c171-d324-47a0-8967-aecc8209cc4d 
2018/05/06 10:36:01,357 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} 
2018/05/06 10:36:01,358 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}          
2018/05/06 10:36:01,358 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,358 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:01,358 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:01,358 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:01,358 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:01,358 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}         
2018/05/06 10:36:01,358 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip 
2018/05/06 10:36:01,358 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}      
2018/05/06 10:36:01,358 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:01,358 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:01,358 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,358 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***31'}, ReadKeyPassword{'40***85'}}} 
2018/05/06 10:36:01,358 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,359 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:36:01,359 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,359 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                      
2018/05/06 10:36:01,359 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,359 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,359 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,361 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,361 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,361 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,361 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,361 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,361 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,361 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,366 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,366 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} 
2018/05/06 10:36:01,367 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,367 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,367 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:01,367 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:01,367 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:01,367 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,367 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}}      
2018/05/06 10:36:01,367 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,367 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey.zip 
2018/05/06 10:36:01,367 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,367 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,367 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,368 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:01,368 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home.bucketGuardKey} 
2018/05/06 10:36:01,368 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,368 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,368 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,371 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,371 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,371 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,371 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,371 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,371 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,371 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,377 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,377 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home}} 
2018/05/06 10:36:01,377 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,377 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}} 
2018/05/06 10:36:01,377 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,378 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,378 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 1130
}with UTF-8 
2018/05/06 10:36:01,378 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip.d58eb9f2-3ed0-4605-95e0-144d6a3d8df4 
2018/05/06 10:36:01,380 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} 
2018/05/06 10:36:01,380 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}          
2018/05/06 10:36:01,380 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,380 [main] [INFO ] [BankAccessService             ] [1] accounts for connection [01d9b315-48c1-4235-bc7a-a1c488311705] created.                          
2018/05/06 10:36:01,380 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:01,380 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:01,380 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}         
2018/05/06 10:36:01,380 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip 
2018/05/06 10:36:01,380 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}      
2018/05/06 10:36:01,380 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:01,380 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:01,380 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,380 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***31'}, ReadKeyPassword{'40***85'}}} 
2018/05/06 10:36:01,380 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,380 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 1130
}with UTF-8 
2018/05/06 10:36:01,381 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,381 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                      
2018/05/06 10:36:01,381 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,381 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,381 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,384 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,384 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,384 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,384 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,384 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,384 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,385 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,389 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,390 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} 
2018/05/06 10:36:01,390 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,390 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,390 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:01,390 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:01,390 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}         
2018/05/06 10:36:01,390 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes.zip 
2018/05/06 10:36:01,390 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}      
2018/05/06 10:36:01,391 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:01,391 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:01,391 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,391 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***31'}, ReadKeyPassword{'40***85'}}} 
2018/05/06 10:36:01,391 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,391 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKf007b6d0-f53d-4aee-bceb-6737e5e0d421"
    }
  },
  "size": 1130
}with UTF-8 
2018/05/06 10:36:01,391 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                                   
2018/05/06 10:36:01,391 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}                      
2018/05/06 10:36:01,391 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,391 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,391 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,393 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,393 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421.zip 
2018/05/06 10:36:01,393 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,394 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421} 
2018/05/06 10:36:01,394 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-6b0330ca-32ed-44cb-9830-b08b6ac61131                    
2018/05/06 10:36:01,394 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-6b0330ca-32ed-44cb-9830-b08b6ac61131/.keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131.DKf007b6d0-f53d-4aee-bceb-6737e5e0d421",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,394 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D36623033333063612D333265642D343463622D393833302D623038623661633631313331RFW1W'} 
2018/05/06 10:36:01,399 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'} from document guard at BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - .keystore/KS-6b0330ca-32ed-44cb-9830-b08b6ac61131} 
2018/05/06 10:36:01,400 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKf007b6d0-f53d-4aee-bceb-6737e5e0d421'}, DocumentKey{2BD0....BCAC}}, accessType=WRITE} 
2018/05/06 10:36:01,400 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-6b0330ca-32ed-44cb-9830-b08b6ac61131 - home/mbsUserData.aes}             
2018/05/06 10:36:01,400 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'6b0330ca-32ed-44cb-9830-b08b6ac61131'}, ReadKeyPassword{'40***85'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:01,404 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:01,404 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:01,404 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:01,404 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:01,404 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:01,404 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:01,404 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:01,404 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:01,404 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:01,404 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:01,404 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:01,404 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:01,404 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:01,405 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:01,405 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:01,405 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:01,405 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,407 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:01,407 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:01,407 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:01,407 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:01,407 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:01,407 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:01,407 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:01,412 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:01,412 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:01,412 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:01,412 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:01,412 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:01,412 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:01,412 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:01,412 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.cc44e289-5c4e-40b2-a345-fb88d54fe6be 
2018/05/06 10:36:01,413 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:01,413 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:01,413 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:01,413 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:01,417 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - null}} 
2018/05/06 10:36:01,417 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c            
2018/05/06 10:36:01,417 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - null}} -> false 
2018/05/06 10:36:01,417 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} 
2018/05/06 10:36:01,417 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - null}} 
2018/05/06 10:36:01,417 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c            
2018/05/06 10:36:01,417 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - null}} -> false 
2018/05/06 10:36:01,417 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                      
2018/05/06 10:36:01,417 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:01,417 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.zip 
2018/05/06 10:36:01,417 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D336238353166363737633863 
2018/05/06 10:36:01,417 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c                            
2018/05/06 10:36:04,353 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,353 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.zip.9c59cfc3-ea40-4806-83a3-a18bc68d0946 
2018/05/06 10:36:04,353 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:04,354 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,354 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c            
2018/05/06 10:36:04,354 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}} 
2018/05/06 10:36:04,354 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,354 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,355 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,356 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,401 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,402 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,402 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,402 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip 
2018/05/06 10:36:04,402 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,408 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,408 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,408 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,408 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip.054e3cef-a031-4494-9418-a371c35fc81b 
2018/05/06 10:36:04,409 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,409 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,409 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,409 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,409 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey.zip.65a759ad-0cf0-41cc-9adf-52e8e1bcf867 
2018/05/06 10:36:04,409 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:04,410 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,410 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}} 
2018/05/06 10:36:04,410 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:04,410 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}}      
2018/05/06 10:36:04,410 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,410 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey.zip 
2018/05/06 10:36:04,410 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,410 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,410 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,410 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:04,410 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,410 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,410 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,410 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,414 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,414 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip 
2018/05/06 10:36:04,414 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,414 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,414 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,414 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,415 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,420 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,420 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}} 
2018/05/06 10:36:04,420 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/README.txt}                  
2018/05/06 10:36:04,420 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}} 
2018/05/06 10:36:04,420 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                                   
2018/05/06 10:36:04,420 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,420 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:04,421 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/README.txt.zip.18e2a472-4d07-465e-a98f-eef0f97973f5 
2018/05/06 10:36:04,421 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/README.txt}               
2018/05/06 10:36:04,421 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:04,421 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} 
2018/05/06 10:36:04,421 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:04,421 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:04,421 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:04,422 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,422 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}}      
2018/05/06 10:36:04,422 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,422 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey.zip 
2018/05/06 10:36:04,422 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,422 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,422 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,422 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:04,422 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,422 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,422 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,422 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,425 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,425 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip 
2018/05/06 10:36:04,425 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,425 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,425 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,425 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,425 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,430 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,430 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}} 
2018/05/06 10:36:04,430 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}             
2018/05/06 10:36:04,430 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}} 
2018/05/06 10:36:04,430 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                                   
2018/05/06 10:36:04,430 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,430 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:04,430 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes.zip.b7bda2b1-617a-4e59-93fe-09c11fd0f233 
2018/05/06 10:36:04,431 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}          
2018/05/06 10:36:04,431 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,433 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:04,434 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:04,435 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:04,435 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:04,435 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}         
2018/05/06 10:36:04,435 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes.zip 
2018/05/06 10:36:04,435 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}      
2018/05/06 10:36:04,435 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:04,435 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:04,435 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,436 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***8c'}, ReadKeyPassword{'a2***8a'}}} 
2018/05/06 10:36:04,436 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,436 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:04,436 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                                   
2018/05/06 10:36:04,436 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                      
2018/05/06 10:36:04,436 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,436 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,436 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,439 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,439 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip 
2018/05/06 10:36:04,439 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,439 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,439 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,439 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,439 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,443 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,443 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} 
2018/05/06 10:36:04,444 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}             
2018/05/06 10:36:04,444 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,444 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:04,444 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}         
2018/05/06 10:36:04,444 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes.zip 
2018/05/06 10:36:04,444 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}      
2018/05/06 10:36:04,444 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:04,444 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:04,444 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}         
2018/05/06 10:36:04,444 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes.zip 
2018/05/06 10:36:04,445 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}      
2018/05/06 10:36:04,445 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:04,445 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:04,445 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,445 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***8c'}, ReadKeyPassword{'a2***8a'}}} 
2018/05/06 10:36:04,445 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,445 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:04,445 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                                   
2018/05/06 10:36:04,445 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                      
2018/05/06 10:36:04,445 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,445 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,445 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,449 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,449 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip 
2018/05/06 10:36:04,449 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,449 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,449 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,449 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,449 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,453 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,453 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} 
2018/05/06 10:36:04,454 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}             
2018/05/06 10:36:04,454 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,454 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:04,454 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:04,454 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:04,454 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,454 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}}      
2018/05/06 10:36:04,454 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,454 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey.zip 
2018/05/06 10:36:04,454 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,454 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,454 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,454 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:04,454 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home.bucketGuardKey} 
2018/05/06 10:36:04,455 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,455 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,455 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,457 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,457 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e.zip 
2018/05/06 10:36:04,457 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,457 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e} 
2018/05/06 10:36:04,457 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,457 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/.keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c.DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,457 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39366631633166392D353335362D346632652D623337342D33623835316636373763386384OAG'} 
2018/05/06 10:36:04,462 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'} from document guard at BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - .keystore/KS-96f1c1f9-5356-4f2e-b374-3b851f677c8c} 
2018/05/06 10:36:04,462 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home}} 
2018/05/06 10:36:04,462 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}             
2018/05/06 10:36:04,462 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}, DocumentKey{E78A....917E}} 
2018/05/06 10:36:04,462 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e'}                                   
2018/05/06 10:36:04,462 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c                    
2018/05/06 10:36:04,462 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5bb3d70a-5dc9-4a30-bd46-4a853b62863e"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:36:04,463 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c/home/mbsUserData.aes.zip.f724764e-afa2-4515-8cd3-c74cb014950d 
2018/05/06 10:36:04,464 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes} 
2018/05/06 10:36:04,464 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-96f1c1f9-5356-4f2e-b374-3b851f677c8c - home/mbsUserData.aes}          
2018/05/06 10:36:04,464 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'96f1c1f9-5356-4f2e-b374-3b851f677c8c'}, ReadKeyPassword{'a2***8a'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:04,464 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:04,464 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:04,465 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:04,465 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:04,465 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:04,465 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:04,465 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:04,465 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:04,465 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:04,466 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:04,466 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:04,466 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:04,466 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:04,466 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:04,466 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:04,466 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:04,466 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:04,466 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:04,467 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,470 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:04,470 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:04,470 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:04,470 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:04,470 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:04,470 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:04,470 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:04,474 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:04,474 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:04,474 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:04,474 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:04,474 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:04,475 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:04,475 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:04,475 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.db87e22b-f0c6-47b3-bab1-a59a6b5e2f33 
2018/05/06 10:36:04,475 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:04,476 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:04,476 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:04,476 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:04,479 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.service.BankAccessServiceCachedTest], using SpringBootContextLoader 
2018/05/06 10:36:04,480 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.service.BankAccessServiceCachedTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:04,480 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.service.BankAccessServiceCachedTest]: BankAccessServiceCachedTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:36:04,482 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.service.BankAccessServiceCachedTest 
2018/05/06 10:36:04,483 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:04,484 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@58f8ce0f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@31406eab, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3bb6b9ab, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@31f90517, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f6f2d91, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@1de83be1, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@139da216, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a35cccf, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3ce067bd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@608b74f3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1ef8f7e6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a6f1342] 
2018/05/06 10:36:04,485 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:04,499 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - null}} 
2018/05/06 10:36:04,499 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3            
2018/05/06 10:36:04,499 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - null}} -> false 
2018/05/06 10:36:04,499 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} 
2018/05/06 10:36:04,499 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - null}} 
2018/05/06 10:36:04,499 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3            
2018/05/06 10:36:04,499 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - null}} -> false 
2018/05/06 10:36:04,499 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                      
2018/05/06 10:36:04,499 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:04,499 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.zip 
2018/05/06 10:36:04,499 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433 
2018/05/06 10:36:04,499 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3                            
2018/05/06 10:36:07,523 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,523 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.zip.ba135f83-929b-46e6-867d-bb4ab4d9956a 
2018/05/06 10:36:07,524 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:07,525 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,525 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3            
2018/05/06 10:36:07,525 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}} 
2018/05/06 10:36:07,525 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,525 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,525 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,526 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,571 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O'} 
2018/05/06 10:36:07,571 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,571 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,571 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88.zip 
2018/05/06 10:36:07,571 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,577 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O'} 
2018/05/06 10:36:07,577 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,577 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,577 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88.zip.248fa788-675e-45f9-ab2d-45caa0d58e40 
2018/05/06 10:36:07,578 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,578 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,578 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,578 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,578 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey.zip.881d97e5-747d-4522-8068-9d748f607321 
2018/05/06 10:36:07,578 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:07,579 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,579 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}} 
2018/05/06 10:36:07,579 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:07,579 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}}      
2018/05/06 10:36:07,579 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,579 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey.zip 
2018/05/06 10:36:07,579 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,579 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,579 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,579 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:07,579 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,580 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,580 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,580 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,584 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,585 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88.zip 
2018/05/06 10:36:07,585 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,585 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,585 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,585 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,585 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O'} 
2018/05/06 10:36:07,590 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,590 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}} 
2018/05/06 10:36:07,590 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/README.txt}                  
2018/05/06 10:36:07,590 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}} 
2018/05/06 10:36:07,590 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}                                   
2018/05/06 10:36:07,591 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,591 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK79f33751-b617-426e-88f9-e0947d9bba88"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:07,591 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/README.txt.zip.b8e51c2e-3560-4c62-8963-99c197e27666 
2018/05/06 10:36:07,591 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/README.txt}               
2018/05/06 10:36:07,591 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:07,591 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} 
2018/05/06 10:36:07,592 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:07,592 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:07,592 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:07,593 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:07,593 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}}      
2018/05/06 10:36:07,593 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,593 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey.zip 
2018/05/06 10:36:07,593 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,593 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,593 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,593 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:07,593 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,593 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,593 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,593 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,597 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,597 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88.zip 
2018/05/06 10:36:07,597 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,597 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,597 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,597 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,597 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O'} 
2018/05/06 10:36:07,602 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,602 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}} 
2018/05/06 10:36:07,602 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}             
2018/05/06 10:36:07,602 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}} 
2018/05/06 10:36:07,602 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}                                   
2018/05/06 10:36:07,602 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,602 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK79f33751-b617-426e-88f9-e0947d9bba88"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:07,602 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/mbsUserData.aes.zip.809f8e59-4e91-4618-83f1-929d0938ac64 
2018/05/06 10:36:07,603 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}          
2018/05/06 10:36:07,603 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:07,605 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:07,605 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:07,605 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:07,605 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:07,605 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}         
2018/05/06 10:36:07,605 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/mbsUserData.aes.zip 
2018/05/06 10:36:07,605 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}      
2018/05/06 10:36:07,605 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:07,605 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:07,605 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:07,606 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***d3'}, ReadKeyPassword{'a7***e3'}}} 
2018/05/06 10:36:07,606 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,606 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK79f33751-b617-426e-88f9-e0947d9bba88"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:07,606 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}                                   
2018/05/06 10:36:07,606 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}                      
2018/05/06 10:36:07,606 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,606 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,606 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,609 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,609 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88.zip 
2018/05/06 10:36:07,609 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,609 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,609 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,609 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,609 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O'} 
2018/05/06 10:36:07,616 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,616 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} 
2018/05/06 10:36:07,616 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}             
2018/05/06 10:36:07,616 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:07,616 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:07,616 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:07,616 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:07,616 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:07,617 [main] [INFO ] [BankAccessService             ] [1] accounts for connection [fc54f0a5-60af-4811-8132-b8c4d8359feb] created.                          
2018/05/06 10:36:07,617 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb'}            
2018/05/06 10:36:07,618 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb'}         
2018/05/06 10:36:07,618 [main] [INFO ] [BucketServiceImpl             ] start delete plain directory BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb}} 
2018/05/06 10:36:07,618 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,618 [main] [DEBUG] [FileSystemExtendedStorageConnection] remove directory /Users/fpo/dev/multibanking-develop/multibanking-rest/target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb 
2018/05/06 10:36:07,618 [main] [INFO ] [BucketServiceImpl             ] finished delete plain file BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb}} 
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb'}            
2018/05/06 10:36:07,618 [main] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/fc54f0a5-60af-4811-8132-b8c4d8359feb'}         
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:07,618 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:07,619 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:07,619 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:07,619 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:07,619 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:07,619 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:07,619 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:07,619 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:07,619 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:07,619 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:07,619 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:07,619 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:07,619 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:07,619 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:07,619 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:07,620 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:07,620 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:07,620 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,622 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:07,622 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:07,622 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:07,622 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:07,622 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:07,623 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,623 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:07,628 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:07,628 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:07,628 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:07,629 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:07,629 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:07,629 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:07,629 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:07,629 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.83320d60-b1e5-4b43-919d-99dc120f17df 
2018/05/06 10:36:07,630 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:07,630 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:07,630 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:07,630 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:07,631 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'} Objects in cache: 1                   
2018/05/06 10:36:07,631 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:07,631 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:07,631 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:07,631 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:07,632 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:07,632 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}}      
2018/05/06 10:36:07,632 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,633 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey.zip 
2018/05/06 10:36:07,633 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,633 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,633 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,633 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:07,633 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home.bucketGuardKey} 
2018/05/06 10:36:07,633 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,634 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,634 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,638 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,638 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88.zip 
2018/05/06 10:36:07,638 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,638 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88} 
2018/05/06 10:36:07,638 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,638 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/.keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3.DK79f33751-b617-426e-88f9-e0947d9bba88",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O"
    }
  }
}with UTF-8 
2018/05/06 10:36:07,638 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62363766303432392D393130332D346130622D393931342D313131396232356366306433XZI5O'} 
2018/05/06 10:36:07,643 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'} from document guard at BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - .keystore/KS-b67f0429-9103-4a0b-9914-1119b25cf0d3} 
2018/05/06 10:36:07,643 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home}} 
2018/05/06 10:36:07,643 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}             
2018/05/06 10:36:07,643 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}, DocumentKey{E005....34A8}} 
2018/05/06 10:36:07,643 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK79f33751-b617-426e-88f9-e0947d9bba88'}                                   
2018/05/06 10:36:07,643 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3                    
2018/05/06 10:36:07,643 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK79f33751-b617-426e-88f9-e0947d9bba88"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:07,644 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-b67f0429-9103-4a0b-9914-1119b25cf0d3/home/mbsUserData.aes.zip.13211295-6386-44cc-9697-954376360116 
2018/05/06 10:36:07,644 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes} 
2018/05/06 10:36:07,645 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-b67f0429-9103-4a0b-9914-1119b25cf0d3 - home/mbsUserData.aes}          
2018/05/06 10:36:07,645 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}, ReadKeyPassword{'a7***e3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:07,645 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}                                        
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'} Objects in cache: 1                   
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:07,646 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:07,647 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'b67f0429-9103-4a0b-9914-1119b25cf0d3'}                                        
2018/05/06 10:36:07,651 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - null}} 
2018/05/06 10:36:07,651 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a            
2018/05/06 10:36:07,651 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - null}} -> false 
2018/05/06 10:36:07,651 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} 
2018/05/06 10:36:07,651 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - null}} 
2018/05/06 10:36:07,651 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a            
2018/05/06 10:36:07,652 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - null}} -> false 
2018/05/06 10:36:07,652 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                      
2018/05/06 10:36:07,652 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:07,652 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.zip 
2018/05/06 10:36:07,652 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761 
2018/05/06 10:36:07,652 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a                            
2018/05/06 10:36:09,644 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,645 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.zip.63e67dee-f130-487c-b74e-9666e2f7ada5 
2018/05/06 10:36:09,645 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:09,646 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,646 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a            
2018/05/06 10:36:09,646 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home}} 
2018/05/06 10:36:09,646 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,646 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,646 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,648 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,692 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY'} 
2018/05/06 10:36:09,692 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,692 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,692 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92.zip 
2018/05/06 10:36:09,692 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,698 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY'} 
2018/05/06 10:36:09,698 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,698 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,698 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92.zip.0d76636e-e92e-4bb0-96bb-09fa09a4597e 
2018/05/06 10:36:09,699 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,699 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,699 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,699 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,700 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey.zip.a34b7584-0bb8-45cd-97ac-b3e48e0ed617 
2018/05/06 10:36:09,700 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:09,700 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,700 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home}} 
2018/05/06 10:36:09,700 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:09,700 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home}}      
2018/05/06 10:36:09,700 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,700 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey.zip 
2018/05/06 10:36:09,700 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,700 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,700 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,701 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:09,701 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,701 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'} from document guard at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,701 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,701 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,703 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,703 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92.zip 
2018/05/06 10:36:09,703 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,703 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,703 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,703 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,703 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY'} 
2018/05/06 10:36:09,708 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'} from document guard at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,708 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home}} 
2018/05/06 10:36:09,708 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/README.txt}                  
2018/05/06 10:36:09,708 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}} 
2018/05/06 10:36:09,708 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}                                   
2018/05/06 10:36:09,708 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,708 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:09,708 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home/README.txt.zip.6826f0bc-3489-4866-bfdb-39c2cd6053fb 
2018/05/06 10:36:09,709 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/README.txt}               
2018/05/06 10:36:09,709 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:09,709 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} 
2018/05/06 10:36:09,709 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:09,710 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:09,710 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:09,710 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:09,710 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home}}      
2018/05/06 10:36:09,710 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,710 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey.zip 
2018/05/06 10:36:09,710 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,710 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,710 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,710 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:09,710 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home.bucketGuardKey} 
2018/05/06 10:36:09,710 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'} from document guard at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,710 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,711 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,713 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,713 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92.zip 
2018/05/06 10:36:09,713 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,713 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,713 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,713 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,714 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY'} 
2018/05/06 10:36:09,719 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'} from document guard at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,719 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home}} 
2018/05/06 10:36:09,719 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/mbsUserData.aes}             
2018/05/06 10:36:09,719 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}} 
2018/05/06 10:36:09,719 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}                                   
2018/05/06 10:36:09,720 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,720 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:09,720 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home/mbsUserData.aes.zip.866003b6-25d2-4149-bfa5-55cb252be855 
2018/05/06 10:36:09,721 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/mbsUserData.aes}          
2018/05/06 10:36:09,721 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:09,723 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:09,723 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:09,723 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:09,723 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:09,723 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/mbsUserData.aes}         
2018/05/06 10:36:09,723 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home/mbsUserData.aes.zip 
2018/05/06 10:36:09,723 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/mbsUserData.aes}      
2018/05/06 10:36:09,724 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:09,724 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:09,724 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:09,724 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***7a'}, ReadKeyPassword{'b3***5f'}}} 
2018/05/06 10:36:09,724 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,724 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:09,724 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}                                   
2018/05/06 10:36:09,724 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}                      
2018/05/06 10:36:09,724 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'} from document guard at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,724 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,724 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,726 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,726 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92.zip 
2018/05/06 10:36:09,726 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,726 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92} 
2018/05/06 10:36:09,726 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a                    
2018/05/06 10:36:09,726 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a/.keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a.DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,726 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D64363666346332352D623765362D343538312D393632342D353661373432326233643761EIGZY'} 
2018/05/06 10:36:09,731 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'} from document guard at BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - .keystore/KS-d66f4c25-b7e6-4581-9624-56a7422b3d7a} 
2018/05/06 10:36:09,731 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKeb6118e7-a088-4a2b-bbbd-3c5a6be0ad92'}, DocumentKey{7124....B144}}, accessType=WRITE} 
2018/05/06 10:36:09,731 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-d66f4c25-b7e6-4581-9624-56a7422b3d7a - home/mbsUserData.aes}             
2018/05/06 10:36:09,731 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}, ReadKeyPassword{'b3***5f'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:09,732 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:09,732 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:09,732 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:09,732 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:09,732 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:09,732 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:09,732 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:09,732 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:09,732 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:09,732 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:09,732 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:09,732 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:09,732 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:09,733 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:09,733 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:09,733 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:09,733 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,735 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:09,735 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:09,735 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:09,735 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:09,735 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:09,735 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:09,736 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:09,743 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:09,743 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:09,743 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:09,743 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:09,743 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:09,743 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:09,743 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:09,743 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.2700a9f5-622b-4a5e-ac67-fe73adef79d4 
2018/05/06 10:36:09,744 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:09,744 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:09,744 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'} Objects in cache: 1                   
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}                                        
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:09,744 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:09,745 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'} Objects in cache: 1                   
2018/05/06 10:36:09,745 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:09,745 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:09,745 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'d66f4c25-b7e6-4581-9624-56a7422b3d7a'}                                        
2018/05/06 10:36:09,751 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - null}} 
2018/05/06 10:36:09,751 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a            
2018/05/06 10:36:09,751 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - null}} -> false 
2018/05/06 10:36:09,751 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} 
2018/05/06 10:36:09,751 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - null}} 
2018/05/06 10:36:09,751 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a            
2018/05/06 10:36:09,751 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - null}} -> false 
2018/05/06 10:36:09,751 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                      
2018/05/06 10:36:09,751 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:09,751 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.zip 
2018/05/06 10:36:09,751 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061 
2018/05/06 10:36:09,751 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a                            
2018/05/06 10:36:12,616 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,617 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.zip.2850b260-b8a7-4f0d-a0ab-ba4e54f94d79 
2018/05/06 10:36:12,617 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:12,618 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,618 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a            
2018/05/06 10:36:12,618 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}} 
2018/05/06 10:36:12,618 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,618 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,618 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,619 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,662 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM'} 
2018/05/06 10:36:12,662 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,663 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,663 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1.zip 
2018/05/06 10:36:12,663 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,667 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM'} 
2018/05/06 10:36:12,668 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,668 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,669 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1.zip.e58788ab-3dd0-43c6-b287-7ed7f678e4d2 
2018/05/06 10:36:12,670 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,670 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,670 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,670 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,670 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey.zip.a59c8a1e-1c8b-41ce-aa0b-8d8d63a6f53d 
2018/05/06 10:36:12,670 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:12,671 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,671 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}} 
2018/05/06 10:36:12,671 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:12,671 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}}      
2018/05/06 10:36:12,671 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,671 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey.zip 
2018/05/06 10:36:12,671 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,671 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,671 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,671 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:12,671 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,671 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,672 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,672 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,674 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,674 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1.zip 
2018/05/06 10:36:12,674 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,674 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,674 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,674 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,674 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM'} 
2018/05/06 10:36:12,679 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,679 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}} 
2018/05/06 10:36:12,679 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/README.txt}                  
2018/05/06 10:36:12,679 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}} 
2018/05/06 10:36:12,679 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}                                   
2018/05/06 10:36:12,679 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,679 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:12,680 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/README.txt.zip.4bf27163-470b-4592-aee0-984fc913aaed 
2018/05/06 10:36:12,681 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/README.txt}               
2018/05/06 10:36:12,681 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:12,681 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} 
2018/05/06 10:36:12,682 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:12,682 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:12,682 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:12,683 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:12,683 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}}      
2018/05/06 10:36:12,683 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,683 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey.zip 
2018/05/06 10:36:12,683 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,683 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,683 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,683 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:12,683 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,684 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,684 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,684 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,687 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,687 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1.zip 
2018/05/06 10:36:12,687 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,687 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,688 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,688 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,688 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM'} 
2018/05/06 10:36:12,693 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,693 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}} 
2018/05/06 10:36:12,693 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}             
2018/05/06 10:36:12,693 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}} 
2018/05/06 10:36:12,693 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}                                   
2018/05/06 10:36:12,693 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,693 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:12,693 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/mbsUserData.aes.zip.b21bf846-4b26-4b2d-9b34-191b6ce41caa 
2018/05/06 10:36:12,694 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}          
2018/05/06 10:36:12,694 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:12,696 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:12,696 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:12,696 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:12,696 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:12,696 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}         
2018/05/06 10:36:12,696 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/mbsUserData.aes.zip 
2018/05/06 10:36:12,696 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}      
2018/05/06 10:36:12,696 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:12,696 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:12,696 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:12,696 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***0a'}, ReadKeyPassword{'dd***47'}}} 
2018/05/06 10:36:12,696 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,696 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:12,697 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}                                   
2018/05/06 10:36:12,697 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}                      
2018/05/06 10:36:12,697 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,697 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,697 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,699 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,699 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1.zip 
2018/05/06 10:36:12,699 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,699 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,699 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,699 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,699 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM'} 
2018/05/06 10:36:12,704 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,704 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} 
2018/05/06 10:36:12,704 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}             
2018/05/06 10:36:12,704 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:12,705 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:12,706 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:12,706 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:12,706 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:12,706 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:12,706 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:12,706 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:12,706 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:12,706 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:12,706 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:12,706 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:12,706 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:12,706 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,708 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:12,708 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:12,708 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:12,708 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:12,708 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:12,708 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,708 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:12,714 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:12,714 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:12,714 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:12,714 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:12,714 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:12,714 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:12,714 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:12,714 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.17c50534-0113-4deb-aa81-44f8110c67e4 
2018/05/06 10:36:12,715 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:12,715 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:12,715 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:12,715 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:12,715 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'} Objects in cache: 1                   
2018/05/06 10:36:12,715 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:12,715 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:12,715 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:12,715 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:12,715 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:12,715 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}}      
2018/05/06 10:36:12,715 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,716 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey.zip 
2018/05/06 10:36:12,716 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,716 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,716 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,716 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:12,716 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home.bucketGuardKey} 
2018/05/06 10:36:12,716 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,716 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,716 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,718 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,718 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1.zip 
2018/05/06 10:36:12,718 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,718 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1} 
2018/05/06 10:36:12,718 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,718 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/.keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a.DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM"
    }
  }
}with UTF-8 
2018/05/06 10:36:12,718 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D62623633373135622D356535352D343161392D623761622D373539633839326464663061IUNSM'} 
2018/05/06 10:36:12,724 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'} from document guard at BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - .keystore/KS-bb63715b-5e55-41a9-b7ab-759c892ddf0a} 
2018/05/06 10:36:12,724 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home}} 
2018/05/06 10:36:12,724 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}             
2018/05/06 10:36:12,724 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}, DocumentKey{1347....A6F4}} 
2018/05/06 10:36:12,724 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1'}                                   
2018/05/06 10:36:12,724 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a                    
2018/05/06 10:36:12,724 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK57ce51c1-8320-49d1-af98-8c15bc3bbaa1"
    }
  },
  "size": 603
}with UTF-8 
2018/05/06 10:36:12,724 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a/home/mbsUserData.aes.zip.823b47ee-2e16-4662-b070-ea5ee28bbd9e 
2018/05/06 10:36:12,724 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes} 
2018/05/06 10:36:12,725 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-bb63715b-5e55-41a9-b7ab-759c892ddf0a - home/mbsUserData.aes}          
2018/05/06 10:36:12,725 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}, ReadKeyPassword{'dd***47'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}                                        
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'} Objects in cache: 1                   
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:12,725 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'bb63715b-5e55-41a9-b7ab-759c892ddf0a'}                                        
2018/05/06 10:36:12,728 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - null}} 
2018/05/06 10:36:12,728 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b            
2018/05/06 10:36:12,728 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - null}} -> false 
2018/05/06 10:36:12,728 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} 
2018/05/06 10:36:12,728 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - null}} 
2018/05/06 10:36:12,728 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b            
2018/05/06 10:36:12,728 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - null}} -> false 
2018/05/06 10:36:12,729 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                      
2018/05/06 10:36:12,729 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:12,729 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.zip 
2018/05/06 10:36:12,729 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D336466383963383031623562 
2018/05/06 10:36:12,729 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b                            
2018/05/06 10:36:14,801 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,801 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.zip.d5ff92fc-7fac-42d4-ac6e-d2f9651d3046 
2018/05/06 10:36:14,802 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:14,803 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,803 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b            
2018/05/06 10:36:14,803 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}} 
2018/05/06 10:36:14,803 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,803 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,803 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,805 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,854 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL'} 
2018/05/06 10:36:14,854 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,855 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,855 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963.zip 
2018/05/06 10:36:14,855 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,858 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL'} 
2018/05/06 10:36:14,858 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,858 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,859 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963.zip.9ff8c92c-ac3b-4408-b442-abdcdbb1ee7b 
2018/05/06 10:36:14,859 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,859 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,859 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,859 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,859 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey.zip.fa6e5df8-9d48-4612-9a86-b9eb9f8dfd0c 
2018/05/06 10:36:14,860 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:14,860 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,860 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}} 
2018/05/06 10:36:14,860 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:14,860 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}}      
2018/05/06 10:36:14,860 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,860 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey.zip 
2018/05/06 10:36:14,860 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,860 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,860 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,861 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:14,861 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,861 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,861 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,861 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,864 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,864 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963.zip 
2018/05/06 10:36:14,864 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,864 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,864 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,864 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,864 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL'} 
2018/05/06 10:36:14,869 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,869 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}} 
2018/05/06 10:36:14,869 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/README.txt}                  
2018/05/06 10:36:14,869 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}} 
2018/05/06 10:36:14,869 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}                                   
2018/05/06 10:36:14,869 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,870 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:14,870 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/home/README.txt.zip.924cefdc-70ce-4202-a7c1-1c6ccdca0808 
2018/05/06 10:36:14,871 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/README.txt}               
2018/05/06 10:36:14,871 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:14,871 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} 
2018/05/06 10:36:14,872 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:14,872 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:14,872 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:14,872 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:14,872 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}}      
2018/05/06 10:36:14,872 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,872 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey.zip 
2018/05/06 10:36:14,872 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,872 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,872 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,872 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:14,873 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,873 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,873 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,873 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,875 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,875 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963.zip 
2018/05/06 10:36:14,875 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,875 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,875 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,875 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,875 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL'} 
2018/05/06 10:36:14,879 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,879 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}} 
2018/05/06 10:36:14,879 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}             
2018/05/06 10:36:14,879 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}} 
2018/05/06 10:36:14,879 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}                                   
2018/05/06 10:36:14,879 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,879 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:14,879 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/home/mbsUserData.aes.zip.cf217327-c9f7-411f-acaf-3e2b7ad95e89 
2018/05/06 10:36:14,881 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}          
2018/05/06 10:36:14,881 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:14,882 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:14,882 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:14,882 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:14,883 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'f524e80b-960c-431d-9136-3df89c801b5b'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:14,883 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}         
2018/05/06 10:36:14,883 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/home/mbsUserData.aes.zip 
2018/05/06 10:36:14,883 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}      
2018/05/06 10:36:14,883 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:14,883 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:14,883 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:14,883 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***5b'}, ReadKeyPassword{'8f***d3'}}} 
2018/05/06 10:36:14,883 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,883 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:14,883 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}                                   
2018/05/06 10:36:14,883 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}                      
2018/05/06 10:36:14,883 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,883 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,883 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,886 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,886 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963.zip 
2018/05/06 10:36:14,886 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,886 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,886 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,886 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,886 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL'} 
2018/05/06 10:36:14,890 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,890 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} 
2018/05/06 10:36:14,890 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}             
2018/05/06 10:36:14,890 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:14,891 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:14,892 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:14,892 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:14,892 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:14,892 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:14,892 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:14,892 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:14,892 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:14,892 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:14,892 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:14,892 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:14,892 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:14,892 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,895 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:14,895 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:14,895 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:14,895 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:14,895 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:14,896 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,896 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:14,903 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:14,903 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:14,903 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:14,903 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:14,903 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:14,903 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:14,903 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:14,904 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.596827be-b564-4d7f-b0c5-b077a59db59e 
2018/05/06 10:36:14,904 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:14,905 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:14,905 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:14,905 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:14,905 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'f524e80b-960c-431d-9136-3df89c801b5b'} Objects in cache: 1                   
2018/05/06 10:36:14,905 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:14,905 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:14,905 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:14,905 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:14,905 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:14,905 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}}      
2018/05/06 10:36:14,905 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,905 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey.zip 
2018/05/06 10:36:14,905 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,905 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,905 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,905 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:14,906 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/bp-f524e80b-960c-431d-9136-3df89c801b5b/home.bucketGuardKey} 
2018/05/06 10:36:14,906 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,906 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,906 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,908 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,908 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963.zip 
2018/05/06 10:36:14,908 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,908 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963} 
2018/05/06 10:36:14,908 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,908 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/.keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b.DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL"
    }
  }
}with UTF-8 
2018/05/06 10:36:14,908 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66353234653830622D393630632D343331642D393133362D3364663839633830316235622CQKL'} 
2018/05/06 10:36:14,912 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'} from document guard at BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - .keystore/KS-f524e80b-960c-431d-9136-3df89c801b5b} 
2018/05/06 10:36:14,912 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home}} 
2018/05/06 10:36:14,912 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}             
2018/05/06 10:36:14,912 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}, DocumentKey{B2FB....2111}} 
2018/05/06 10:36:14,912 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963'}                                   
2018/05/06 10:36:14,913 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b                    
2018/05/06 10:36:14,913 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-f524e80b-960c-431d-9136-3df89c801b5b/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK02e325ef-b78e-4bf5-b2d1-a7f5957f5963"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:36:14,913 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-f524e80b-960c-431d-9136-3df89c801b5b/home/mbsUserData.aes.zip.ce989cb8-33cb-4666-b458-2bc08bd6eed9 
2018/05/06 10:36:14,913 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes} 
2018/05/06 10:36:14,914 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-f524e80b-960c-431d-9136-3df89c801b5b - home/mbsUserData.aes}          
2018/05/06 10:36:14,914 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}, ReadKeyPassword{'8f***d3'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}                                        
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'f524e80b-960c-431d-9136-3df89c801b5b'} Objects in cache: 1                   
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:14,914 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'f524e80b-960c-431d-9136-3df89c801b5b'}                                        
2018/05/06 10:36:14,921 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - null}} 
2018/05/06 10:36:14,921 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042            
2018/05/06 10:36:14,921 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - null}} -> false 
2018/05/06 10:36:14,921 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} 
2018/05/06 10:36:14,921 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - null}} 
2018/05/06 10:36:14,921 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042            
2018/05/06 10:36:14,921 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - null}} -> false 
2018/05/06 10:36:14,922 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                      
2018/05/06 10:36:14,922 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:14,922 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.zip 
2018/05/06 10:36:14,922 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432 
2018/05/06 10:36:14,922 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042                            
2018/05/06 10:36:17,500 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,500 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.zip.608f84d5-d56f-4b1c-ac03-58b1d94255ac 
2018/05/06 10:36:17,501 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:17,502 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,502 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042            
2018/05/06 10:36:17,502 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}} 
2018/05/06 10:36:17,502 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,502 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,502 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,503 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,551 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ'} 
2018/05/06 10:36:17,551 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,551 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,551 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c.zip 
2018/05/06 10:36:17,551 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,558 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ'} 
2018/05/06 10:36:17,558 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,558 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,559 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c.zip.85fd9cb4-663d-41a0-968f-97ea9d1b87bc 
2018/05/06 10:36:17,559 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,559 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,559 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,560 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,560 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey.zip.421ae539-de69-466c-8327-2a6e45afaa64 
2018/05/06 10:36:17,560 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:17,560 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,560 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}} 
2018/05/06 10:36:17,560 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:17,560 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}}      
2018/05/06 10:36:17,560 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,560 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey.zip 
2018/05/06 10:36:17,560 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,561 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,561 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,561 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:17,561 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,561 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,561 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,561 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,564 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,564 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c.zip 
2018/05/06 10:36:17,565 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,565 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,565 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,565 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,565 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ'} 
2018/05/06 10:36:17,571 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,571 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}} 
2018/05/06 10:36:17,571 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/README.txt}                  
2018/05/06 10:36:17,571 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}} 
2018/05/06 10:36:17,572 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}                                   
2018/05/06 10:36:17,572 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,572 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:17,572 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/README.txt.zip.7106eb2b-2c63-4634-80fa-1d1d195ea02a 
2018/05/06 10:36:17,572 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/README.txt}               
2018/05/06 10:36:17,572 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:17,572 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} 
2018/05/06 10:36:17,573 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:17,573 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:17,573 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:17,573 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:17,573 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}}      
2018/05/06 10:36:17,573 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,573 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey.zip 
2018/05/06 10:36:17,573 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,573 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,573 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,573 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:17,573 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,573 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,574 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,574 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,576 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,576 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c.zip 
2018/05/06 10:36:17,576 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,576 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,576 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,576 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,577 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ'} 
2018/05/06 10:36:17,582 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,582 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}} 
2018/05/06 10:36:17,582 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}             
2018/05/06 10:36:17,582 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}} 
2018/05/06 10:36:17,582 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}                                   
2018/05/06 10:36:17,582 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,582 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:17,582 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/mbsUserData.aes.zip.38eb980c-1661-4c62-aa28-13d481c4658c 
2018/05/06 10:36:17,583 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}          
2018/05/06 10:36:17,583 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:17,585 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:17,585 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:17,585 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:17,585 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:17,585 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}         
2018/05/06 10:36:17,585 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/mbsUserData.aes.zip 
2018/05/06 10:36:17,585 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}      
2018/05/06 10:36:17,585 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:17,585 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:17,585 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:17,585 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***42'}, ReadKeyPassword{'f8***06'}}} 
2018/05/06 10:36:17,585 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,585 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:17,586 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}                                   
2018/05/06 10:36:17,586 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}                      
2018/05/06 10:36:17,586 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,586 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,586 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,588 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,588 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c.zip 
2018/05/06 10:36:17,588 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,588 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,588 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,588 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,589 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ'} 
2018/05/06 10:36:17,594 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,594 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} 
2018/05/06 10:36:17,594 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}             
2018/05/06 10:36:17,594 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:17,594 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:17,594 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:17,595 [main] [INFO ] [BankAccessService             ] [1] accounts for connection [45cfbe06-b118-4b72-add1-03e70c3d92d2] created.                          
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:17,595 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:17,596 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:17,596 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:17,596 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:17,596 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:17,596 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:17,596 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:17,596 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:17,596 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:17,596 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:17,596 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:17,596 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:17,596 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:17,596 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:17,596 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:17,596 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:17,596 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,599 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:17,599 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:17,599 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:17,599 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:17,599 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:17,599 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,599 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:17,604 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:17,604 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:17,604 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:17,604 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:17,604 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:17,604 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:17,604 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:17,604 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.a012157a-880b-4cfd-a818-5900970abb17 
2018/05/06 10:36:17,605 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:17,605 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:17,605 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:17,605 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:17,605 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'} Objects in cache: 1                   
2018/05/06 10:36:17,605 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:17,605 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:17,605 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:17,605 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:17,605 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:17,605 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}}      
2018/05/06 10:36:17,605 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,605 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey.zip 
2018/05/06 10:36:17,605 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,605 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,606 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,606 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:17,606 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home.bucketGuardKey} 
2018/05/06 10:36:17,606 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,606 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,606 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,608 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,608 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c.zip 
2018/05/06 10:36:17,609 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,609 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c} 
2018/05/06 10:36:17,609 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,609 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/.keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042.DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ"
    }
  }
}with UTF-8 
2018/05/06 10:36:17,609 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D31303038386232302D316433352D346366342D623738322D636439663838393936303432W6EIJ'} 
2018/05/06 10:36:17,614 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'} from document guard at BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - .keystore/KS-10088b20-1d35-4cf4-b782-cd9f88996042} 
2018/05/06 10:36:17,614 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home}} 
2018/05/06 10:36:17,614 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}             
2018/05/06 10:36:17,614 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}, DocumentKey{9FF7....3F7B}} 
2018/05/06 10:36:17,615 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c'}                                   
2018/05/06 10:36:17,615 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042                    
2018/05/06 10:36:17,615 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKe335a3b0-7d8b-48bd-abe7-93a3022e9e8c"
    }
  },
  "size": 1130
}with UTF-8 
2018/05/06 10:36:17,615 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-10088b20-1d35-4cf4-b782-cd9f88996042/home/mbsUserData.aes.zip.960e7b33-bedf-41dd-86b6-4e741351dd3b 
2018/05/06 10:36:17,616 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes} 
2018/05/06 10:36:17,616 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-10088b20-1d35-4cf4-b782-cd9f88996042 - home/mbsUserData.aes}          
2018/05/06 10:36:17,616 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}, ReadKeyPassword{'f8***06'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}                                        
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'} Objects in cache: 1                   
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:17,616 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'10088b20-1d35-4cf4-b782-cd9f88996042'}                                        
2018/05/06 10:36:17,623 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - null}} 
2018/05/06 10:36:17,623 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082            
2018/05/06 10:36:17,623 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - null}} -> false 
2018/05/06 10:36:17,623 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} 
2018/05/06 10:36:17,623 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - null}} 
2018/05/06 10:36:17,623 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082            
2018/05/06 10:36:17,623 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - null}} -> false 
2018/05/06 10:36:17,623 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                      
2018/05/06 10:36:17,623 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:17,623 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.zip 
2018/05/06 10:36:17,623 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832 
2018/05/06 10:36:17,623 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082                            
2018/05/06 10:36:20,485 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,485 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.zip.61e44d8d-af39-48f1-a228-d4909c5399c5 
2018/05/06 10:36:20,485 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:20,486 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,486 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082            
2018/05/06 10:36:20,486 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}} 
2018/05/06 10:36:20,486 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,486 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,486 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,488 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,533 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7'} 
2018/05/06 10:36:20,533 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,533 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,533 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f.zip 
2018/05/06 10:36:20,533 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,540 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7'} 
2018/05/06 10:36:20,540 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,540 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,540 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f.zip.1a22a53f-6205-4687-86af-4669acea725a 
2018/05/06 10:36:20,540 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,541 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,541 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,541 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,541 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey.zip.9a594320-7538-4575-afd9-d0abd3e82102 
2018/05/06 10:36:20,541 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:20,541 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,542 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}} 
2018/05/06 10:36:20,542 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:20,542 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}}      
2018/05/06 10:36:20,542 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,542 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey.zip 
2018/05/06 10:36:20,542 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,542 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,542 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,542 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:20,542 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,542 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,542 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,543 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,545 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,545 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f.zip 
2018/05/06 10:36:20,545 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,545 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,545 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,545 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,546 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7'} 
2018/05/06 10:36:20,551 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,551 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}} 
2018/05/06 10:36:20,552 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/README.txt}                  
2018/05/06 10:36:20,552 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}} 
2018/05/06 10:36:20,552 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}                                   
2018/05/06 10:36:20,552 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,553 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:20,553 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/README.txt.zip.66e34005-f07d-4141-8cf1-24ebf166cf9c 
2018/05/06 10:36:20,554 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/README.txt}               
2018/05/06 10:36:20,554 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:20,554 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} 
2018/05/06 10:36:20,556 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:false                                            
2018/05/06 10:36:20,556 [main] [DEBUG] [CacheBasedService             ] flush im store DocumentFQN{'mbsUserData.aes'}                                                        
2018/05/06 10:36:20,557 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:20,557 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:20,557 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}}      
2018/05/06 10:36:20,557 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,557 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey.zip 
2018/05/06 10:36:20,557 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,557 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,557 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,558 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:20,558 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,558 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,558 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,558 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,561 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,561 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f.zip 
2018/05/06 10:36:20,561 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,561 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,561 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,561 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,561 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7'} 
2018/05/06 10:36:20,566 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,566 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}} 
2018/05/06 10:36:20,566 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}             
2018/05/06 10:36:20,566 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}} 
2018/05/06 10:36:20,566 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}                                   
2018/05/06 10:36:20,567 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,567 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:20,567 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/mbsUserData.aes.zip.3e9b90ce-c2f7-43bc-85cf-c9a5f8b90bb8 
2018/05/06 10:36:20,567 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}          
2018/05/06 10:36:20,567 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:20,569 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:20,569 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:20,570 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:20,570 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:20,570 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}         
2018/05/06 10:36:20,570 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/mbsUserData.aes.zip 
2018/05/06 10:36:20,570 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}      
2018/05/06 10:36:20,570 [main] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:20,570 [main] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:20,570 [main] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:20,570 [main] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***82'}, ReadKeyPassword{'fb***db'}}} 
2018/05/06 10:36:20,570 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,571 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:20,571 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}                                   
2018/05/06 10:36:20,571 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}                      
2018/05/06 10:36:20,571 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,571 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,571 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,573 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,573 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f.zip 
2018/05/06 10:36:20,574 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,574 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,574 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,574 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,574 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7'} 
2018/05/06 10:36:20,579 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,579 [main] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} 
2018/05/06 10:36:20,579 [main] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}             
2018/05/06 10:36:20,579 [main] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:20,580 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:20,580 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:20,583 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:20,584 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:20,584 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:20,584 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:20,584 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:20,584 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:20,584 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:20,584 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:20,584 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:20,584 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:20,584 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:20,584 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:20,584 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,586 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:20,586 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:20,586 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:20,586 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:20,586 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:20,587 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,587 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:20,591 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:20,591 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:20,591 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:20,591 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:20,591 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:20,591 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:20,591 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:20,591 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.f4be73a7-f2d6-46b6-92a5-859d0b6fce78 
2018/05/06 10:36:20,592 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:20,592 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:20,592 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:20,592 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:20,593 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'} Objects in cache: 1                   
2018/05/06 10:36:20,593 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:20,593 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:20,593 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:20,593 [main] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:20,593 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:20,593 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}}      
2018/05/06 10:36:20,593 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,593 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey.zip 
2018/05/06 10:36:20,593 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,593 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,594 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,594 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:20,594 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home.bucketGuardKey} 
2018/05/06 10:36:20,594 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,594 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,594 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,599 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,599 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f.zip 
2018/05/06 10:36:20,599 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,599 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f} 
2018/05/06 10:36:20,599 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,600 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/.keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082.DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7"
    }
  }
}with UTF-8 
2018/05/06 10:36:20,600 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32363739346634352D353164612D346562622D616164332D363635626435653936303832ZBIO7'} 
2018/05/06 10:36:20,607 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'} from document guard at BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - .keystore/KS-26794f45-51da-4ebb-aad3-665bd5e96082} 
2018/05/06 10:36:20,607 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home}} 
2018/05/06 10:36:20,607 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}             
2018/05/06 10:36:20,607 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}, DocumentKey{A070....3DF2}} 
2018/05/06 10:36:20,607 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f'}                                   
2018/05/06 10:36:20,607 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082                    
2018/05/06 10:36:20,608 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK5ce4db99-d7fb-4b5e-b8a4-d4d8db57ca3f"
    }
  },
  "size": 600
}with UTF-8 
2018/05/06 10:36:20,608 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-26794f45-51da-4ebb-aad3-665bd5e96082/home/mbsUserData.aes.zip.05a7d20b-9afb-43d9-bff4-ccdfab02de7c 
2018/05/06 10:36:20,608 [main] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes} 
2018/05/06 10:36:20,609 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-26794f45-51da-4ebb-aad3-665bd5e96082 - home/mbsUserData.aes}          
2018/05/06 10:36:20,609 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}, ReadKeyPassword{'fb***db'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}                                        
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'} Objects in cache: 1                   
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:20,609 [main] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'26794f45-51da-4ebb-aad3-665bd5e96082'}                                        
2018/05/06 10:36:20,617 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.service.BankAccessServiceFakeUserTest], using SpringBootContextLoader 
2018/05/06 10:36:20,618 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.service.BankAccessServiceFakeUserTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:20,618 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.service.BankAccessServiceFakeUserTest]: BankAccessServiceFakeUserTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:36:20,622 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.service.BankAccessServiceFakeUserTest 
2018/05/06 10:36:20,624 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:20,625 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@10b36d8a, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@318f47f1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@900ffc4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@39d44217, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3280a79a, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@79fbcef4, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@770be0d0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6c54d0dc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5b5f06bb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7c74ef4a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@54519d74, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1ec96512] 
2018/05/06 10:36:20,625 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:20,631 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-fakeuser - null}}                       
2018/05/06 10:36:20,631 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-fakeuser                                        
2018/05/06 10:36:20,631 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-fakeuser - null}} -> false           
2018/05/06 10:36:20,631 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'fakeUser'}, ReadKeyPassword{'fa***rd'}}                     
2018/05/06 10:36:20,631 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-fakeuser - null}}                       
2018/05/06 10:36:20,631 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-fakeuser                                        
2018/05/06 10:36:20,631 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-fakeuser - null}} -> false           
2018/05/06 10:36:20,631 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-fakeuser                                                  
2018/05/06 10:36:20,631 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-fakeuser - .keystore/KS-fakeUser}                                
2018/05/06 10:36:20,632 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-fakeuser/.keystore/KS-fakeUser.zip                   
2018/05/06 10:36:20,632 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D66616B6555736572                                              
2018/05/06 10:36:20,632 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-fakeUser                                                        
2018/05/06 10:36:23,152 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,152 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-fakeuser/.keystore/KS-fakeUser.zip.7d5261ae-f542-4cce-8312-52a13e6ba996 
2018/05/06 10:36:23,153 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/KS-fakeUser",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:23,154 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-fakeuser - .keystore/KS-fakeUser}                             
2018/05/06 10:36:23,154 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-fakeuser                                        
2018/05/06 10:36:23,154 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-fakeuser - home}}                      
2018/05/06 10:36:23,154 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}, DocumentKey{2A48....092A}}, accessType=WRITE} at BucketPath{bp-fakeuser - .keystore/KS-fakeUser} 
2018/05/06 10:36:23,154 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-fakeuser - .keystore/KS-fakeUser}                      
2018/05/06 10:36:23,154 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,154 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/KS-fakeUser",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:23,201 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D66616B6555736572A31MI'}    
2018/05/06 10:36:23,201 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}, DocumentKey{2A48....092A}}, accessType=WRITE} at BucketPath{bp-fakeuser - .keystore/KS-fakeUser} 
2018/05/06 10:36:23,201 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-fakeuser - .keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460} 
2018/05/06 10:36:23,201 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-fakeuser/.keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460.zip 
2018/05/06 10:36:23,201 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-fakeuser - .keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460} 
2018/05/06 10:36:23,209 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66616B6555736572A31MI'}                          
2018/05/06 10:36:23,209 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,209 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66616B6555736572A31MI"
    }
  }
}with UTF-8 
2018/05/06 10:36:23,209 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-fakeuser/.keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460.zip.89de82e0-9e0e-49a1-8cf0-332283bb3c34 
2018/05/06 10:36:23,210 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}, DocumentKey{2A48....092A}}, accessType=WRITE} at BucketPath{bp-fakeuser - .keystore/KS-fakeUser} 
2018/05/06 10:36:23,210 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}, DocumentKey{2A48....092A}}, accessType=WRITE} at BucketPath{bp-fakeuser - .keystore/KS-fakeUser} 
2018/05/06 10:36:23,210 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-fakeuser - .keystore/bp-fakeuser/home.bucketGuardKey}          
2018/05/06 10:36:23,210 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,211 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-fakeuser/.keystore/bp-fakeuser/home.bucketGuardKey.zip.6f9b7aae-2a8e-4f34-a282-2e96b7335e37 
2018/05/06 10:36:23,211 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/bp-fakeuser/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:23,211 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-fakeuser - .keystore/bp-fakeuser/home.bucketGuardKey}       
2018/05/06 10:36:23,211 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-fakeuser - home}}                   
2018/05/06 10:36:23,211 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'fakeUser'}, ReadKeyPassword{'fa***rd'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:23,211 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-fakeuser - home}}                                  
2018/05/06 10:36:23,211 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-fakeuser - .keystore/bp-fakeuser/home.bucketGuardKey}                
2018/05/06 10:36:23,211 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-fakeuser/.keystore/bp-fakeuser/home.bucketGuardKey.zip   
2018/05/06 10:36:23,211 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-fakeuser - .keystore/bp-fakeuser/home.bucketGuardKey}             
2018/05/06 10:36:23,211 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-fakeuser - .keystore/bp-fakeuser/home.bucketGuardKey}            
2018/05/06 10:36:23,211 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,212 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/bp-fakeuser/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:23,212 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-fakeuser - .keystore/bp-fakeuser/home.bucketGuardKey}         
2018/05/06 10:36:23,212 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'} from document guard at BucketPath{bp-fakeuser - .keystore/KS-fakeUser} 
2018/05/06 10:36:23,212 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,212 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/KS-fakeUser",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:23,214 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-fakeuser - .keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460} 
2018/05/06 10:36:23,214 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-fakeuser/.keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460.zip 
2018/05/06 10:36:23,214 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-fakeuser - .keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460} 
2018/05/06 10:36:23,214 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-fakeuser - .keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460} 
2018/05/06 10:36:23,214 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,214 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-fakeuser/.keystore/KS-fakeUser.DK91a52f53-18f0-447d-9922-409bbf907460",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D66616B6555736572A31MI"
    }
  }
}with UTF-8 
2018/05/06 10:36:23,215 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D66616B6555736572A31MI'}                          
2018/05/06 10:36:23,221 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'} from document guard at BucketPath{bp-fakeuser - .keystore/KS-fakeUser} 
2018/05/06 10:36:23,221 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}, DocumentKey{2A48....092A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-fakeuser - home}} 
2018/05/06 10:36:23,221 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-fakeuser - home/README.txt}                                              
2018/05/06 10:36:23,222 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}, DocumentKey{2A48....092A}} 
2018/05/06 10:36:23,222 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK91a52f53-18f0-447d-9922-409bbf907460'}                                   
2018/05/06 10:36:23,222 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-fakeuser                                                
2018/05/06 10:36:23,222 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-fakeuser/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK91a52f53-18f0-447d-9922-409bbf907460"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:23,223 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-fakeuser/home/README.txt.zip.2c59ab02-b868-4b8d-8add-649a9a80e389 
2018/05/06 10:36:23,223 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-fakeuser - home/README.txt}                                           
2018/05/06 10:36:23,223 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'fakeUser'}, ReadKeyPassword{'fa***rd'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:23,224 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'fakeUser'}, ReadKeyPassword{'fa***rd'}}                  
2018/05/06 10:36:23,224 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:23,224 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'fakeUser'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:23,224 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-fakeuser - home/mbsUserData.aes}                                     
2018/05/06 10:36:23,224 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-fakeuser/home/mbsUserData.aes.zip                    
2018/05/06 10:36:23,224 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-fakeuser - home/mbsUserData.aes}                                  
2018/05/06 10:36:23,224 [main] [DEBUG] [CacheBasedService             ] load, doc not found: DocumentFQN{'mbsUserData.aes'}                                                  
2018/05/06 10:36:23,228 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.service.base.StorageUserServiceTest], using SpringBootContextLoader 
2018/05/06 10:36:23,228 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.service.base.StorageUserServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:23,229 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.service.base.StorageUserServiceTest]: StorageUserServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:36:23,239 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.service.base.StorageUserServiceTest 
2018/05/06 10:36:23,240 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:23,241 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@50915d5, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@63661fc7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@65130cf2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@19412eef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@542b27af, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@7e092ca, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@7ae97a58, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6a4f15bc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@67544105, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6421e9e7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@552b7481, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@475b796d] 
2018/05/06 10:36:23,242 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:23,264 [main] [INFO ] [StorageUserServiceTest        ] Starting StorageUserServiceTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:36:23,264 [main] [DEBUG] [StorageUserServiceTest        ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:36:23,264 [main] [INFO ] [StorageUserServiceTest        ] The following profiles are active: InMemory                                                          
2018/05/06 10:36:23,268 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@38447073: startup date [Sun May 06 10:36:23 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:23,480 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'analyticsService' with a different definition: replacing [Generic bean: class [de.adorsys.multibanking.service.analytics.AnalyticsService]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/Users/fpo/dev/multibanking-develop/multibanking-rest/target/classes/de/adorsys/multibanking/service/analytics/AnalyticsService.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=analyticsServiceConfig; factoryMethodName=analyticsService; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/core/AnalyticsServiceConfig.class]] 
2018/05/06 10:36:23,481 [main] [INFO ] [DefaultListableBeanFactory    ] Overriding bean definition for bean 'systemIDAuth' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=systemAuthConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/service/SystemAuthConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=true; factoryBeanName=controllerUnitTestConfig; factoryMethodName=systemIDAuth; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [de/adorsys/multibanking/config/web/ControllerUnitTestConfig.class]] 
2018/05/06 10:36:23,599 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a1504156] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:36:23,602 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:36:23,602 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2acfd27b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:36:23,605 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$c624e408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:36:23,607 [main] [INFO ] [PostProcessorRegistrationDelegate$BeanPostProcessorChecker] Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying) 
2018/05/06 10:36:23,793 [main] [INFO ] [ExtendedStoreConnectionFactory] 
***************************************
*                                     *
*  USE FILE SYSTEM                    *
*  basedir: target/filesystemstorage  *
*                                     *
***************************************
 
2018/05/06 10:36:23,903 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}}                         
2018/05/06 10:36:23,903 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:23,903 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-system - null}} -> true              
2018/05/06 10:36:23,923 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 10:36:23,923 [main] [WARN ] [FigoBanking                   ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 10:36:23,923 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_CLIENT_ID and/or FIGO_SECRET                                             
2018/05/06 10:36:23,923 [main] [WARN ] [FigoBankingAlternative        ] missing env properties FIGO_TECH_USER and/or FIGO_TECH_USER_CREDENTIAL                               
2018/05/06 10:36:23,923 [main] [WARN ] [FinapiBanking                 ] missing env properties FINAPI_CLIENT_ID and/or FINAPI_SECRET                                         
2018/05/06 10:36:24,075 [main] [INFO ] [UserDetailsServiceAutoConfiguration] 

Using generated security password: dc3922f4-2bdb-43cb-b760-75e6aeaa0900
                           
2018/05/06 10:36:24,138 [main] [INFO ] [DefaultSecurityFilterChain    ] Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12939937, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ebf5bf, org.springframework.security.web.header.HeaderWriterFilter@23471f48, org.springframework.web.filter.CorsFilter@14501070, org.springframework.security.web.authentication.logout.LogoutFilter@283645fa, de.adorsys.sts.filter.JWTAuthenticationFilter@4f7a2262, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d8cbb32, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46aa5294, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4a577b99, org.springframework.security.web.session.SessionManagementFilter@2898cd46, org.springframework.security.web.access.ExceptionTranslationFilter@51617b93, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23bf19c9] 
2018/05/06 10:36:24,312 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:24,387 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@38447073: startup date [Sun May 06 10:36:23 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:24,412 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:36:24,412 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:36:24,413 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:24,413 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:24,413 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/analytics],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.AccountAnalyticsController.getAccountAnalytics(java.lang.String,java.lang.String) 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createCategory(de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getCustomCategories() 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingCategoryController.getStaticCategories() 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCustomCategory(java.lang.String,de.adorsys.multibanking.domain.CustomCategoryEntity) 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.updateCategory(java.lang.String,de.adorsys.multibanking.domain.CategoryEntity) 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateCustomCategories(java.util.List<de.adorsys.multibanking.domain.CustomCategoryEntity>) 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.createOrUpdateStaticCategories(java.util.List<de.adorsys.multibanking.domain.CategoryEntity>) 
2018/05/06 10:36:24,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceCustomCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:36:24,416 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingCategoryController.uploadReplaceStaticCategories(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:36:24,416 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategory(java.lang.String) 
2018/05/06 10:36:24,416 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static/{categoryId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategory(java.lang.String) 
2018/05/06 10:36:24,416 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteCustomCategories(java.util.List<java.lang.String>) 
2018/05/06 10:36:24,416 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/categories/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingCategoryController.deleteStaticCategories(java.util.List<java.lang.String>) 
2018/05/06 10:36:24,417 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createRule(de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getCustomRules() 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.BookingRuleController.getStaticRules() 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateCustomRule(java.lang.String,de.adorsys.multibanking.domain.CustomRuleEntity) 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.updateRule(java.lang.String,de.adorsys.multibanking.domain.RuleEntity) 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateCustomRules(java.util.List<de.adorsys.multibanking.domain.CustomRuleEntity>) 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.createOrUpdateStaticRules(java.util.List<de.adorsys.multibanking.domain.RuleEntity>) 
2018/05/06 10:36:24,418 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceCustomRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:36:24,419 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/upload],methods=[PUT],consumes=[application/octet-stream]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.BookingRuleController.uploadReplaceStaticRules(org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:36:24,419 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRule(java.lang.String) 
2018/05/06 10:36:24,419 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static/{ruleId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRule(java.lang.String) 
2018/05/06 10:36:24,419 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/custom],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteCustomRules(java.util.List<java.lang.String>) 
2018/05/06 10:36:24,419 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/analytics/rules/static],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.analytics.BookingRuleController.deleteStaticRules(java.util.List<java.lang.String>) 
2018/05/06 10:36:24,420 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[GET],produces=[image/png]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.analytics.ImageController.getImage(java.lang.String) throws java.io.IOException 
2018/05/06 10:36:24,420 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}],methods=[PUT],consumes=[image/png]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.putImage(java.lang.String,org.springframework.web.multipart.MultipartFile) 
2018/05/06 10:36:24,420 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/image/{imageName}/release],methods=[POST]}" onto public org.springframework.http.HttpEntity<?> de.adorsys.multibanking.web.analytics.ImageController.patchImage(java.lang.String) 
2018/05/06 10:36:24,420 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bank],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.banks.BankController.loadBanks() 
2018/05/06 10:36:24,421 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.createPayment(java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$CreatePaymentRequest) 
2018/05/06 10:36:24,421 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}/submit],methods=[POST]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.payment.PaymentController.submitPayment(java.lang.String,java.lang.String,java.lang.String,de.adorsys.multibanking.web.payment.PaymentController$SubmitPaymentRequest) 
2018/05/06 10:36:24,421 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/payments/{paymentId}],methods=[GET]}" onto public org.springframework.hateoas.Resource<de.adorsys.multibanking.domain.PaymentEntity> de.adorsys.multibanking.web.payment.PaymentController.getPayment(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:24,422 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<de.adorsys.multibanking.domain.UserAgentCredentials> de.adorsys.multibanking.web.user.UserAgentCredentialsController.getUserAgentCredentials(java.lang.String) 
2018/05/06 10:36:24,422 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[PUT],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.user.UserAgentCredentialsController.postUserAgentCredentials(java.lang.String,de.adorsys.multibanking.domain.UserAgentCredentials) 
2018/05/06 10:36:24,422 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.user.UserDataController.loadUserData() 
2018/05/06 10:36:24,423 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/pop],methods=[GET],produces=[application/json]}" onto public org.springframework.http.ResponseEntity<java.lang.String> de.adorsys.sts.pop.PopController.getPublicKeys() 
2018/05/06 10:36:24,424 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:36:24,424 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:24,489 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:24,489 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:24,498 [main] [INFO ] [ExceptionHandlerExceptionResolver] Detected @ExceptionHandler methods in exceptionHandlerAdvice                                         
2018/05/06 10:36:24,860 [main] [INFO ] [EndpointLinksResolver         ] Exposing 2 endpoint(s) beneath base path '/actuator'                                                 
2018/05/06 10:36:24,865 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 10:36:24,865 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>) 
2018/05/06 10:36:24,866 [main] [INFO ] [WebMvcEndpointHandlerMapping  ] Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:24,944 [main] [INFO ] [ScheduledAnnotationBeanPostProcessor] No TaskScheduler/ScheduledExecutorService bean found for scheduled processing                        
2018/05/06 10:36:24,945 [main] [INFO ] [StorageUserServiceTest        ] Started StorageUserServiceTest in 1.7 seconds (JVM running for 57.201)                               
2018/05/06 10:36:24,947 [main] [INFO ] [KeyStoreInitializationRunner  ] Check if keys for keystore are needed to be initialized...                                           
2018/05/06 10:36:25,983 [main] [INFO ] [KeyStoreInitializationRunner  ] Key initialization completed.                                                                        
2018/05/06 10:36:25,991 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'216d3234-358c-4eb0-8244-45ab23da159e'}, ReadKeyPassword{'66***6f'}} 
2018/05/06 10:36:25,991 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - null}} 
2018/05/06 10:36:25,991 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e            
2018/05/06 10:36:25,991 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - null}} -> false 
2018/05/06 10:36:25,991 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                      
2018/05/06 10:36:25,991 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:25,991 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.zip 
2018/05/06 10:36:25,991 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D32313664333233342D333538632D346562302D383234342D343561623233646131353965 
2018/05/06 10:36:25,991 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e                            
2018/05/06 10:36:28,595 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,596 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.zip.5e0444fb-eb00-49b1-b70e-b812bbcb805b 
2018/05/06 10:36:28,597 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:28,598 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,598 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e            
2018/05/06 10:36:28,598 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - home}} 
2018/05/06 10:36:28,598 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}, DocumentKey{1715....6A4D}}, accessType=WRITE} at BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,598 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,598 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,598 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:28,650 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D32313664333233342D333538632D346562302D383234342D343561623233646131353965PKQLY'} 
2018/05/06 10:36:28,650 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}, DocumentKey{1715....6A4D}}, accessType=WRITE} at BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,650 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008} 
2018/05/06 10:36:28,650 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008.zip 
2018/05/06 10:36:28,650 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008} 
2018/05/06 10:36:28,656 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32313664333233342D333538632D346562302D383234342D343561623233646131353965PKQLY'} 
2018/05/06 10:36:28,656 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,657 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32313664333233342D333538632D346562302D383234342D343561623233646131353965PKQLY"
    }
  }
}with UTF-8 
2018/05/06 10:36:28,657 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008.zip.afd66b28-6673-4d6d-87fe-a6073a2cecb9 
2018/05/06 10:36:28,657 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}, DocumentKey{1715....6A4D}}, accessType=WRITE} at BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,657 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}, DocumentKey{1715....6A4D}}, accessType=WRITE} at BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,657 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey} 
2018/05/06 10:36:28,658 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,658 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey.zip.b8c29f2b-40cc-4ee6-ac82-c33605c77f78 
2018/05/06 10:36:28,658 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:28,658 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey} 
2018/05/06 10:36:28,658 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - home}} 
2018/05/06 10:36:28,658 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'216d3234-358c-4eb0-8244-45ab23da159e'}, ReadKeyPassword{'66***6f'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:28,658 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - home}}      
2018/05/06 10:36:28,658 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey} 
2018/05/06 10:36:28,658 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey.zip 
2018/05/06 10:36:28,658 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey} 
2018/05/06 10:36:28,658 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey} 
2018/05/06 10:36:28,658 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,659 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:28,659 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/bp-216d3234-358c-4eb0-8244-45ab23da159e/home.bucketGuardKey} 
2018/05/06 10:36:28,659 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'} from document guard at BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,659 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,659 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:28,661 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008} 
2018/05/06 10:36:28,662 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008.zip 
2018/05/06 10:36:28,662 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008} 
2018/05/06 10:36:28,662 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008} 
2018/05/06 10:36:28,662 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,662 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/.keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e.DK40e4e259-9c3d-4df2-8d57-3ccd52414008",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D32313664333233342D333538632D346562302D383234342D343561623233646131353965PKQLY"
    }
  }
}with UTF-8 
2018/05/06 10:36:28,662 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D32313664333233342D333538632D346562302D383234342D343561623233646131353965PKQLY'} 
2018/05/06 10:36:28,669 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'} from document guard at BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - .keystore/KS-216d3234-358c-4eb0-8244-45ab23da159e} 
2018/05/06 10:36:28,669 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}, DocumentKey{1715....6A4D}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - home}} 
2018/05/06 10:36:28,669 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - home/README.txt}                  
2018/05/06 10:36:28,669 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}, DocumentKey{1715....6A4D}} 
2018/05/06 10:36:28,669 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK40e4e259-9c3d-4df2-8d57-3ccd52414008'}                                   
2018/05/06 10:36:28,669 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,669 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-216d3234-358c-4eb0-8244-45ab23da159e/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK40e4e259-9c3d-4df2-8d57-3ccd52414008"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:28,670 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e/home/README.txt.zip.337a4ff9-3fb0-405e-84fa-a48a534fa9a9 
2018/05/06 10:36:28,670 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - home/README.txt}               
2018/05/06 10:36:28,670 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'216d3234-358c-4eb0-8244-45ab23da159e'}, ReadKeyPassword{'66***6f'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:28,670 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'216d3234-358c-4eb0-8244-45ab23da159e'}, ReadKeyPassword{'66***6f'}} 
2018/05/06 10:36:28,671 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - null}} 
2018/05/06 10:36:28,671 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,671 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - null}} -> true 
2018/05/06 10:36:28,671 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'216d3234-358c-4eb0-8244-45ab23da159e'}, ReadKeyPassword{'66***6f'}} 
2018/05/06 10:36:28,671 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - null}} 
2018/05/06 10:36:28,671 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-216d3234-358c-4eb0-8244-45ab23da159e                    
2018/05/06 10:36:28,671 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-216d3234-358c-4eb0-8244-45ab23da159e - null}} -> true 
2018/05/06 10:36:28,673 [main] [ERROR] [BaseException                 ] Exception message:UserID{'216d3234-358c-4eb0-8244-45ab23da159e'}
Exception class:class org.adorsys.docusafe.business.exceptions.UserIDAlreadyExistsException
Exception stack:
	-> org.adorsys.docusafe.business.impl.DocumentSafeServiceImpl.createUser(DocumentSafeServiceImpl.java:83)
	-> de.adorsys.multibanking.service.base.ExceptionHandlingDocumentSafeService.createUser(ExceptionHandlingDocumentSafeService.java:33)
	-> de.adorsys.multibanking.service.base.StorageUserService.createUser(StorageUserService.java:42)
	-> de.adorsys.multibanking.service.base.StorageUserServiceTest.testCreateUserAgain(StorageUserServiceTest.java:42)
	   sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	   sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	   java.lang.reflect.Method.invoke(Method.java:498)
	   org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	   org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	   org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	   org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	   org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:73)
	   org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:83)
	   org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	   org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	   org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	   org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	   org.junit.rules.RunRules.evaluate(RunRules.java:20)
	   org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	   org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	   org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	   org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	   org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	   org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	   org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	   org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	   org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	   org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	   org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	   org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	   org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	   org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	   org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	   org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	   org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	   org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
 
2018/05/06 10:36:28,677 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-094b8f4b-44a1-4b0e-bcf3-ba73d3768e5f - null}} 
2018/05/06 10:36:28,677 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-094b8f4b-44a1-4b0e-bcf3-ba73d3768e5f            
2018/05/06 10:36:28,677 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-094b8f4b-44a1-4b0e-bcf3-ba73d3768e5f - null}} -> false 
2018/05/06 10:36:28,681 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'5c61f040-8523-45fe-a574-fc0b8e2532cb'}, ReadKeyPassword{'06***9c'}} 
2018/05/06 10:36:28,681 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - null}} 
2018/05/06 10:36:28,681 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb            
2018/05/06 10:36:28,681 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - null}} -> false 
2018/05/06 10:36:28,681 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                      
2018/05/06 10:36:28,681 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:28,681 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.zip 
2018/05/06 10:36:28,681 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D35633631663034302D383532332D343566652D613537342D666330623865323533326362 
2018/05/06 10:36:28,681 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb                            
2018/05/06 10:36:31,562 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,562 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.zip.b81540bf-e765-4aee-a4a0-89714ef7e490 
2018/05/06 10:36:31,563 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:31,564 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,564 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb            
2018/05/06 10:36:31,564 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - home}} 
2018/05/06 10:36:31,564 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}, DocumentKey{8980....6727}}, accessType=WRITE} at BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,564 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,564 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,565 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:31,611 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D35633631663034302D383532332D343566652D613537342D666330623865323533326362DPG9M'} 
2018/05/06 10:36:31,611 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}, DocumentKey{8980....6727}}, accessType=WRITE} at BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,612 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5} 
2018/05/06 10:36:31,612 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5.zip 
2018/05/06 10:36:31,612 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5} 
2018/05/06 10:36:31,619 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35633631663034302D383532332D343566652D613537342D666330623865323533326362DPG9M'} 
2018/05/06 10:36:31,619 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,619 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35633631663034302D383532332D343566652D613537342D666330623865323533326362DPG9M"
    }
  }
}with UTF-8 
2018/05/06 10:36:31,619 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5.zip.7aa50ab2-ad71-4a15-ba31-5fb7ceee518c 
2018/05/06 10:36:31,619 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}, DocumentKey{8980....6727}}, accessType=WRITE} at BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,619 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}, DocumentKey{8980....6727}}, accessType=WRITE} at BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,620 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey} 
2018/05/06 10:36:31,620 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,620 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey.zip.10be6157-bc9c-4c7b-8e89-21fd979a7fe4 
2018/05/06 10:36:31,620 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:31,620 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey} 
2018/05/06 10:36:31,620 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - home}} 
2018/05/06 10:36:31,620 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5c61f040-8523-45fe-a574-fc0b8e2532cb'}, ReadKeyPassword{'06***9c'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:31,620 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - home}}      
2018/05/06 10:36:31,620 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey} 
2018/05/06 10:36:31,620 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey.zip 
2018/05/06 10:36:31,620 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey} 
2018/05/06 10:36:31,620 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey} 
2018/05/06 10:36:31,620 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,621 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:31,621 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home.bucketGuardKey} 
2018/05/06 10:36:31,621 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'} from document guard at BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,621 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,621 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:31,624 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5} 
2018/05/06 10:36:31,624 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5.zip 
2018/05/06 10:36:31,624 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5} 
2018/05/06 10:36:31,624 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5} 
2018/05/06 10:36:31,624 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,624 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/.keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb.DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35633631663034302D383532332D343566652D613537342D666330623865323533326362DPG9M"
    }
  }
}with UTF-8 
2018/05/06 10:36:31,624 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35633631663034302D383532332D343566652D613537342D666330623865323533326362DPG9M'} 
2018/05/06 10:36:31,629 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'} from document guard at BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - .keystore/KS-5c61f040-8523-45fe-a574-fc0b8e2532cb} 
2018/05/06 10:36:31,629 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}, DocumentKey{8980....6727}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - home}} 
2018/05/06 10:36:31,629 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - home/README.txt}                  
2018/05/06 10:36:31,629 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}, DocumentKey{8980....6727}} 
2018/05/06 10:36:31,629 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5'}                                   
2018/05/06 10:36:31,629 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,630 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKe8495ae4-f4d8-4d4c-94a4-2040b21c1ba5"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:31,630 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb/home/README.txt.zip.f2bb6978-68ea-4e5f-93c7-a94ad0185506 
2018/05/06 10:36:31,630 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - home/README.txt}               
2018/05/06 10:36:31,630 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5c61f040-8523-45fe-a574-fc0b8e2532cb'}, ReadKeyPassword{'06***9c'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:31,630 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'5c61f040-8523-45fe-a574-fc0b8e2532cb'}, ReadKeyPassword{'06***9c'}} 
2018/05/06 10:36:31,631 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - null}} 
2018/05/06 10:36:31,631 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5c61f040-8523-45fe-a574-fc0b8e2532cb                    
2018/05/06 10:36:31,631 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5c61f040-8523-45fe-a574-fc0b8e2532cb - null}} -> true 
2018/05/06 10:36:31,635 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'38d8ac00-d94a-4888-8807-6e513c177831'}, ReadKeyPassword{'43***8a'}} 
2018/05/06 10:36:31,635 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - null}} 
2018/05/06 10:36:31,635 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831            
2018/05/06 10:36:31,635 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - null}} -> false 
2018/05/06 10:36:31,635 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                      
2018/05/06 10:36:31,635 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:31,635 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.zip 
2018/05/06 10:36:31,635 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331 
2018/05/06 10:36:31,635 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831                            
2018/05/06 10:36:34,335 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,335 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.zip.5b2e7064-18d5-43b9-9c23-ab553ab4f6d9 
2018/05/06 10:36:34,336 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:34,337 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,337 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831            
2018/05/06 10:36:34,337 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - home}} 
2018/05/06 10:36:34,337 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}, DocumentKey{5A33....5094}}, accessType=WRITE} at BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,337 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,337 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,339 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:34,385 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331VYZU3'} 
2018/05/06 10:36:34,385 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}, DocumentKey{5A33....5094}}, accessType=WRITE} at BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,385 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db} 
2018/05/06 10:36:34,385 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db.zip 
2018/05/06 10:36:34,385 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db} 
2018/05/06 10:36:34,391 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331VYZU3'} 
2018/05/06 10:36:34,391 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,391 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331VYZU3"
    }
  }
}with UTF-8 
2018/05/06 10:36:34,391 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db.zip.b127400e-489b-48ea-a557-1bd54161ba46 
2018/05/06 10:36:34,392 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}, DocumentKey{5A33....5094}}, accessType=WRITE} at BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,392 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}, DocumentKey{5A33....5094}}, accessType=WRITE} at BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,392 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey} 
2018/05/06 10:36:34,392 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,392 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey.zip.2d202197-4b01-42df-a593-cae0216cf219 
2018/05/06 10:36:34,392 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:34,393 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey} 
2018/05/06 10:36:34,393 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - home}} 
2018/05/06 10:36:34,393 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'38d8ac00-d94a-4888-8807-6e513c177831'}, ReadKeyPassword{'43***8a'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:34,393 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - home}}      
2018/05/06 10:36:34,393 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey} 
2018/05/06 10:36:34,393 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey.zip 
2018/05/06 10:36:34,393 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey} 
2018/05/06 10:36:34,393 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey} 
2018/05/06 10:36:34,393 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,393 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:34,394 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/bp-38d8ac00-d94a-4888-8807-6e513c177831/home.bucketGuardKey} 
2018/05/06 10:36:34,394 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'} from document guard at BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,394 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,394 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:34,396 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db} 
2018/05/06 10:36:34,396 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db.zip 
2018/05/06 10:36:34,396 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db} 
2018/05/06 10:36:34,396 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db} 
2018/05/06 10:36:34,396 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,396 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831.DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331VYZU3"
    }
  }
}with UTF-8 
2018/05/06 10:36:34,397 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331VYZU3'} 
2018/05/06 10:36:34,402 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'} from document guard at BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,402 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}, DocumentKey{5A33....5094}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - home}} 
2018/05/06 10:36:34,402 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - home/README.txt}                  
2018/05/06 10:36:34,402 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}, DocumentKey{5A33....5094}} 
2018/05/06 10:36:34,402 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db'}                                   
2018/05/06 10:36:34,402 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,402 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKb26551f2-a986-4e30-bc45-1cbb9b0ab6db"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:34,403 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831/home/README.txt.zip.1b439b70-837a-4edf-b0ae-70d9a1604419 
2018/05/06 10:36:34,403 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - home/README.txt}               
2018/05/06 10:36:34,404 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'38d8ac00-d94a-4888-8807-6e513c177831'}, ReadKeyPassword{'43***8a'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:34,404 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'38d8ac00-d94a-4888-8807-6e513c177831'}, ReadKeyPassword{'43***8a'}} 
2018/05/06 10:36:34,404 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for public key of BucketPath{bp-38d8ac00-d94a-4888-8807-6e513c177831 - .keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831} 
2018/05/06 10:36:34,404 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-38d8ac00-d94a-4888-8807-6e513c177831                    
2018/05/06 10:36:34,404 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-38d8ac00-d94a-4888-8807-6e513c177831/.keystore/KS-38d8ac00-d94a-4888-8807-6e513c177831",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:34,408 [main] [DEBUG] [KeyStore2KeySourceHelper      ] number of public keys found:10                                                                       
2018/05/06 10:36:34,408 [main] [DEBUG] [KeySourceServiceImpl          ] Found public encryption key JWK :2E6B657973746F72652F4B532D33386438616330302D643934612D343838382D383830372D366535313363313737383331SIVVP 
2018/05/06 10:36:34,411 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} 
2018/05/06 10:36:34,411 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} 
2018/05/06 10:36:34,411 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a            
2018/05/06 10:36:34,411 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} -> false 
2018/05/06 10:36:34,412 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                      
2018/05/06 10:36:34,412 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:34,412 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.zip 
2018/05/06 10:36:34,412 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D39623665623635652D316136362D346237652D383839652D323461666332613532633561 
2018/05/06 10:36:34,412 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                            
2018/05/06 10:36:37,864 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,865 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.zip.416fe533-1f9c-4413-a8db-5cedc86925f7 
2018/05/06 10:36:37,865 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:37,866 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,866 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a            
2018/05/06 10:36:37,866 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - home}} 
2018/05/06 10:36:37,866 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}, DocumentKey{9E8B....543D}}, accessType=WRITE} at BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,866 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,866 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,868 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:37,918 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D39623665623635652D316136362D346237652D383839652D323461666332613532633561WZZ8M'} 
2018/05/06 10:36:37,919 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}, DocumentKey{9E8B....543D}}, accessType=WRITE} at BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,919 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9} 
2018/05/06 10:36:37,919 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9.zip 
2018/05/06 10:36:37,919 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9} 
2018/05/06 10:36:37,924 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39623665623635652D316136362D346237652D383839652D323461666332613532633561WZZ8M'} 
2018/05/06 10:36:37,924 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,924 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39623665623635652D316136362D346237652D383839652D323461666332613532633561WZZ8M"
    }
  }
}with UTF-8 
2018/05/06 10:36:37,924 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9.zip.9d954126-6110-4ce6-ae37-b115d03bf1f3 
2018/05/06 10:36:37,925 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}, DocumentKey{9E8B....543D}}, accessType=WRITE} at BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,925 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}, DocumentKey{9E8B....543D}}, accessType=WRITE} at BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,925 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey} 
2018/05/06 10:36:37,925 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,925 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey.zip.5142355b-ffeb-4c80-b7e6-95578efae678 
2018/05/06 10:36:37,925 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:37,926 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey} 
2018/05/06 10:36:37,926 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - home}} 
2018/05/06 10:36:37,926 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:37,926 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - home}}      
2018/05/06 10:36:37,926 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey} 
2018/05/06 10:36:37,926 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey.zip 
2018/05/06 10:36:37,926 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey} 
2018/05/06 10:36:37,926 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey} 
2018/05/06 10:36:37,926 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,926 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:37,926 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home.bucketGuardKey} 
2018/05/06 10:36:37,927 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'} from document guard at BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,927 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,927 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:37,929 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9} 
2018/05/06 10:36:37,929 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9.zip 
2018/05/06 10:36:37,929 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9} 
2018/05/06 10:36:37,929 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9} 
2018/05/06 10:36:37,929 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,929 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/.keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a.DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D39623665623635652D316136362D346237652D383839652D323461666332613532633561WZZ8M"
    }
  }
}with UTF-8 
2018/05/06 10:36:37,929 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D39623665623635652D316136362D346237652D383839652D323461666332613532633561WZZ8M'} 
2018/05/06 10:36:37,935 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'} from document guard at BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - .keystore/KS-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a} 
2018/05/06 10:36:37,935 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}, DocumentKey{9E8B....543D}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - home}} 
2018/05/06 10:36:37,935 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - home/README.txt}                  
2018/05/06 10:36:37,935 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}, DocumentKey{9E8B....543D}} 
2018/05/06 10:36:37,935 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9'}                                   
2018/05/06 10:36:37,935 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,935 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKaf2f0fc1-8dc9-4f90-a593-ef58f6c6b4a9"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:37,936 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a/home/README.txt.zip.d736cb99-da9f-42c4-8911-21e4370f9b80 
2018/05/06 10:36:37,937 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - home/README.txt}               
2018/05/06 10:36:37,937 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:37,937 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} 
2018/05/06 10:36:37,937 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} 
2018/05/06 10:36:37,937 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,937 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} -> true 
2018/05/06 10:36:37,937 [main] [INFO ] [DocumentSafeServiceImpl       ] start destroy user for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} 
2018/05/06 10:36:37,937 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} 
2018/05/06 10:36:37,937 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,937 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} -> true 
2018/05/06 10:36:37,937 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:37,937 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a                    
2018/05/06 10:36:37,942 [main] [INFO ] [DocumentSafeServiceImpl       ] finished destroy user for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} 
2018/05/06 10:36:37,942 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} 
2018/05/06 10:36:37,942 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a            
2018/05/06 10:36:37,942 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} -> false 
2018/05/06 10:36:37,942 [main] [INFO ] [DocumentSafeServiceImpl       ] start destroy user for UserIDAuth{UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}, ReadKeyPassword{'11***32'}} 
2018/05/06 10:36:37,942 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} 
2018/05/06 10:36:37,942 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a            
2018/05/06 10:36:37,942 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-9b6eb65e-1a66-4b7e-889e-24afc2a52c5a - null}} -> false 
2018/05/06 10:36:37,942 [main] [ERROR] [BaseException                 ] Exception message:UserID{'9b6eb65e-1a66-4b7e-889e-24afc2a52c5a'}
Exception class:class org.adorsys.docusafe.business.exceptions.UserIDDoesNotExistException
Exception stack:
	-> org.adorsys.docusafe.business.impl.DocumentSafeServiceImpl.destroyUser(DocumentSafeServiceImpl.java:113)
	-> de.adorsys.multibanking.service.base.ExceptionHandlingDocumentSafeService.destroyUser(ExceptionHandlingDocumentSafeService.java:38)
	-> de.adorsys.multibanking.service.base.StorageUserService.deleteUser(StorageUserService.java:51)
	-> de.adorsys.multibanking.service.base.StorageUserServiceTest.testDeleteUserAgain(StorageUserServiceTest.java:61)
	   sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	   sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	   java.lang.reflect.Method.invoke(Method.java:498)
	   org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	   org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	   org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	   org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	   org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:73)
	   org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:83)
	   org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	   org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	   org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	   org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	   org.junit.rules.RunRules.evaluate(RunRules.java:20)
	   org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	   org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	   org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	   org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	   org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	   org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	   org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	   org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	   org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	   org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	   org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	   org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	   org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	   org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	   org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	   org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	   org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	   org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
 
2018/05/06 10:36:37,946 [main] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'}, ReadKeyPassword{'2b***0b'}} 
2018/05/06 10:36:37,946 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} 
2018/05/06 10:36:37,946 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741            
2018/05/06 10:36:37,946 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} -> false 
2018/05/06 10:36:37,946 [main] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                      
2018/05/06 10:36:37,946 [main] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:37,946 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.zip 
2018/05/06 10:36:37,946 [main] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D35346432623566322D306362652D343638352D396331642D356331303633653263373431 
2018/05/06 10:36:37,946 [main] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                            
2018/05/06 10:36:37,984 [pool-2-thread-1] [DEBUG] [KeyRotationSchedule           ] Perform key rotation...                                                                              
2018/05/06 10:36:37,985 [pool-2-thread-1] [DEBUG] [KeyRotationSchedule           ] 0 keys removed: []                                                                                   
2018/05/06 10:36:37,985 [pool-2-thread-1] [DEBUG] [KeyRotationSchedule           ] 0 future keys generated: []                                                                          
2018/05/06 10:36:37,985 [pool-2-thread-1] [DEBUG] [KeyRotationSchedule           ] 0 keys generated: []                                                                                 
2018/05/06 10:36:37,986 [pool-2-thread-1] [DEBUG] [KeyRotationSchedule           ] Key rotation finished.                                                                               
2018/05/06 10:36:40,268 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,268 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.zip.9f0de897-02b3-460b-a1a8-0833edf913c4 
2018/05/06 10:36:40,269 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:40,269 [main] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,270 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741            
2018/05/06 10:36:40,270 [main] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - home}} 
2018/05/06 10:36:40,270 [main] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}, DocumentKey{D1A4....C8C9}}, accessType=WRITE} at BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,270 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,270 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,271 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:40,312 [main] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D35346432623566322D306362652D343638352D396331642D356331303633653263373431JAZ8G'} 
2018/05/06 10:36:40,312 [main] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}, DocumentKey{D1A4....C8C9}}, accessType=WRITE} at BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,313 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98} 
2018/05/06 10:36:40,313 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98.zip 
2018/05/06 10:36:40,313 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98} 
2018/05/06 10:36:40,317 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35346432623566322D306362652D343638352D396331642D356331303633653263373431JAZ8G'} 
2018/05/06 10:36:40,317 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,317 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35346432623566322D306362652D343638352D396331642D356331303633653263373431JAZ8G"
    }
  }
}with UTF-8 
2018/05/06 10:36:40,317 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98.zip.3e1bdda8-316c-4972-bd45-60094a46c2a5 
2018/05/06 10:36:40,318 [main] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}, DocumentKey{D1A4....C8C9}}, accessType=WRITE} at BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,318 [main] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}, DocumentKey{D1A4....C8C9}}, accessType=WRITE} at BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,319 [main] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey} 
2018/05/06 10:36:40,319 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,320 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey.zip.f5032826-5275-48ed-90a4-8e103ccc2a34 
2018/05/06 10:36:40,320 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:40,320 [main] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey} 
2018/05/06 10:36:40,320 [main] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - home}} 
2018/05/06 10:36:40,320 [main] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'}, ReadKeyPassword{'2b***0b'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:40,320 [main] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - home}}      
2018/05/06 10:36:40,320 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey} 
2018/05/06 10:36:40,320 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey.zip 
2018/05/06 10:36:40,320 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey} 
2018/05/06 10:36:40,320 [main] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey} 
2018/05/06 10:36:40,320 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,320 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:40,321 [main] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home.bucketGuardKey} 
2018/05/06 10:36:40,321 [main] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'} from document guard at BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,321 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,321 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:40,323 [main] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98} 
2018/05/06 10:36:40,323 [main] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98.zip 
2018/05/06 10:36:40,323 [main] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98} 
2018/05/06 10:36:40,323 [main] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98} 
2018/05/06 10:36:40,323 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,323 [main] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/.keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741.DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35346432623566322D306362652D343638352D396331642D356331303633653263373431JAZ8G"
    }
  }
}with UTF-8 
2018/05/06 10:36:40,324 [main] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35346432623566322D306362652D343638352D396331642D356331303633653263373431JAZ8G'} 
2018/05/06 10:36:40,328 [main] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'} from document guard at BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - .keystore/KS-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741} 
2018/05/06 10:36:40,328 [main] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}, DocumentKey{D1A4....C8C9}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - home}} 
2018/05/06 10:36:40,328 [main] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - home/README.txt}                  
2018/05/06 10:36:40,328 [main] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}, DocumentKey{D1A4....C8C9}} 
2018/05/06 10:36:40,328 [main] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98'}                                   
2018/05/06 10:36:40,328 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,328 [main] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DKbf99a1b7-7086-4079-9cb9-cbd2eebd0d98"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:40,329 [main] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741/home/README.txt.zip.68f1a027-5a7d-4972-afa5-9d253b41b90d 
2018/05/06 10:36:40,329 [main] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - home/README.txt}               
2018/05/06 10:36:40,329 [main] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'}, ReadKeyPassword{'2b***0b'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:40,329 [main] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'}, ReadKeyPassword{'2b***0b'}} 
2018/05/06 10:36:40,329 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} 
2018/05/06 10:36:40,329 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,329 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} -> true 
2018/05/06 10:36:40,329 [main] [INFO ] [DocumentSafeServiceImpl       ] start destroy user for UserIDAuth{UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'}, ReadKeyPassword{'2b***0b'}} 
2018/05/06 10:36:40,329 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} 
2018/05/06 10:36:40,329 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,329 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} -> true 
2018/05/06 10:36:40,329 [main] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:40,330 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741                    
2018/05/06 10:36:40,330 [main] [INFO ] [DocumentSafeServiceImpl       ] finished destroy user for UserIDAuth{UserID{'54d2b5f2-0cbe-4685-9c1d-5c1063e2c741'}, ReadKeyPassword{'2b***0b'}} 
2018/05/06 10:36:40,330 [main] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} 
2018/05/06 10:36:40,330 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741            
2018/05/06 10:36:40,330 [main] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-54d2b5f2-0cbe-4685-9c1d-5c1063e2c741 - null}} -> false 
2018/05/06 10:36:40,335 [main] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for public key of BucketPath{bp-d5bbff7f-fb63-4fbf-846c-0b561dcbe4e4 - .keystore/KS-d5bbff7f-fb63-4fbf-846c-0b561dcbe4e4} 
2018/05/06 10:36:40,335 [main] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-d5bbff7f-fb63-4fbf-846c-0b561dcbe4e4            
2018/05/06 10:36:40,335 [main] [ERROR] [BaseException                 ] Exception message:Container bp-d5bbff7f-fb63-4fbf-846c-0b561dcbe4e4 does not exist
Exception class:class org.adorsys.cryptoutils.exceptions.BaseException
Exception stack:
	-> org.adorsys.encobject.filesystem.FileSystemExtendedStorageConnection.checkContainerExists(FileSystemExtendedStorageConnection.java:229)
	-> org.adorsys.encobject.filesystem.FileSystemExtendedStorageConnection.getBlob(FileSystemExtendedStorageConnection.java:156)
	-> org.adorsys.encobject.service.impl.BlobStoreKeystorePersistenceImpl.loadKeystore(BlobStoreKeystorePersistenceImpl.java:63)
	-> org.adorsys.encobject.service.api.KeyStore2KeySourceHelper.getForPublicKeyJWK(KeyStore2KeySourceHelper.java:64)
	-> org.adorsys.docusafe.service.impl.KeySourceServiceImpl.findPublicEncryptionKey(KeySourceServiceImpl.java:25)
	-> org.adorsys.docusafe.business.impl.DocumentSafeServiceImpl.findPublicEncryptionKey(DocumentSafeServiceImpl.java:313)
	-> de.adorsys.multibanking.service.base.ExceptionHandlingDocumentSafeService.findPublicEncryptionKey(ExceptionHandlingDocumentSafeService.java:170)
	-> de.adorsys.multibanking.service.base.StorageUserService.findPublicEncryptionKey(StorageUserService.java:61)
	-> de.adorsys.multibanking.service.base.StorageUserServiceTest.testFindPublicEncryptionKeyWrongUser(StorageUserServiceTest.java:75)
	   sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	   sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	   java.lang.reflect.Method.invoke(Method.java:498)
	   org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	   org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	   org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	   org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	   org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:73)
	   org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:83)
	   org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	   org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)
	   org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)
	   org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)
	   org.junit.rules.RunRules.evaluate(RunRules.java:20)
	   org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)
	   org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	   org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	   org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	   org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	   org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	   org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	   org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
	   org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	   org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)
	   org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	   org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	   org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	   org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	   org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	   org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	   org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	   org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	   org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
 
2018/05/06 10:36:40,344 [main] [ERROR] [BaseException                 ] Exception message:Missing booking date for booking: null
Exception class:class org.adorsys.cryptoutils.exceptions.BaseException
Exception stack:
	-> de.adorsys.multibanking.service.helper.BookingHelper.period(BookingHelper.java:39)
	-> de.adorsys.multibanking.service.helper.BookingHelperDateFormatTest.testPeriodNull(BookingHelperDateFormatTest.java:20)
	   sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	   sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	   sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	   java.lang.reflect.Method.invoke(Method.java:498)
	   org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	   org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	   org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	   org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	   org.junit.internal.runners.statements.ExpectException.evaluate(ExpectException.java:19)
	   org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	   org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	   org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	   org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	   org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	   org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	   org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	   org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	   org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	   org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	   org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	   org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	   org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	   org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	   org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	   org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
 
2018/05/06 10:36:40,422 [main] [INFO ] [UserDataTest                  ] userData:UserData(userEntity=null, bankAccesses=[BankAccessData(bankAccess=BankAccessEntity(id=ID1, userId=null, pin=1234, pin2=null, temporary=false, storePin=false, storeBookings=false, categorizeBookings=false, storeAnalytics=false, storeAnonymizedBookings=false), bankAccounts=[], accountSynchPref=null)], contracts=[], accountSynchPref=null) 
2018/05/06 10:36:40,422 [main] [INFO ] [UserDataTest                  ] bankAccessData     orig:BankAccessData(bankAccess=BankAccessEntity(id=ID1, userId=null, pin=1234, pin2=null, temporary=false, storePin=false, storeBookings=false, categorizeBookings=false, storeAnalytics=false, storeAnonymizedBookings=false), bankAccounts=[], accountSynchPref=null) 
2018/05/06 10:36:40,422 [main] [INFO ] [UserDataTest                  ] bankAccessData  deleted:BankAccessData(bankAccess=BankAccessEntity(id=ID1, userId=null, pin=1234, pin2=null, temporary=false, storePin=false, storeBookings=false, categorizeBookings=false, storeAnalytics=false, storeAnonymizedBookings=false), bankAccounts=[], accountSynchPref=null) 
2018/05/06 10:36:40,422 [main] [INFO ] [UserDataTest                  ] bankAccessData deleted2:null                                                                         
2018/05/06 10:36:40,426 [main] [INFO ] [DefaultTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.service.UserIdTest], using DelegatingSmartContextLoader 
2018/05/06 10:36:40,427 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.service.UserIdTest]: no resource found for suffixes {-context.xml}. 
2018/05/06 10:36:40,427 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.service.UserIdTest]: UserIdTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:36:40,428 [main] [INFO ] [DefaultTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:40,429 [main] [INFO ] [DefaultTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@451393a9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c590039, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5b9aac82, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@72cf43fa, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2b1818d1, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@1f748d43, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@1104cc93, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@19dc9dda, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@72e9c0a0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@494c452b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7e9b68c5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3d41881] 
2018/05/06 10:36:40,429 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:40,433 [main] [INFO ] [GenericApplicationContext     ] Refreshing org.springframework.context.support.GenericApplicationContext@31b2c451: startup date [Sun May 06 10:36:40 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:40,463 [main] [INFO ] [SpringBootTestContextBootstrapper] Neither @ContextConfiguration nor @ContextHierarchy found for test class [de.adorsys.multibanking.web.BankAccessControllerIT], using SpringBootContextLoader 
2018/05/06 10:36:40,464 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.BankAccessControllerIT]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:40,464 [main] [INFO ] [AnnotationConfigContextLoaderUtils] Could not detect default configuration classes for test class [de.adorsys.multibanking.web.BankAccessControllerIT]: BankAccessControllerIT does not declare any static, non-private, non-final, nested classes annotated with @Configuration. 
2018/05/06 10:36:40,473 [main] [INFO ] [SpringBootTestContextBootstrapper] Found @SpringBootConfiguration de.adorsys.multibanking.Application for test class de.adorsys.multibanking.web.BankAccessControllerIT 
2018/05/06 10:36:40,475 [main] [INFO ] [SpringBootTestContextBootstrapper] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:40,477 [main] [INFO ] [SpringBootTestContextBootstrapper] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6945fdb8, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@627dfd9f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@35e64c7b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@17179a7e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@51f91d19, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@5ce593bc, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@5b6789cf, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@70882cb7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6980e66a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1988e095, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7ec63b9a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4f1a4d61] 
2018/05/06 10:36:40,477 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:40,521 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:40,521 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 10:36:40,521 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:40,544 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:40,544 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:40,544 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:40,544 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:40,544 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 10:36:40,544 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 10:36:40,549 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2            
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} -> false 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'.(***4!'}} 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2            
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - null}} -> false 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                      
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.zip 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132 
2018/05/06 10:36:40,587 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2                            
2018/05/06 10:36:43,345 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,346 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.zip.dafec8aa-b23f-40c4-a090-58435e234b22 
2018/05/06 10:36:43,346 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:43,347 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,347 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2            
2018/05/06 10:36:43,347 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:36:43,347 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}, DocumentKey{8CED....75AE}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,347 [http-nio-8080-exec-4] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,347 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,349 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:43,393 [http-nio-8080-exec-4] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132VMICI'} 
2018/05/06 10:36:43,393 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}, DocumentKey{8CED....75AE}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,393 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70} 
2018/05/06 10:36:43,393 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70.zip 
2018/05/06 10:36:43,393 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70} 
2018/05/06 10:36:43,399 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132VMICI'} 
2018/05/06 10:36:43,399 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,399 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132VMICI"
    }
  }
}with UTF-8 
2018/05/06 10:36:43,399 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70.zip.80c13ee5-2f62-4fc9-91d8-82d78bcd0be8 
2018/05/06 10:36:43,400 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}, DocumentKey{8CED....75AE}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,400 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}, DocumentKey{8CED....75AE}}, accessType=WRITE} at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,400 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:36:43,400 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,400 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey.zip.e7727931-8cf6-4df9-bd21-6d69c0273eaf 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'.(***4!'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}}      
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey.zip 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:43,401 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home.bucketGuardKey} 
2018/05/06 10:36:43,402 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'} from document guard at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,402 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,402 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70} 
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70.zip 
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70} 
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70} 
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/.keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2.DK9adde82b-faa6-49f6-808d-8d76c5f3eb70",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132VMICI"
    }
  }
}with UTF-8 
2018/05/06 10:36:43,404 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35666539383036322D383762372D346661652D383439332D373331323237383264666132VMICI'} 
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'} from document guard at BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - .keystore/KS-5fe98062-87b7-4fae-8493-73122782dfa2} 
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}, DocumentKey{8CED....75AE}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home}} 
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/README.txt}                  
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}, DocumentKey{8CED....75AE}} 
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK9adde82b-faa6-49f6-808d-8d76c5f3eb70'}                                   
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2                    
2018/05/06 10:36:43,408 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK9adde82b-faa6-49f6-808d-8d76c5f3eb70"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:43,409 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5fe98062-87b7-4fae-8493-73122782dfa2/home/README.txt.zip.741a1a13-211b-4f44-bcd1-b89ce2ac5a66 
2018/05/06 10:36:43,409 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5fe98062-87b7-4fae-8493-73122782dfa2 - home/README.txt}               
2018/05/06 10:36:43,409 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'.(***4!'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:43,409 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}, ReadKeyPassword{'.(***4!'}} 
2018/05/06 10:36:43,409 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] userContext ist 5fe98062-87b7-4fae-8493-73122782dfa2                                                 
2018/05/06 10:36:43,409 [http-nio-8080-exec-4] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} -> false 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'fb***70'}} 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} -> false 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [FileSystemExtendedStorageConnection] created folder target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.zip 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638 
2018/05/06 10:36:43,410 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                            
2018/05/06 10:36:44,470 [pool-3-thread-1] [DEBUG] [KeyRotationSchedule           ] Perform key rotation...                                                                              
2018/05/06 10:36:44,470 [pool-3-thread-1] [DEBUG] [KeyRotationSchedule           ] 0 keys removed: []                                                                                   
2018/05/06 10:36:44,470 [pool-3-thread-1] [DEBUG] [KeyRotationSchedule           ] 0 future keys generated: []                                                                          
2018/05/06 10:36:44,471 [pool-3-thread-1] [DEBUG] [KeyRotationSchedule           ] 0 keys generated: []                                                                                 
2018/05/06 10:36:44,471 [pool-3-thread-1] [DEBUG] [KeyRotationSchedule           ] Key rotation finished.                                                                               
2018/05/06 10:36:47,042 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,043 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.zip.557fe11d-aa7a-4a8f-aa12-0034b4602df1 
2018/05/06 10:36:47,043 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:47,044 [http-nio-8080-exec-4] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,044 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,044 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:47,044 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,044 [http-nio-8080-exec-4] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,044 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,046 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:47,090 [http-nio-8080-exec-4] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB'} 
2018/05/06 10:36:47,090 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,090 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,090 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444.zip 
2018/05/06 10:36:47,090 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,097 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB'} 
2018/05/06 10:36:47,097 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,097 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB"
    }
  }
}with UTF-8 
2018/05/06 10:36:47,097 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444.zip.bfbb15fa-975b-4b4a-9a1d-2ec25369a29b 
2018/05/06 10:36:47,098 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,098 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,098 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,098 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,098 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey.zip.e55afc5f-75a6-424b-919d-3c880a32a716 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'fb***70'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}}      
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey.zip 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,099 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,100 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:47,100 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,100 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,100 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,100 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:47,104 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,104 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444.zip 
2018/05/06 10:36:47,104 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,104 [http-nio-8080-exec-4] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,104 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,105 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB"
    }
  }
}with UTF-8 
2018/05/06 10:36:47,105 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB'} 
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/README.txt}                  
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}} 
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}                                   
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3fa5a33f-d52e-4c23-86f4-25e439ee3444"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:47,111 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/README.txt.zip.fae63855-51ee-4de7-97a3-09f848ddbf1a 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/README.txt}               
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'fb***70'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'fb***70'}} 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/sts_user_data.aes}       
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/sts_user_data.aes.zip 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/sts_user_data.aes}    
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/sts_user_data.aes}       
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/sts_user_data.aes.zip 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/sts_user_data.aes}    
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'fb***70'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}}      
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey.zip 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:47,112 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:47,113 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,113 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,113 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:47,115 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,115 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444.zip 
2018/05/06 10:36:47,115 [http-nio-8080-exec-4] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,115 [http-nio-8080-exec-4] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444} 
2018/05/06 10:36:47,116 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,116 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK3fa5a33f-d52e-4c23-86f4-25e439ee3444",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB"
    }
  }
}with UTF-8 
2018/05/06 10:36:47,116 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638PAXXB'} 
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/sts_user_data.aes}           
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}, DocumentKey{E9CA....F3BC}} 
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK3fa5a33f-d52e-4c23-86f4-25e439ee3444'}                                   
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/sts_user_data.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3fa5a33f-d52e-4c23-86f4-25e439ee3444"
    }
  },
  "size": 86
}with UTF-8 
2018/05/06 10:36:47,122 [http-nio-8080-exec-4] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/sts_user_data.aes.zip.5f6541f2-4cb6-4fd4-bb50-8f09d6e87339 
2018/05/06 10:36:47,123 [http-nio-8080-exec-4] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/sts_user_data.aes}        
2018/05/06 10:36:47,123 [http-nio-8080-exec-4] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'fb***70'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 10:36:47,126 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:47,126 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 10:36:47,126 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:47,143 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:47,143 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:47,143 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:47,143 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:47,143 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 10:36:47,143 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 10:36:47,165 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:47,165 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:47,165 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:47,165 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:47,165 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'} Objects in cache: 0                   
2018/05/06 10:36:47,165 [http-nio-8080-exec-4] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'5fe98062-87b7-4fae-8493-73122782dfa2'}                                        
2018/05/06 10:36:47,174 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:47,174 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:47,174 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:47,174 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:47,192 [http-nio-8080-exec-8] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} 
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668            
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} -> false 
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} 
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} 
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668            
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} -> false 
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                      
2018/05/06 10:36:47,212 [http-nio-8080-exec-8] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:47,213 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.zip 
2018/05/06 10:36:47,213 [http-nio-8080-exec-8] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638 
2018/05/06 10:36:47,213 [http-nio-8080-exec-8] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                            
2018/05/06 10:36:50,224 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,226 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.zip.eba3fac9-63d3-4a8d-85a7-d3de4e7bcb2c 
2018/05/06 10:36:50,227 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668            
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,228 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,274 [http-nio-8080-exec-8] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8'} 
2018/05/06 10:36:50,274 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,274 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,274 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada.zip 
2018/05/06 10:36:50,274 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,279 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8'} 
2018/05/06 10:36:50,279 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,279 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,279 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada.zip.ad60c509-2109-4d13-8fb2-0fc28a56047d 
2018/05/06 10:36:50,280 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,280 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,280 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,280 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,280 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey.zip.a46e71a6-bebb-4296-a4b1-dcdd2030a051 
2018/05/06 10:36:50,280 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}}      
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey.zip 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,281 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,282 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:50,282 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,282 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,282 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,282 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada.zip 
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,285 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8'} 
2018/05/06 10:36:50,289 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,289 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:50,289 [http-nio-8080-exec-8] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/README.txt}                  
2018/05/06 10:36:50,289 [http-nio-8080-exec-8] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}} 
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}                                   
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/README.txt.zip.afd5c3af-e0a8-4b90-8ac5-2feec6362a9f 
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/README.txt}               
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} 
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [INFO ] [WebSecurityConfig             ] userContext ist c80e7dba-a1d8-4340-81fd-1ded8ce1d668                                                 
2018/05/06 10:36:50,290 [http-nio-8080-exec-8] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:50,305 [http-nio-8080-exec-8] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:50,305 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/mbsUserData.aes}         
2018/05/06 10:36:50,305 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/mbsUserData.aes.zip 
2018/05/06 10:36:50,305 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/mbsUserData.aes}      
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:50,306 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:50,309 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:50,309 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:50,309 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:50,309 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:50,309 [http-nio-8080-exec-8] [INFO ] [BankAccessService             ] [2] accounts for connection [b7e49795-3a79-4474-8bf0-91e68a928a86] created.                          
2018/05/06 10:36:50,310 [http-nio-8080-exec-8] [INFO ] [BankAccessController          ] Bank access created for c80e7dba-a1d8-4340-81fd-1ded8ce1d668                                         
2018/05/06 10:36:50,329 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:50,329 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:50,329 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:50,329 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:50,329 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:50,332 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,335 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:50,341 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:50,341 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:50,341 [http-nio-8080-exec-8] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:50,341 [http-nio-8080-exec-8] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:50,341 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:50,341 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:50,342 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:50,342 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.c68d3ddd-73bf-4e23-afbc-c193e394c3da 
2018/05/06 10:36:50,343 [http-nio-8080-exec-8] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'} Objects in cache: 1                   
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:50,344 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}}      
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey.zip 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home.bucketGuardKey} 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,354 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada.zip 
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,357 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8'} 
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home}} 
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/mbsUserData.aes}             
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}} 
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}                                   
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada"
    }
  },
  "size": 2361
}with UTF-8 
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/mbsUserData.aes.zip.528326ed-78d9-49e3-8d67-063867e55fa1 
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/mbsUserData.aes}          
2018/05/06 10:36:50,361 [http-nio-8080-exec-8] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:50,362 [http-nio-8080-exec-8] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}                                        
2018/05/06 10:36:50,363 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses is:201                                      
2018/05/06 10:36:50,369 [http-nio-8080-exec-9] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:50,389 [http-nio-8080-exec-9] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} 
2018/05/06 10:36:50,389 [http-nio-8080-exec-9] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,389 [http-nio-8080-exec-9] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} -> true 
2018/05/06 10:36:50,389 [http-nio-8080-exec-9] [INFO ] [WebSecurityConfig             ] userContext ist c80e7dba-a1d8-4340-81fd-1ded8ce1d668                                                 
2018/05/06 10:36:50,389 [http-nio-8080-exec-9] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:50,392 [http-nio-8080-exec-9] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***68'}, ReadKeyPassword{'-f***'u'}}} 
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada"
    }
  },
  "size": 2361
}with UTF-8 
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}                                   
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}                      
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,393 [http-nio-8080-exec-9] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada.zip 
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada} 
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668/.keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668.DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8"
    }
  }
}with UTF-8 
2018/05/06 10:36:50,396 [http-nio-8080-exec-9] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D63383065376462612D613164382D343334302D383166642D316465643863653164363638IJLX8'} 
2018/05/06 10:36:50,400 [http-nio-8080-exec-9] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'} from document guard at BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - .keystore/KS-c80e7dba-a1d8-4340-81fd-1ded8ce1d668} 
2018/05/06 10:36:50,400 [http-nio-8080-exec-9] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK4b2c43a2-14df-4d5c-8394-a6b4f5e2aada'}, DocumentKey{45EB....D4F5}}, accessType=WRITE} 
2018/05/06 10:36:50,400 [http-nio-8080-exec-9] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - home/mbsUserData.aes}             
2018/05/06 10:36:50,400 [http-nio-8080-exec-9] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}, ReadKeyPassword{'-f***'u'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:50,404 [http-nio-8080-exec-9] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:50,404 [http-nio-8080-exec-9] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:50,404 [http-nio-8080-exec-9] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:50,404 [http-nio-8080-exec-9] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:50,404 [http-nio-8080-exec-9] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'} Objects in cache: 0                   
2018/05/06 10:36:50,404 [http-nio-8080-exec-9] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}                                        
2018/05/06 10:36:50,404 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1 is:200                                                   
2018/05/06 10:36:50,404 [main] [INFO ] [BankAccessControllerIT        ] user data
{"userEntity":{"id":"c80e7dba-a1d8-4340-81fd-1ded8ce1d668","expireUser":null,"apiUser":[]},"bankAccesses":[{"bankAccess":{"bankName":null,"bankLogin":"m.becker","bankLogin2":null,"bankCode":"19999999","tanTransportTypes":{},"hbciPassportState":null,"externalIdMap":{},"id":"b7e49795-3a79-4474-8bf0-91e68a928a86","userId":"c80e7dba-a1d8-4340-81fd-1ded8ce1d668","pin":null,"pin2":null,"temporary":false,"storePin":false,"storeBookings":false,"categorizeBookings":false,"storeAnalytics":false,"storeAnonymizedBookings":false},"bankAccounts":[{"bankAccount":{"externalIdMap":{"MOCK":"823"},"bankAccountBalance":{"readyHbciBalance":3296.2899999999999636202119290828704833984375,"unreadyHbciBalance":3296.2899999999999636202119290828704833984375,"creditHbciBalance":3296.2899999999999636202119290828704833984375,"availableHbciBalance":3296.2899999999999636202119290828704833984375,"usedHbciBalance":0},"owner":"Matthias Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"3528307800","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE81199999993528307800","syncStatus":null,"lastSync":null,"id":"DE81199999993528307800","bankAccessId":"b7e49795-3a79-4474-8bf0-91e68a928a86","userId":"c80e7dba-a1d8-4340-81fd-1ded8ce1d668"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null},{"bankAccount":{"externalIdMap":{"MOCK":"18"},"bankAccountBalance":{"readyHbciBalance":10701.870000000000800355337560176849365234375,"unreadyHbciBalance":10701.870000000000800355337560176849365234375,"creditHbciBalance":10701.870000000000800355337560176849365234375,"availableHbciBalance":10701.870000000000800355337560176849365234375,"usedHbciBalance":0},"owner":"Familie Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"4076397393","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE12199999994076397393","syncStatus":null,"lastSync":null,"id":"DE12199999994076397393","bankAccessId":"b7e49795-3a79-4474-8bf0-91e68a928a86","userId":"c80e7dba-a1d8-4340-81fd-1ded8ce1d668"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null}],"accountSynchPref":null}],"contracts":[],"accountSynchPref":null} 
2018/05/06 10:36:50,409 [main] [INFO ] [BankAccessControllerIT        ] user id:c80e7dba-a1d8-4340-81fd-1ded8ce1d668                                                         
2018/05/06 10:36:50,409 [main] [INFO ] [BankAccessControllerIT        ] bankLogin:m.becker                                                                                   
2018/05/06 10:36:50,418 [http-nio-8080-exec-10] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:50,437 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} 
2018/05/06 10:36:50,437 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668                    
2018/05/06 10:36:50,437 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-c80e7dba-a1d8-4340-81fd-1ded8ce1d668 - null}} -> true 
2018/05/06 10:36:50,437 [http-nio-8080-exec-10] [INFO ] [WebSecurityConfig             ] userContext ist c80e7dba-a1d8-4340-81fd-1ded8ce1d668                                                 
2018/05/06 10:36:50,437 [http-nio-8080-exec-10] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:50,438 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:50,438 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:50,438 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> false 
2018/05/06 10:36:50,438 [http-nio-8080-exec-10] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'7c***e8'}} 
2018/05/06 10:36:50,438 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:50,438 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:50,439 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> false 
2018/05/06 10:36:50,439 [http-nio-8080-exec-10] [INFO ] [FileSystemExtendedStorageConnection] created folder target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:50,439 [http-nio-8080-exec-10] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:50,439 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.zip 
2018/05/06 10:36:50,439 [http-nio-8080-exec-10] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165 
2018/05/06 10:36:50,439 [http-nio-8080-exec-10] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e                            
2018/05/06 10:36:52,908 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,908 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.zip.d72bfc50-45bb-4a73-bf83-3037c2440eed 
2018/05/06 10:36:52,908 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:52,909 [http-nio-8080-exec-10] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,909 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,909 [http-nio-8080-exec-10] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:52,909 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,909 [http-nio-8080-exec-10] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,910 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,911 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:52,954 [http-nio-8080-exec-10] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH'} 
2018/05/06 10:36:52,954 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,954 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,954 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a.zip 
2018/05/06 10:36:52,954 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,962 [http-nio-8080-exec-10] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH'} 
2018/05/06 10:36:52,962 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,962 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH"
    }
  }
}with UTF-8 
2018/05/06 10:36:52,962 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a.zip.ea9e39b8-edf8-44b3-a594-c9d4bbbe613a 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip.50be8d91-9f85-46de-bc81-a0397623bd06 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'7c***e8'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}}      
2018/05/06 10:36:52,963 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,964 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,965 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:52,967 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,968 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a.zip 
2018/05/06 10:36:52,968 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,968 [http-nio-8080-exec-10] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,968 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,968 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH"
    }
  }
}with UTF-8 
2018/05/06 10:36:52,968 [http-nio-8080-exec-10] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH'} 
2018/05/06 10:36:52,974 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,974 [http-nio-8080-exec-10] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:52,974 [http-nio-8080-exec-10] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/README.txt}                  
2018/05/06 10:36:52,974 [http-nio-8080-exec-10] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}} 
2018/05/06 10:36:52,974 [http-nio-8080-exec-10] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}                                   
2018/05/06 10:36:52,975 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,975 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3f139672-69c3-4271-af6b-fd34b442958a"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/README.txt.zip.852d76c7-aa88-442a-a938-53195ab70e67 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/README.txt}               
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'7c***e8'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'7c***e8'}} 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/sts_user_data.aes}       
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/sts_user_data.aes.zip 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/sts_user_data.aes}    
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/sts_user_data.aes}       
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/sts_user_data.aes.zip 
2018/05/06 10:36:52,976 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/sts_user_data.aes}    
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'7c***e8'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}}      
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,977 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a.zip 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a} 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK3f139672-69c3-4271-af6b-fd34b442958a",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH"
    }
  }
}with UTF-8 
2018/05/06 10:36:52,980 [http-nio-8080-exec-10] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165JBYPH'} 
2018/05/06 10:36:52,985 [http-nio-8080-exec-10] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:52,985 [http-nio-8080-exec-10] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:52,985 [http-nio-8080-exec-10] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/sts_user_data.aes}           
2018/05/06 10:36:52,985 [http-nio-8080-exec-10] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}, DocumentKey{A401....000B}} 
2018/05/06 10:36:52,985 [http-nio-8080-exec-10] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK3f139672-69c3-4271-af6b-fd34b442958a'}                                   
2018/05/06 10:36:52,986 [http-nio-8080-exec-10] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e 
2018/05/06 10:36:52,986 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/sts_user_data.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK3f139672-69c3-4271-af6b-fd34b442958a"
    }
  },
  "size": 86
}with UTF-8 
2018/05/06 10:36:52,986 [http-nio-8080-exec-10] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/authServer/cdecd9d4-efa1-440b-8d78-09ec2a6484a8/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/sts_user_data.aes.zip.d78daf44-134c-44e6-81ec-d50265a22967 
2018/05/06 10:36:52,987 [http-nio-8080-exec-10] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/sts_user_data.aes}        
2018/05/06 10:36:52,987 [http-nio-8080-exec-10] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'7c***e8'}} DocumentFQN{'sts_user_data.aes'} 
2018/05/06 10:36:52,990 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:52,990 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] userContext ist anonymousUser                                                                        
2018/05/06 10:36:52,990 [http-nio-8080-exec-1] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:53,007 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:53,008 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:53,008 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:53,008 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:53,008 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'anonymousUser'} Objects in cache: 0                                          
2018/05/06 10:36:53,008 [http-nio-8080-exec-1] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'anonymousUser'}                                                               
2018/05/06 10:36:53,028 [http-nio-8080-exec-10] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:53,028 [http-nio-8080-exec-10] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:53,028 [http-nio-8080-exec-10] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:53,028 [http-nio-8080-exec-10] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:53,028 [http-nio-8080-exec-10] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'} Objects in cache: 0                   
2018/05/06 10:36:53,028 [http-nio-8080-exec-10] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'c80e7dba-a1d8-4340-81fd-1ded8ce1d668'}                                        
2018/05/06 10:36:53,028 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/token/password-grant?grant_type=password&username=5b85b1b8-0383-4e19-ba22-09959825151e&password=7c4f9bc4-7b5c-45c4-979c-ffcafe54e2e8&audience=multibanking is:200 
2018/05/06 10:36:53,031 [main] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'banks'} cache enabled:true                                                       
2018/05/06 10:36:53,031 [main] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'banks'}                                             
2018/05/06 10:36:53,031 [main] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:53,031 [main] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:53,035 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:53,061 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e            
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> false 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start create user for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory does not existstarget/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e            
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> false 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [FileSystemExtendedStorageConnection] created folder target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                      
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] start create keystore BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.zip 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] keystoreid = 2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165 
2018/05/06 10:36:53,062 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] meaning of keystoreid = .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e                            
2018/05/06 10:36:55,645 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,646 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.zip.6aa7996f-6231-454e-956d-0e7131184a3a 
2018/05/06 10:36:55,646 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
} with charset UTF-8 
2018/05/06 10:36:55,647 [http-nio-8080-exec-3] [INFO ] [KeyStoreServiceImpl           ] finished create keystore BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,647 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory already exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e            
2018/05/06 10:36:55,647 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] start create new guard for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:55,647 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,647 [http-nio-8080-exec-3] [INFO ] [KeyStore2KeySourceHelper      ] get keysource for secret key of BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,647 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,649 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,691 [http-nio-8080-exec-3] [DEBUG] [GuardKeyForSecretKeyHelper    ] Guard created with symmetric KeyID :GuardKeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,691 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,691 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,691 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,691 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,695 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,695 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,695 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,695 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip.0cd7455a-0af3-4cfa-83b1-ce7e74d2dcf5 
2018/05/06 10:36:55,695 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished persist document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,695 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished create document guard for DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,696 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start create plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,696 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip.9275968d-28e3-43d9-99b5-89a7d17ee416 
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
} with charset UTF-8 
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished create plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] finished create new guard for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}}      
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,697 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip 
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,698 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,701 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,705 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/README.txt}                  
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}} 
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                                   
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/README.txt",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0"
    }
  },
  "size": 28
}with UTF-8 
2018/05/06 10:36:55,706 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/README.txt.zip.235aa802-c9e4-4e1e-933e-ac633528f770 
2018/05/06 10:36:55,707 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/README.txt}               
2018/05/06 10:36:55,707 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'README.txt'} 
2018/05/06 10:36:55,707 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished create user for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} 
2018/05/06 10:36:55,707 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] userContext ist 5b85b1b8-0383-4e19-ba22-09959825151e                                                 
2018/05/06 10:36:55,707 [http-nio-8080-exec-3] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}         
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does not exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes.zip 
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}      
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:55,709 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'banks'}                                                                           
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'banks'}                                                              
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [INFO ] [BankAccessService             ] [2] accounts for connection [ddda0422-87bc-4692-a709-03407b126fa2] created.                          
2018/05/06 10:36:55,710 [http-nio-8080-exec-3] [INFO ] [BankAccessController          ] Bank access created for 5b85b1b8-0383-4e19-ba22-09959825151e                                         
2018/05/06 10:36:55,711 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:55,711 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:55,711 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'banks'}                                                  
2018/05/06 10:36:55,711 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'banks'}                                                
2018/05/06 10:36:55,711 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'banks'}                                                                       
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-system - home}}                                    
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                    
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/bp-system/home.bucketGuardKey.zip       
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                 
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}                
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/bp-system/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-system - .keystore/bp-system/home.bucketGuardKey}             
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:55,712 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037.zip 
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-system - .keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037} 
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-system/.keystore/KS-system.DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D73797374656DAJNOR"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,714 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D73797374656DAJNOR'}                              
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'} from document guard at BucketPath{bp-system - .keystore/KS-system} 
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-system - home}} 
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-system - home/banks}                                                     
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}, DocumentKey{2EE6....9A6A}} 
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037'}                                   
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-system                                                  
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-system/home/banks",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK8792bbe2-003c-4ae0-a426-3e2fd9ca9037"
    }
  },
  "size": 3520
}with UTF-8 
2018/05/06 10:36:55,719 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-system/home/banks.zip.0cf05d82-06f1-4932-9db7-f71d56c4d9e6 
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-system - home/banks}            
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-system - home/banks}                                                  
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'system'}, ReadKeyPassword{'sy***23'}} DocumentFQN{'banks'} 
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} Objects in cache: 1                   
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}}      
2018/05/06 10:36:55,720 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,721 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,723 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,724 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,724 [http-nio-8080-exec-3] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,724 [http-nio-8080-exec-3] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,724 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,724 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,724 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,727 [http-nio-8080-exec-3] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,727 [http-nio-8080-exec-3] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:55,727 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}             
2018/05/06 10:36:55,727 [http-nio-8080-exec-3] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}} 
2018/05/06 10:36:55,727 [http-nio-8080-exec-3] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                                   
2018/05/06 10:36:55,728 [http-nio-8080-exec-3] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,728 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0"
    }
  },
  "size": 2361
}with UTF-8 
2018/05/06 10:36:55,728 [http-nio-8080-exec-3] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes.zip.c0db5548-1f18-4656-8beb-a116a36bf801 
2018/05/06 10:36:55,729 [http-nio-8080-exec-3] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}          
2018/05/06 10:36:55,729 [http-nio-8080-exec-3] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,729 [http-nio-8080-exec-3] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}                                        
2018/05/06 10:36:55,730 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses is:201                                      
2018/05/06 10:36:55,734 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:55,754 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:55,754 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,754 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> true 
2018/05/06 10:36:55,754 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] userContext ist 5b85b1b8-0383-4e19-ba22-09959825151e                                                 
2018/05/06 10:36:55,754 [http-nio-8080-exec-5] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:55,755 [http-nio-8080-exec-5] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:55,755 [http-nio-8080-exec-5] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,755 [http-nio-8080-exec-5] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***1e'}, ReadKeyPassword{'sq***&I'}}} 
2018/05/06 10:36:55,755 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,755 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0"
    }
  },
  "size": 2361
}with UTF-8 
2018/05/06 10:36:55,756 [http-nio-8080-exec-5] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                                   
2018/05/06 10:36:55,756 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                      
2018/05/06 10:36:55,756 [http-nio-8080-exec-5] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,756 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,756 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,759 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,760 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,760 [http-nio-8080-exec-5] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,760 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,760 [http-nio-8080-exec-5] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,760 [http-nio-8080-exec-5] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,760 [http-nio-8080-exec-5] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,764 [http-nio-8080-exec-5] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,764 [http-nio-8080-exec-5] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} 
2018/05/06 10:36:55,764 [http-nio-8080-exec-5] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}             
2018/05/06 10:36:55,764 [http-nio-8080-exec-5] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,765 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:55,765 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:55,765 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:55,765 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:55,765 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} Objects in cache: 0                   
2018/05/06 10:36:55,765 [http-nio-8080-exec-5] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}                                        
2018/05/06 10:36:55,765 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1 is:200                                                   
2018/05/06 10:36:55,765 [main] [INFO ] [BankAccessControllerIT        ] user data
{"userEntity":{"id":"5b85b1b8-0383-4e19-ba22-09959825151e","expireUser":null,"apiUser":[]},"bankAccesses":[{"bankAccess":{"bankName":null,"bankLogin":"m.becker","bankLogin2":null,"bankCode":"19999999","tanTransportTypes":{},"hbciPassportState":null,"externalIdMap":{},"id":"ddda0422-87bc-4692-a709-03407b126fa2","userId":"5b85b1b8-0383-4e19-ba22-09959825151e","pin":null,"pin2":null,"temporary":false,"storePin":false,"storeBookings":false,"categorizeBookings":false,"storeAnalytics":false,"storeAnonymizedBookings":false},"bankAccounts":[{"bankAccount":{"externalIdMap":{"MOCK":"823"},"bankAccountBalance":{"readyHbciBalance":3296.2899999999999636202119290828704833984375,"unreadyHbciBalance":3296.2899999999999636202119290828704833984375,"creditHbciBalance":3296.2899999999999636202119290828704833984375,"availableHbciBalance":3296.2899999999999636202119290828704833984375,"usedHbciBalance":0},"owner":"Matthias Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"3528307800","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE81199999993528307800","syncStatus":null,"lastSync":null,"id":"DE81199999993528307800","bankAccessId":"ddda0422-87bc-4692-a709-03407b126fa2","userId":"5b85b1b8-0383-4e19-ba22-09959825151e"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null},{"bankAccount":{"externalIdMap":{"MOCK":"18"},"bankAccountBalance":{"readyHbciBalance":10701.870000000000800355337560176849365234375,"unreadyHbciBalance":10701.870000000000800355337560176849365234375,"creditHbciBalance":10701.870000000000800355337560176849365234375,"availableHbciBalance":10701.870000000000800355337560176849365234375,"usedHbciBalance":0},"owner":"Familie Becker","country":"DE","blz":"19999999","bankName":"Mock Demo Bank1","accountNumber":"4076397393","type":"GIRO","currency":"EUR","name":null,"bic":"MOCKADDE001","iban":"DE12199999994076397393","syncStatus":null,"lastSync":null,"id":"DE12199999994076397393","bankAccessId":"ddda0422-87bc-4692-a709-03407b126fa2","userId":"5b85b1b8-0383-4e19-ba22-09959825151e"},"synchResult":{"id":null,"bookingFiles":{},"syncStatus":null,"statusTime":null,"lastSynch":null},"accountSynchPref":null,"standingOrders":null}],"accountSynchPref":null}],"contracts":[],"accountSynchPref":null} 
2018/05/06 10:36:55,766 [main] [INFO ] [BankAccessControllerIT        ] user id:5b85b1b8-0383-4e19-ba22-09959825151e                                                         
2018/05/06 10:36:55,766 [main] [INFO ] [BankAccessControllerIT        ] bankLogin:m.becker                                                                                   
2018/05/06 10:36:55,767 [main] [INFO ] [BankAccessControllerIT        ] deleteURI:http://localhost:8080/api/v1/bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2             
2018/05/06 10:36:55,767 [main] [INFO ] [BankAccessControllerIT        ] ----------------------- first delete -------------------------                                       
2018/05/06 10:36:55,771 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:55,791 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:55,791 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,791 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> true 
2018/05/06 10:36:55,791 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] userContext ist 5b85b1b8-0383-4e19-ba22-09959825151e                                                 
2018/05/06 10:36:55,791 [http-nio-8080-exec-6] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}         
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes.zip 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}      
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***1e'}, ReadKeyPassword{'sq***&I'}}} 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0"
    }
  },
  "size": 2361
}with UTF-8 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                                   
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                      
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,794 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,797 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,801 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,801 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} 
2018/05/06 10:36:55,801 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}             
2018/05/06 10:36:55,801 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] store: DocumentFQN{'mbsUserData.aes'} cache enabled:true                                             
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] No flush, will store on cache flush DocumentFQN{'mbsUserData.aes'}                                   
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] loaded from cache: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2'}            
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2'}         
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start delete plain directory BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2}} 
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] remove directory /Users/fpo/dev/multibanking-develop/multibanking-rest/target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2 
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished delete plain file BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2}} 
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] clearing Cached DocumentDirectoryFQN{'bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2'}            
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [DEBUG] [UserContextCache              ] Clearing cache for DocumentDirectoryFQN{'bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2'}         
2018/05/06 10:36:55,817 [http-nio-8080-exec-6] [INFO ] [BankAccessController          ] Bank Access [ddda0422-87bc-4692-a709-03407b126fa2] deleted.                                          
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} Objects in cache: 1                   
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : dirty: DocumentFQN{'mbsUserData.aes'}                                        
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Cache entry pre flush : present: DocumentFQN{'mbsUserData.aes'}                                      
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] flushing: DocumentFQN{'mbsUserData.aes'}                                                             
2018/05/06 10:36:55,818 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] start storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [DEBUG] [DocumentSafeServiceImpl       ] search key for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}}      
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey.zip 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey",
  "userMetaData": {
    "map": {}
  }
}with UTF-8 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished read plain file BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home.bucketGuardKey} 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,819 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,822 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [DEBUG] [DocumentSafeServiceImpl       ] found DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} for BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home}} 
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] start persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}             
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [DEBUG] [DocumentPersistenceServiceImpl] Document wird verschlüsselt mit DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}} 
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [INFO ] [EncryptedPersistenceServiceImpl] ENCRYPT BYTES WITH KeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                                   
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] WRITE metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [DEBUG] [ZipFileHelper                 ] write temporary zip file to target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes.zip.19e12b87-e125-41c9-8394-07502639ebb3 
2018/05/06 10:36:55,826 [http-nio-8080-exec-6] [INFO ] [ZipFileHelper                 ] ACHTUNG, file existiert bereits, wird nun neu verlinkt BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes} 
2018/05/06 10:36:55,827 [http-nio-8080-exec-6] [INFO ] [DocumentPersistenceServiceImpl] finished persist BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}          
2018/05/06 10:36:55,827 [http-nio-8080-exec-6] [INFO ] [DocumentSafeServiceImpl       ] finished storeDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,827 [http-nio-8080-exec-6] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}                                        
2018/05/06 10:36:55,828 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2 is:204 
2018/05/06 10:36:55,828 [main] [INFO ] [BankAccessControllerIT        ] ----------------------- second delete -------------------------                                      
2018/05/06 10:36:55,831 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Enter getUserContext                                          
2018/05/06 10:36:55,851 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} 
2018/05/06 10:36:55,851 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished check bucket exsits BucketDirectory{path=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - null}} -> true 
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] userContext ist 5b85b1b8-0383-4e19-ba22-09959825151e                                                 
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [INFO ] [WebSecurityConfig             ] ************************************** Exit getUserContext                                           
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] load: DocumentFQN{'mbsUserData.aes'}                                                                 
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [WARN ] [DocumentSafeServiceImpl       ] ACHTUNG, ES WIRD NICHT GEPRÜFT, OB DER BENUTZER UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} AUCH DAS KORREKTE PASSWORD BENUTZT 
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}         
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes.zip 
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}      
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] loading from file: DocumentFQN{'mbsUserData.aes'}                                                    
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [DEBUG] [DocumentBasedService          ] loadDocument DocumentFQN{'mbsUserData.aes'}                                                          
2018/05/06 10:36:55,852 [http-nio-8080-exec-7] [INFO ] [DocumentSafeServiceImpl       ] start readDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [INFO ] [DocumentPersistenceServiceImpl] start load BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes} KeyStoreAccess{keyStorePath=BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e}, keyStoreAuth=KeyStoreAuth{ReadStorePassword{'Re***1e'}, ReadKeyPassword{'sq***&I'}}} 
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/home/mbsUserData.aes",
  "userMetaData": {
    "map": {
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.AESEncryptionStreamServiceImpl",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0"
    }
  },
  "size": 148
}with UTF-8 
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                                   
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardBasedKeySourceImpl] try to load KEY WITH ID DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}                      
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [INFO ] [DocumentGuardServiceImpl      ] start load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,853 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e",
  "userMetaData": {
    "map": {
      "INTERNAL_BLOB_STORE_KEYSTORE_PERSISTENCE_TYPE_KEY": "UBER"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,856 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] start file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,856 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] file does exist target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0.zip 
2018/05/06 10:36:55,856 [http-nio-8080-exec-7] [INFO ] [BucketServiceImpl             ] finished file exists BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,856 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardServiceImpl      ] loadDocumentKey for BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0} 
2018/05/06 10:36:55,856 [http-nio-8080-exec-7] [DEBUG] [FileSystemExtendedStorageConnection] directory exists:target/filesystemstorage/bp-5b85b1b8-0383-4e19-ba22-09959825151e                    
2018/05/06 10:36:55,857 [http-nio-8080-exec-7] [DEBUG] [ZipFileHelper                 ] READ metadata string {
  "storageType": "BLOB",
  "name": "bp-5b85b1b8-0383-4e19-ba22-09959825151e/.keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e.DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0",
  "userMetaData": {
    "map": {
      "KeyStoreType": "UBER",
      "serilizer_id": "dgs01",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_SERVICE": "class org.adorsys.encobject.service.impl.JWEncryptionStreamServiceImpl",
      "AccessType": "WRITE",
      "EncryptedPersistenceServiceImpl.ENCRYPTION_KEY_ID": "2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO"
    }
  }
}with UTF-8 
2018/05/06 10:36:55,857 [http-nio-8080-exec-7] [INFO ] [EncryptedPersistenceServiceImpl] DECRYPT BYTES WITH KeyID{'2E6B657973746F72652F4B532D35623835623162382D303338332D346531392D626132322D303939353938323531353165GXXJO'} 
2018/05/06 10:36:55,861 [http-nio-8080-exec-7] [INFO ] [DocumentGuardServiceImpl      ] finished load DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'} from document guard at BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - .keystore/KS-5b85b1b8-0383-4e19-ba22-09959825151e} 
2018/05/06 10:36:55,861 [http-nio-8080-exec-7] [DEBUG] [DocumentGuardBasedKeySourceImpl] LOADED DOCUMENT KEY WITH ID DocumentKeyIDWithKeyAndAccessType{documentKeyIDWithKey=DocumentKeyIDWithKey{DocumentKeyID{'DK614f3140-5c94-4e4f-9c9a-e9563ed7b4b0'}, DocumentKey{1B54....9F20}}, accessType=WRITE} 
2018/05/06 10:36:55,861 [http-nio-8080-exec-7] [INFO ] [DocumentPersistenceServiceImpl] finished load BucketPath{bp-5b85b1b8-0383-4e19-ba22-09959825151e - home/mbsUserData.aes}             
2018/05/06 10:36:55,861 [http-nio-8080-exec-7] [INFO ] [DocumentSafeServiceImpl       ] finished readDocument for UserIDAuth{UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}, ReadKeyPassword{'sq***&I'}} DocumentFQN{'mbsUserData.aes'} 
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'system'} Objects in cache: 1                                                 
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'banks'}                                                          
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'banks'}                                  
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'system'}                                                                      
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushing cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'} Objects in cache: 1                   
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush: DocumentFQN{'mbsUserData.aes'}                                                
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Cache entry pre flush : clean. No file write : DocumentFQN{'mbsUserData.aes'}                        
2018/05/06 10:36:55,862 [http-nio-8080-exec-7] [DEBUG] [CacheBasedService             ] Flushed cache: UserID{'5b85b1b8-0383-4e19-ba22-09959825151e'}                                        
2018/05/06 10:36:55,863 [main] [INFO ] [BaseControllerIT              ] statusCode for http://localhost:8080/api/v1/bankaccesses/ddda0422-87bc-4692-a709-03407b126fa2 is:410 
2018/05/06 10:36:55,873 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.base.BaseControllerUnitTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:55,894 [main] [INFO ] [WebMvcTestContextBootstrapper ] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:55,895 [main] [INFO ] [WebMvcTestContextBootstrapper ] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6bca3b27, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@25bd8eab, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@15974f4e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@38911759, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2b8106f, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@4b391e45, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@647bd553, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@54602d5a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@161974d1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@15d18b61, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2fba15c5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7ae5f795] 
2018/05/06 10:36:55,895 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:55,930 [main] [INFO ] [BankAccessControllerTest      ] Starting BankAccessControllerTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:36:55,930 [main] [DEBUG] [BankAccessControllerTest      ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:36:55,931 [main] [INFO ] [BankAccessControllerTest      ] No active profile set, falling back to default profiles: default                                     
2018/05/06 10:36:55,932 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@5c4e86e7: startup date [Sun May 06 10:36:55 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:56,104 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:56,186 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@5c4e86e7: startup date [Sun May 06 10:36:55 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:56,194 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:36:56,195 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:56,206 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:56,206 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:56,305 [main] [INFO ] [SpringBootMockServletContext  ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,305 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,310 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 5 ms                                                
2018/05/06 10:36:56,319 [main] [INFO ] [BankAccessControllerTest      ] Started BankAccessControllerTest in 0.409 seconds (JVM running for 88.575)                           
2018/05/06 10:36:56,331 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:36:56,331 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:36:56,338 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@364c4ba9 
2018/05/06 10:36:56,344 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,344 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,346 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 1 ms                                                
2018/05/06 10:36:56,368 [main] [INFO ] [BankAccessController          ] Bank access created for a7d5ee7d-6609-4362-89aa-5c19280d3d44                                         
2018/05/06 10:36:56,381 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:36:56,381 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:36:56,398 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4690cb47 
2018/05/06 10:36:56,400 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,400 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,401 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 1 ms                                                
2018/05/06 10:36:56,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:36:56,415 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:36:56,425 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@165634aa 
2018/05/06 10:36:56,428 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,428 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,428 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:56,430 [main] [INFO ] [BankAccessController          ] Bank Access [ce7c1142-1820-4471-a4d8-a58eb840c22e] deleted.                                          
2018/05/06 10:36:56,439 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses],methods=[POST],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.createBankaccess(de.adorsys.multibanking.domain.BankAccessEntity) 
2018/05/06 10:36:56,440 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}],methods=[DELETE]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccessController.deleteBankAccess(java.lang.String) 
2018/05/06 10:36:56,447 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6be7a271 
2018/05/06 10:36:56,449 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,449 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,449 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:56,455 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.BankAccountControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:56,455 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.base.BaseControllerUnitTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:56,461 [main] [INFO ] [WebMvcTestContextBootstrapper ] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:56,463 [main] [INFO ] [WebMvcTestContextBootstrapper ] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@651e3cc9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@45dce9f7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@9da20f1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4a52178, org.springframework.test.context.support.DirtiesContextTestExecutionListener@10c9bd51, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@32787dee, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@6afd0ef8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@47fe4c3e, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1a8042a5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6be6cb16, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@69ee825c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5c44bce3] 
2018/05/06 10:36:56,463 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:56,489 [main] [INFO ] [BankAccountControllerTest     ] Starting BankAccountControllerTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:36:56,489 [main] [DEBUG] [BankAccountControllerTest     ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:36:56,489 [main] [INFO ] [BankAccountControllerTest     ] No active profile set, falling back to default profiles: default                                     
2018/05/06 10:36:56,491 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4d8458a1: startup date [Sun May 06 10:36:56 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:56,677 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:56,755 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4d8458a1: startup date [Sun May 06 10:36:56 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:56,768 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:36:56,769 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:56,779 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:56,779 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:56,864 [main] [INFO ] [SpringBootMockServletContext  ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,864 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,870 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 6 ms                                                
2018/05/06 10:36:56,876 [main] [INFO ] [BankAccountControllerTest     ] Started BankAccountControllerTest in 0.41 seconds (JVM running for 89.132)                           
2018/05/06 10:36:56,881 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:56,887 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@4528a871 
2018/05/06 10:36:56,889 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,889 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,889 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:56,895 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:56,908 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@524250ec 
2018/05/06 10:36:56,909 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,909 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,909 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:56,916 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/sync],methods=[PUT]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.account.BankAccountController.syncBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:56,924 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@2057d8ec 
2018/05/06 10:36:56,925 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:56,925 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:56,925 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:56,931 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.base.BaseControllerUnitTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:56,935 [main] [INFO ] [WebMvcTestContextBootstrapper ] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:56,938 [main] [INFO ] [WebMvcTestContextBootstrapper ] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6bcf2780, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4bb4adf7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@11544ddd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@38e46ea, org.springframework.test.context.support.DirtiesContextTestExecutionListener@116f823c, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@7f5a5ef3, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@4c53ce60, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3d1b6816, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@508863eb, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7d8802cf, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2f7af3d0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@494775f1] 
2018/05/06 10:36:56,939 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:56,966 [main] [INFO ] [BankControllerTest            ] Starting BankControllerTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:36:56,966 [main] [DEBUG] [BankControllerTest            ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:36:56,966 [main] [INFO ] [BankControllerTest            ] No active profile set, falling back to default profiles: default                                     
2018/05/06 10:36:56,969 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@4746b319: startup date [Sun May 06 10:36:56 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:57,122 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:57,196 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@4746b319: startup date [Sun May 06 10:36:56 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:57,208 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:36:57,208 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:57,220 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:57,220 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:57,312 [main] [INFO ] [SpringBootMockServletContext  ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,312 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,317 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 5 ms                                                
2018/05/06 10:36:57,325 [main] [INFO ] [BankControllerTest            ] Started BankControllerTest in 0.38 seconds (JVM running for 89.581)                                  
2018/05/06 10:36:57,330 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bank],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.banks.BankController.loadBanks() 
2018/05/06 10:36:57,336 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@473048f9 
2018/05/06 10:36:57,338 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,338 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,338 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:57,369 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.base.BaseControllerUnitTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:57,375 [main] [INFO ] [WebMvcTestContextBootstrapper ] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:57,377 [main] [INFO ] [WebMvcTestContextBootstrapper ] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@1ba84d52, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@42018e32, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@42bd4a4c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@679cdfc3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e07ccbf, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@70b9a553, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@58fe7e22, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@591dd039, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@597f9d91, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@64d128d0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4f755506, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78ded8c9] 
2018/05/06 10:36:57,377 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:57,397 [main] [INFO ] [BookingControllerTest         ] Starting BookingControllerTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:36:57,397 [main] [DEBUG] [BookingControllerTest         ] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:36:57,398 [main] [INFO ] [BookingControllerTest         ] No active profile set, falling back to default profiles: default                                     
2018/05/06 10:36:57,399 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@240fe338: startup date [Sun May 06 10:36:57 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:57,531 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:57,624 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@240fe338: startup date [Sun May 06 10:36:57 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:57,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:36:57,632 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:57,643 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:57,643 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:57,728 [main] [INFO ] [SpringBootMockServletContext  ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,728 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,734 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 6 ms                                                
2018/05/06 10:36:57,740 [main] [INFO ] [BookingControllerTest         ] Started BookingControllerTest in 0.359 seconds (JVM running for 89.996)                              
2018/05/06 10:36:57,745 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:57,751 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@6ba3eee9 
2018/05/06 10:36:57,752 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,752 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,752 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:57,857 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:57,864 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@26169be3 
2018/05/06 10:36:57,866 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,866 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,866 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:57,914 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:57,923 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@746cb25d 
2018/05/06 10:36:57,924 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,924 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,924 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:57,973 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/bankaccesses/{accessId}/accounts/{accountId}/bookings],methods=[GET],params=[period],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<org.springframework.core.io.ByteArrayResource> de.adorsys.multibanking.web.account.BookingController.getBookings(java.lang.String,java.lang.String,java.lang.String) 
2018/05/06 10:36:57,981 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@68fe866b 
2018/05/06 10:36:57,982 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:57,982 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:57,982 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:58,022 [main] [INFO ] [AbstractContextLoader         ] Could not detect default resource locations for test class [de.adorsys.multibanking.web.base.BaseControllerUnitTest]: no resource found for suffixes {-context.xml, Context.groovy}. 
2018/05/06 10:36:58,026 [main] [INFO ] [WebMvcTestContextBootstrapper ] Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener] 
2018/05/06 10:36:58,027 [main] [INFO ] [WebMvcTestContextBootstrapper ] Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@56f1db5f, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5f05cd7e, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@11e8e183, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@c6b08a5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@54980154, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@25874884, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@7335414e, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@274f51ad, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@33c976b1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2c95cb24, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@75f3c0c9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@28ec35e3] 
2018/05/06 10:36:58,028 [main] [ERROR] [TestConstants                 ] can not turn off Enc Policy                                                                          
2018/05/06 10:36:58,047 [main] [INFO ] [UserAgentCredentialsControllerTest] Starting UserAgentCredentialsControllerTest on Franciss-MacBook-Pro.local with PID 23312 (started by fpo in /Users/fpo/dev/multibanking-develop/multibanking-rest) 
2018/05/06 10:36:58,047 [main] [DEBUG] [UserAgentCredentialsControllerTest] Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE                                       
2018/05/06 10:36:58,047 [main] [INFO ] [UserAgentCredentialsControllerTest] No active profile set, falling back to default profiles: default                                     
2018/05/06 10:36:58,049 [main] [INFO ] [GenericWebApplicationContext  ] Refreshing org.springframework.web.context.support.GenericWebApplicationContext@78543f0d: startup date [Sun May 06 10:36:58 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,202 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:58,283 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@78543f0d: startup date [Sun May 06 10:36:58 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,291 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest) 
2018/05/06 10:36:58,291 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) 
2018/05/06 10:36:58,301 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:58,301 [main] [INFO ] [SimpleUrlHandlerMapping       ] Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler] 
2018/05/06 10:36:58,387 [main] [INFO ] [SpringBootMockServletContext  ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:58,387 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:58,392 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 5 ms                                                
2018/05/06 10:36:58,397 [main] [INFO ] [UserAgentCredentialsControllerTest] Started UserAgentCredentialsControllerTest in 0.365 seconds (JVM running for 90.654)                 
2018/05/06 10:36:58,403 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[GET],produces=[application/json;charset=UTF-8]}" onto public org.springframework.http.ResponseEntity<de.adorsys.multibanking.domain.UserAgentCredentials> de.adorsys.multibanking.web.user.UserAgentCredentialsController.getUserAgentCredentials(java.lang.String) 
2018/05/06 10:36:58,403 [main] [INFO ] [RequestMappingHandlerMapping  ] Mapped "{[/api/v1/useragents/{userAgentId}],methods=[PUT],consumes=[application/json;charset=UTF-8]}" onto public org.springframework.http.HttpEntity<java.lang.Void> de.adorsys.multibanking.web.user.UserAgentCredentialsController.postUserAgentCredentials(java.lang.String,de.adorsys.multibanking.domain.UserAgentCredentials) 
2018/05/06 10:36:58,409 [main] [INFO ] [RequestMappingHandlerAdapter  ] Looking for @ControllerAdvice: org.springframework.test.web.servlet.setup.StubWebApplicationContext@39da0e47 
2018/05/06 10:36:58,410 [main] [INFO ] [MockServletContext            ] Initializing Spring FrameworkServlet ''                                                              
2018/05/06 10:36:58,410 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization started                                                          
2018/05/06 10:36:58,410 [main] [INFO ] [TestDispatcherServlet         ] FrameworkServlet '': initialization completed in 0 ms                                                
2018/05/06 10:36:58,426 [Thread-17] [INFO ] [GenericApplicationContext     ] Closing org.springframework.context.support.GenericApplicationContext@31b2c451: startup date [Sun May 06 10:36:40 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,427 [Thread-25] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@240fe338: startup date [Sun May 06 10:36:57 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,429 [Thread-19] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@5c4e86e7: startup date [Sun May 06 10:36:55 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,429 [Thread-6] [INFO ] [AnnotationConfigServletWebServerApplicationContext] Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3b2c0e88: startup date [Sun May 06 10:35:29 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,429 [Thread-21] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@4d8458a1: startup date [Sun May 06 10:36:56 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,429 [Thread-23] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@4746b319: startup date [Sun May 06 10:36:56 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,429 [Thread-9] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@4853f592: startup date [Sun May 06 10:35:42 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,430 [Thread-14] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@38447073: startup date [Sun May 06 10:36:23 CEST 2018]; root of context hierarchy 
2018/05/06 10:36:58,431 [Thread-27] [INFO ] [GenericWebApplicationContext  ] Closing org.springframework.web.context.support.GenericWebApplicationContext@78543f0d: startup date [Sun May 06 10:36:58 CEST 2018]; root of context hierarchy 
