/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.64.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.BadCredentialsError;
import io.swagger.client.model.ChangeClientCredentialsParams;
import io.swagger.client.model.ErrorMessage;
import io.swagger.client.model.IbanRuleList;
import io.swagger.client.model.IbanRulesParams;
import io.swagger.client.model.IdentifierList;
import io.swagger.client.model.IdentifiersParams;
import io.swagger.client.model.KeywordRuleList;
import io.swagger.client.model.KeywordRulesParams;
import io.swagger.client.model.PageableIbanRuleList;
import io.swagger.client.model.PageableKeywordRuleList;
import io.swagger.client.model.PageableUserInfoList;
import io.swagger.client.model.UserIdentifiersList;
import io.swagger.client.model.UserIdentifiersParams;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MandatorAdministrationApi
 */
@Ignore
public class MandatorAdministrationApiTest {

    private final MandatorAdministrationApi api = new MandatorAdministrationApi();

    
    /**
     * Change client credentials
     *
     * Change the client_secret for any of your clients, including the mandator admin client. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. &lt;br/&gt;&lt;br/&gt;NOTES:&lt;br/&gt;&amp;bull; When you change a client&#39;s secret, then all of its existing access tokens will be revoked. User access tokens are not affected.&lt;br/&gt;&amp;bull; finAPI is storing client secrets with a one-way encryption. A lost client secret can NOT be recovered.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void changeClientCredentialsTest() throws ApiException {
        ChangeClientCredentialsParams body = null;
        api.changeClientCredentials(body);

        // TODO: test validations
    }
    
    /**
     * Create IBAN rules
     *
     * This service can be used to define IBAN rules for finAPI&#39;s transaction categorization system. The transaction categorization is run automatically whenever new transactions are imported, as well as when you call the services &#39;Check categorization&#39; or &#39;Trigger categorization&#39;. &lt;br/&gt;&lt;br/&gt;An IBAN rule maps an IBAN to a certain category. finAPI&#39;s categorization system will pick the category as a candidate for any transaction whose counterpart&#39;s account matches the IBAN. It is not guaranteed though that this candidate will actually be applied, as there could be other categorization rules that have higher priority or that are an even better match for the transaction.&lt;br/&gt;&lt;br/&gt;Note that the rules that you define here will be applied to all of your users. They have higher priority than finAPI&#39;s default categorization rules, but lower priority than user-specific rules (User-specific rules are created implicitly whenever a category is manually assigned to a transaction via the PATCH /transactions services). IBAN rules have a higher priority than keyword rules (see the &#39;Create keyword rules&#39; service).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIbanRulesTest() throws ApiException {
        IbanRulesParams body = null;
        IbanRuleList response = api.createIbanRules(body);

        // TODO: test validations
    }
    
    /**
     * Create keyword rules
     *
     * This service can be used to define keyword rules for finAPI&#39;s transaction categorization system. The transaction categorization is run automatically whenever new transactions are imported, as well as when you call the services &#39;Check categorization&#39; or &#39;Trigger categorization&#39;. &lt;br/&gt;&lt;br/&gt;A keyword rule maps a set of keywords to a certain category. finAPI&#39;s categorization system will pick the category as a candidate for any transaction that contains at least one of the defined keywords in its purpose or counterpart information. It is not guaranteed though that this candidate will actually be applied, as there could be other categorization rules that have higher priority or that are an even better match for the transaction. If there are multiple keyword rules that match a transaction, finAPI will pick the one with the highest count of matched keywords.&lt;br/&gt;&lt;br/&gt;Note that the rules that you define here will be applied to all of your users. They have higher priority than finAPI&#39;s default categorization rules, but lower priority than user-specific rules (User-specific rules are created implicitly whenever a category is manually assigned to a transaction via the PATCH /transactions services). Keyword rules have a lower priority than IBAN rules (see the &#39;Create IBAN rules&#39; service).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createKeywordRulesTest() throws ApiException {
        KeywordRulesParams body = null;
        KeywordRuleList response = api.createKeywordRules(body);

        // TODO: test validations
    }
    
    /**
     * Delete IBAN rules
     *
     * Delete one or multiple IBAN rules that you have previously created via the &#39;Create IBAN rules&#39; service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIbanRulesTest() throws ApiException {
        IdentifiersParams body = null;
        IdentifierList response = api.deleteIbanRules(body);

        // TODO: test validations
    }
    
    /**
     * Delete keyword rules
     *
     * Delete one or multiple keyword rules that you have previously created via the &#39;Create keyword rules&#39; service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteKeywordRulesTest() throws ApiException {
        IdentifiersParams body = null;
        IdentifierList response = api.deleteKeywordRules(body);

        // TODO: test validations
    }
    
    /**
     * Delete users
     *
     * Delete one or several users, which are specified by a given list of identifiers. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. &lt;br/&gt;&lt;br/&gt;&lt;b&gt;NOTE&lt;/b&gt;: finAPI may fail to delete one (or several, or all) of the specified users. A user cannot get deleted when his data is currently locked by an internal process (for instance, update of a bank connection or transactions categorization). The response contains the identifiers of all users that could not get deleted, and all users that could get deleted, separated in two lists. The mandator admin client can retry the request at a later time for the users who could not get deleted.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUsersTest() throws ApiException {
        UserIdentifiersParams body = null;
        UserIdentifiersList response = api.deleteUsers(body);

        // TODO: test validations
    }
    
    /**
     * Get IBAN rules
     *
     * Returns all IBAN-based categorization rules that you have defined for your users via the &#39;Create IBAN rules&#39; service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIbanRuleListTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        PageableIbanRuleList response = api.getIbanRuleList(page, perPage);

        // TODO: test validations
    }
    
    /**
     * Get keyword rules
     *
     * Returns all keyword-based categorization rules that you have defined for your users via the &#39;Create keyword rules&#39; service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getKeywordRuleListTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        PageableKeywordRuleList response = api.getKeywordRuleList(page, perPage);

        // TODO: test validations
    }
    
    /**
     * Get user list
     *
     * &lt;p&gt;Get a list of the users of the mandator that is authorized by the access_token. Must pass the &lt;a href&#x3D;&#39;https://finapi.zendesk.com/hc/en-us/articles/115003661827-Difference-between-app-clients-and-mandator-admin-client&#39; target&#x3D;&#39;_blank&#39;&gt;mandator admin client&lt;/a&gt;&#39;s access_token. You can set optional search criteria to get only those users that you are interested in. If you do not specify any search criteria, then this service functions as a &#39;get all&#39; service.&lt;/p&gt;&lt;p&gt;Note that the original user id is no longer available in finAPI once a user has been deleted. Because of this, the userId of deleted users will be a distorted version of the original userId. For example, if the deleted user&#39;s id was originally &#39;user&#39;, then this service will return &#39;uXXr&#39; as the userId.&lt;/p&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserListTest() throws ApiException {
        String minRegistrationDate = null;
        String maxRegistrationDate = null;
        String minDeletionDate = null;
        String maxDeletionDate = null;
        String minLastActiveDate = null;
        String maxLastActiveDate = null;
        Boolean includeMonthlyStats = null;
        String monthlyStatsStartDate = null;
        String monthlyStatsEndDate = null;
        Integer minBankConnectionCountInMonthlyStats = null;
        Boolean isDeleted = null;
        Integer page = null;
        Integer perPage = null;
        List<String> order = null;
        PageableUserInfoList response = api.getUserList(minRegistrationDate, maxRegistrationDate, minDeletionDate, maxDeletionDate, minLastActiveDate, maxLastActiveDate, includeMonthlyStats, monthlyStatsStartDate, monthlyStatsEndDate, minBankConnectionCountInMonthlyStats, isDeleted, page, perPage, order);

        // TODO: test validations
    }
    
}
