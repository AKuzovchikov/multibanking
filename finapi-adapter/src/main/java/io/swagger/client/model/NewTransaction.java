/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.64.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * Mock transaction data
 */
@ApiModel(description = "Mock transaction data")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-02-05T12:19:21.458Z")
public class NewTransaction {
  @SerializedName("amount")
  private BigDecimal amount = null;

  @SerializedName("purpose")
  private String purpose = null;

  @SerializedName("counterpart")
  private String counterpart = null;

  @SerializedName("counterpartIban")
  private String counterpartIban = null;

  @SerializedName("counterpartBlz")
  private String counterpartBlz = null;

  @SerializedName("counterpartBic")
  private String counterpartBic = null;

  @SerializedName("counterpartAccountNumber")
  private String counterpartAccountNumber = null;

  @SerializedName("bookingDate")
  private String bookingDate = null;

  @SerializedName("valueDate")
  private String valueDate = null;

  public NewTransaction amount(BigDecimal amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Amount. Required.
   * @return amount
  **/
  @ApiModelProperty(example = "-99.99", required = true, value = "Amount. Required.")
  public BigDecimal getAmount() {
    return amount;
  }

  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }

  public NewTransaction purpose(String purpose) {
    this.purpose = purpose;
    return this;
  }

   /**
   * Purpose. Any symbols are allowed. Maximum length is 2000. Optional. Default value: null.
   * @return purpose
  **/
  @ApiModelProperty(example = "Restaurantbesuch", value = "Purpose. Any symbols are allowed. Maximum length is 2000. Optional. Default value: null.")
  public String getPurpose() {
    return purpose;
  }

  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  public NewTransaction counterpart(String counterpart) {
    this.counterpart = counterpart;
    return this;
  }

   /**
   * Counterpart. Any symbols are allowed. Maximum length is 80. Optional. Default value: null.
   * @return counterpart
  **/
  @ApiModelProperty(example = "Bar Centrale", value = "Counterpart. Any symbols are allowed. Maximum length is 80. Optional. Default value: null.")
  public String getCounterpart() {
    return counterpart;
  }

  public void setCounterpart(String counterpart) {
    this.counterpart = counterpart;
  }

  public NewTransaction counterpartIban(String counterpartIban) {
    this.counterpartIban = counterpartIban;
    return this;
  }

   /**
   * Counterpart IBAN. Optional. Default value: null.
   * @return counterpartIban
  **/
  @ApiModelProperty(example = "DE13700800000061110500", value = "Counterpart IBAN. Optional. Default value: null.")
  public String getCounterpartIban() {
    return counterpartIban;
  }

  public void setCounterpartIban(String counterpartIban) {
    this.counterpartIban = counterpartIban;
  }

  public NewTransaction counterpartBlz(String counterpartBlz) {
    this.counterpartBlz = counterpartBlz;
    return this;
  }

   /**
   * Counterpart BLZ. Optional. Default value: null.
   * @return counterpartBlz
  **/
  @ApiModelProperty(example = "70080000", value = "Counterpart BLZ. Optional. Default value: null.")
  public String getCounterpartBlz() {
    return counterpartBlz;
  }

  public void setCounterpartBlz(String counterpartBlz) {
    this.counterpartBlz = counterpartBlz;
  }

  public NewTransaction counterpartBic(String counterpartBic) {
    this.counterpartBic = counterpartBic;
    return this;
  }

   /**
   * Counterpart BIC. Optional. Default value: null.
   * @return counterpartBic
  **/
  @ApiModelProperty(example = "DRESDEFF700", value = "Counterpart BIC. Optional. Default value: null.")
  public String getCounterpartBic() {
    return counterpartBic;
  }

  public void setCounterpartBic(String counterpartBic) {
    this.counterpartBic = counterpartBic;
  }

  public NewTransaction counterpartAccountNumber(String counterpartAccountNumber) {
    this.counterpartAccountNumber = counterpartAccountNumber;
    return this;
  }

   /**
   * Counterpart account number. Maximum length is 34. Optional. Default value: null.
   * @return counterpartAccountNumber
  **/
  @ApiModelProperty(example = "61110500", value = "Counterpart account number. Maximum length is 34. Optional. Default value: null.")
  public String getCounterpartAccountNumber() {
    return counterpartAccountNumber;
  }

  public void setCounterpartAccountNumber(String counterpartAccountNumber) {
    this.counterpartAccountNumber = counterpartAccountNumber;
  }

  public NewTransaction bookingDate(String bookingDate) {
    this.bookingDate = bookingDate;
    return this;
  }

   /**
   * Booking date in the format &#39;YYYY-MM-DD&#39;.&lt;br/&gt;&lt;br/&gt;If the date lies back more than 10 days from the booking date of the latest transaction that currently exists in the account, then this transaction will be ignored and not imported. If the date depicts a date in the future, then finAPI will deal with it the same way as it does with real transactions during a real update (see fields &#39;bankBookingDate&#39; and &#39;finapiBookingDate&#39; in the Transaction Resource for explanation).&lt;br/&gt;&lt;br/&gt;This field is optional, default value is the current date.
   * @return bookingDate
  **/
  @ApiModelProperty(example = "2018-01-01", value = "Booking date in the format 'YYYY-MM-DD'.<br/><br/>If the date lies back more than 10 days from the booking date of the latest transaction that currently exists in the account, then this transaction will be ignored and not imported. If the date depicts a date in the future, then finAPI will deal with it the same way as it does with real transactions during a real update (see fields 'bankBookingDate' and 'finapiBookingDate' in the Transaction Resource for explanation).<br/><br/>This field is optional, default value is the current date.")
  public String getBookingDate() {
    return bookingDate;
  }

  public void setBookingDate(String bookingDate) {
    this.bookingDate = bookingDate;
  }

  public NewTransaction valueDate(String valueDate) {
    this.valueDate = valueDate;
    return this;
  }

   /**
   * Value date in the format &#39;YYYY-MM-DD&#39;. Optional. Default value: Same as the booking date.
   * @return valueDate
  **/
  @ApiModelProperty(example = "2018-01-01", value = "Value date in the format 'YYYY-MM-DD'. Optional. Default value: Same as the booking date.")
  public String getValueDate() {
    return valueDate;
  }

  public void setValueDate(String valueDate) {
    this.valueDate = valueDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewTransaction newTransaction = (NewTransaction) o;
    return Objects.equals(this.amount, newTransaction.amount) &&
        Objects.equals(this.purpose, newTransaction.purpose) &&
        Objects.equals(this.counterpart, newTransaction.counterpart) &&
        Objects.equals(this.counterpartIban, newTransaction.counterpartIban) &&
        Objects.equals(this.counterpartBlz, newTransaction.counterpartBlz) &&
        Objects.equals(this.counterpartBic, newTransaction.counterpartBic) &&
        Objects.equals(this.counterpartAccountNumber, newTransaction.counterpartAccountNumber) &&
        Objects.equals(this.bookingDate, newTransaction.bookingDate) &&
        Objects.equals(this.valueDate, newTransaction.valueDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, purpose, counterpart, counterpartIban, counterpartBlz, counterpartBic, counterpartAccountNumber, bookingDate, valueDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewTransaction {\n");
    
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    purpose: ").append(toIndentedString(purpose)).append("\n");
    sb.append("    counterpart: ").append(toIndentedString(counterpart)).append("\n");
    sb.append("    counterpartIban: ").append(toIndentedString(counterpartIban)).append("\n");
    sb.append("    counterpartBlz: ").append(toIndentedString(counterpartBlz)).append("\n");
    sb.append("    counterpartBic: ").append(toIndentedString(counterpartBic)).append("\n");
    sb.append("    counterpartAccountNumber: ").append(toIndentedString(counterpartAccountNumber)).append("\n");
    sb.append("    bookingDate: ").append(toIndentedString(bookingDate)).append("\n");
    sb.append("    valueDate: ").append(toIndentedString(valueDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

