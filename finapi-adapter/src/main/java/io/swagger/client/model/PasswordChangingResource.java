/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Password changing details
 */
@ApiModel(description = "Password changing details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-17T14:26:47.047Z")
public class PasswordChangingResource {
  @SerializedName("userId")
  private String userId = null;

  @SerializedName("userEmail")
  private String userEmail = null;

  @SerializedName("passwordChangeToken")
  private String passwordChangeToken = null;

  public PasswordChangingResource userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * User identifier
   * @return userId
  **/
  @ApiModelProperty(example = "null", required = true, value = "User identifier")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public PasswordChangingResource userEmail(String userEmail) {
    this.userEmail = userEmail;
    return this;
  }

   /**
   * User's email, encrypted. Decrypt with your data decryption key. If the user has no email set, then this field will be null.
   * @return userEmail
  **/
  @ApiModelProperty(example = "null", value = "User's email, encrypted. Decrypt with your data decryption key. If the user has no email set, then this field will be null.")
  public String getUserEmail() {
    return userEmail;
  }

  public void setUserEmail(String userEmail) {
    this.userEmail = userEmail;
  }

  public PasswordChangingResource passwordChangeToken(String passwordChangeToken) {
    this.passwordChangeToken = passwordChangeToken;
    return this;
  }

   /**
   * Encrypted password change token. Decrypt this token with your data decryption key, and pass the decrypted token to the /users/executePasswordChange service in order to set a new password for the user.
   * @return passwordChangeToken
  **/
  @ApiModelProperty(example = "null", required = true, value = "Encrypted password change token. Decrypt this token with your data decryption key, and pass the decrypted token to the /users/executePasswordChange service in order to set a new password for the user.")
  public String getPasswordChangeToken() {
    return passwordChangeToken;
  }

  public void setPasswordChangeToken(String passwordChangeToken) {
    this.passwordChangeToken = passwordChangeToken;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PasswordChangingResource passwordChangingResource = (PasswordChangingResource) o;
    return Objects.equals(this.userId, passwordChangingResource.userId) &&
        Objects.equals(this.userEmail, passwordChangingResource.userEmail) &&
        Objects.equals(this.passwordChangeToken, passwordChangingResource.passwordChangeToken);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, userEmail, passwordChangeToken);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PasswordChangingResource {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userEmail: ").append(toIndentedString(userEmail)).append("\n");
    sb.append("    passwordChangeToken: ").append(toIndentedString(passwordChangeToken)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

