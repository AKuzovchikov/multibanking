/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Container for a status of bank connection update
 */
@ApiModel(description = "Container for a status of bank connection update")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-17T14:26:47.047Z")
public class InlineResponse2005LastManualUpdate {
  /**
   * Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.
   */
  public enum ResultEnum {
    @SerializedName("OK")
    OK("OK"),
    
    @SerializedName("BANK_SERVER_REJECTION")
    BANK_SERVER_REJECTION("BANK_SERVER_REJECTION"),
    
    @SerializedName("INTERNAL_SERVER_ERROR")
    INTERNAL_SERVER_ERROR("INTERNAL_SERVER_ERROR");

    private String value;

    ResultEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("result")
  private ResultEnum result = null;

  @SerializedName("errorMessage")
  private String errorMessage = null;

  /**
   * In case the update result is not <code>OK</code>, this field contains the type of the error that occurred. BUSINESS means that the bank server responded with a non-technical error message for the user. TECHNICAL means that some internal error has occurred in finAPI or at the bank server.
   */
  public enum ErrorTypeEnum {
    @SerializedName("BUSINESS")
    BUSINESS("BUSINESS"),
    
    @SerializedName("TECHNICAL")
    TECHNICAL("TECHNICAL");

    private String value;

    ErrorTypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("errorType")
  private ErrorTypeEnum errorType = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  public InlineResponse2005LastManualUpdate result(ResultEnum result) {
    this.result = result;
    return this;
  }

   /**
   * Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.
   * @return result
  **/
  @ApiModelProperty(example = "null", required = true, value = "Note that 'OK' just means that finAPI could successfully connect and log in to the bank server. However, it does not necessarily mean that all accounts could be updated successfully. For the latter, please refer to the 'status' field of the Account resource.")
  public ResultEnum getResult() {
    return result;
  }

  public void setResult(ResultEnum result) {
    this.result = result;
  }

  public InlineResponse2005LastManualUpdate errorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
    return this;
  }

   /**
   * In case the update result is not <code>OK</code>, this field may contain an error message with details about why the update failed (it is not guaranteed that a message is available though). In case the update result is <code>OK</code>, the field will always be null.
   * @return errorMessage
  **/
  @ApiModelProperty(example = "null", value = "In case the update result is not <code>OK</code>, this field may contain an error message with details about why the update failed (it is not guaranteed that a message is available though). In case the update result is <code>OK</code>, the field will always be null.")
  public String getErrorMessage() {
    return errorMessage;
  }

  public void setErrorMessage(String errorMessage) {
    this.errorMessage = errorMessage;
  }

  public InlineResponse2005LastManualUpdate errorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
    return this;
  }

   /**
   * In case the update result is not <code>OK</code>, this field contains the type of the error that occurred. BUSINESS means that the bank server responded with a non-technical error message for the user. TECHNICAL means that some internal error has occurred in finAPI or at the bank server.
   * @return errorType
  **/
  @ApiModelProperty(example = "null", value = "In case the update result is not <code>OK</code>, this field contains the type of the error that occurred. BUSINESS means that the bank server responded with a non-technical error message for the user. TECHNICAL means that some internal error has occurred in finAPI or at the bank server.")
  public ErrorTypeEnum getErrorType() {
    return errorType;
  }

  public void setErrorType(ErrorTypeEnum errorType) {
    this.errorType = errorType;
  }

  public InlineResponse2005LastManualUpdate timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Time of the update. The value is returned in the format 'yyyy-MM-dd HH:mm:ss.SSS' (german time).
   * @return timestamp
  **/
  @ApiModelProperty(example = "null", required = true, value = "Time of the update. The value is returned in the format 'yyyy-MM-dd HH:mm:ss.SSS' (german time).")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InlineResponse2005LastManualUpdate inlineResponse2005LastManualUpdate = (InlineResponse2005LastManualUpdate) o;
    return Objects.equals(this.result, inlineResponse2005LastManualUpdate.result) &&
        Objects.equals(this.errorMessage, inlineResponse2005LastManualUpdate.errorMessage) &&
        Objects.equals(this.errorType, inlineResponse2005LastManualUpdate.errorType) &&
        Objects.equals(this.timestamp, inlineResponse2005LastManualUpdate.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(result, errorMessage, errorType, timestamp);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InlineResponse2005LastManualUpdate {\n");
    
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    errorMessage: ").append(toIndentedString(errorMessage)).append("\n");
    sb.append("    errorType: ").append(toIndentedString(errorType)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

