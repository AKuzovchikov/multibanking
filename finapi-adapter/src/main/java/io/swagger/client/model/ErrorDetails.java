/*
 * finAPI RESTful Services
 * finAPI RESTful Services
 *
 * OpenAPI spec version: v1.20.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Error details
 */
@ApiModel(description = "Error details")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-17T14:26:47.047Z")
public class ErrorDetails {
  @SerializedName("message")
  private String message = null;

  /**
   * Error code. See the documentation of the individual services for details about what values may be returned.
   */
  public enum CodeEnum {
    @SerializedName("MISSING_FIELD")
    MISSING_FIELD("MISSING_FIELD"),
    
    @SerializedName("UNKNOWN_ENTITY")
    UNKNOWN_ENTITY("UNKNOWN_ENTITY"),
    
    @SerializedName("METHOD_NOT_ALLOWED")
    METHOD_NOT_ALLOWED("METHOD_NOT_ALLOWED"),
    
    @SerializedName("ENTITY_EXISTS")
    ENTITY_EXISTS("ENTITY_EXISTS"),
    
    @SerializedName("ILLEGAL_ENTITY_STATE")
    ILLEGAL_ENTITY_STATE("ILLEGAL_ENTITY_STATE"),
    
    @SerializedName("UNEXPECTED_ERROR")
    UNEXPECTED_ERROR("UNEXPECTED_ERROR"),
    
    @SerializedName("ILLEGAL_FIELD_VALUE")
    ILLEGAL_FIELD_VALUE("ILLEGAL_FIELD_VALUE"),
    
    @SerializedName("UNAUTHORIZED_ACCESS")
    UNAUTHORIZED_ACCESS("UNAUTHORIZED_ACCESS"),
    
    @SerializedName("BAD_REQUEST")
    BAD_REQUEST("BAD_REQUEST"),
    
    @SerializedName("UNSUPPORTED_ORDER")
    UNSUPPORTED_ORDER("UNSUPPORTED_ORDER"),
    
    @SerializedName("ILLEGAL_PAGE_SIZE")
    ILLEGAL_PAGE_SIZE("ILLEGAL_PAGE_SIZE"),
    
    @SerializedName("INVALID_FILTER_OPTIONS")
    INVALID_FILTER_OPTIONS("INVALID_FILTER_OPTIONS"),
    
    @SerializedName("TOO_MANY_IDS")
    TOO_MANY_IDS("TOO_MANY_IDS"),
    
    @SerializedName("BANK_SERVER_REJECTION")
    BANK_SERVER_REJECTION("BANK_SERVER_REJECTION"),
    
    @SerializedName("IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED")
    IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED("IBAN_ONLY_MONEY_TRANSFER_NOT_SUPPORTED"),
    
    @SerializedName("COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED")
    COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED("COLLECTIVE_MONEY_TRANSFER_NOT_SUPPORTED"),
    
    @SerializedName("INVALID_TWO_STEP_PROCEDURE")
    INVALID_TWO_STEP_PROCEDURE("INVALID_TWO_STEP_PROCEDURE"),
    
    @SerializedName("MISSING_TWO_STEP_PROCEDURE")
    MISSING_TWO_STEP_PROCEDURE("MISSING_TWO_STEP_PROCEDURE"),
    
    @SerializedName("UNSUPPORTED_MEDIA_TYPE")
    UNSUPPORTED_MEDIA_TYPE("UNSUPPORTED_MEDIA_TYPE"),
    
    @SerializedName("UNSUPPORTED_BANK")
    UNSUPPORTED_BANK("UNSUPPORTED_BANK"),
    
    @SerializedName("USER_NOT_VERIFIED")
    USER_NOT_VERIFIED("USER_NOT_VERIFIED"),
    
    @SerializedName("USER_ALREADY_VERIFIED")
    USER_ALREADY_VERIFIED("USER_ALREADY_VERIFIED"),
    
    @SerializedName("INVALID_TOKEN")
    INVALID_TOKEN("INVALID_TOKEN"),
    
    @SerializedName("LOCKED")
    LOCKED("LOCKED"),
    
    @SerializedName("NO_ACCOUNTS_FOR_TYPE_LIST")
    NO_ACCOUNTS_FOR_TYPE_LIST("NO_ACCOUNTS_FOR_TYPE_LIST"),
    
    @SerializedName("FORBIDDEN")
    FORBIDDEN("FORBIDDEN");

    private String value;

    CodeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("code")
  private CodeEnum code = null;

  /**
   * Error type. BUSINESS errors depict German error messages for the user, e.g. from a bank server. TECHNICAL errors depict internal errors.
   */
  public enum TypeEnum {
    @SerializedName("BUSINESS")
    BUSINESS("BUSINESS"),
    
    @SerializedName("TECHNICAL")
    TECHNICAL("TECHNICAL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public ErrorDetails message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Error message
   * @return message
  **/
  @ApiModelProperty(example = "null", value = "Error message")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public ErrorDetails code(CodeEnum code) {
    this.code = code;
    return this;
  }

   /**
   * Error code. See the documentation of the individual services for details about what values may be returned.
   * @return code
  **/
  @ApiModelProperty(example = "null", value = "Error code. See the documentation of the individual services for details about what values may be returned.")
  public CodeEnum getCode() {
    return code;
  }

  public void setCode(CodeEnum code) {
    this.code = code;
  }

  public ErrorDetails type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Error type. BUSINESS errors depict German error messages for the user, e.g. from a bank server. TECHNICAL errors depict internal errors.
   * @return type
  **/
  @ApiModelProperty(example = "null", value = "Error type. BUSINESS errors depict German error messages for the user, e.g. from a bank server. TECHNICAL errors depict internal errors.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErrorDetails errorDetails = (ErrorDetails) o;
    return Objects.equals(this.message, errorDetails.message) &&
        Objects.equals(this.code, errorDetails.code) &&
        Objects.equals(this.type, errorDetails.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, code, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErrorDetails {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

